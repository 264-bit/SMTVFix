#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BattleTargetSelect

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_BattleTargetSelect.BPI_BattleTargetSelect_C
// 0x0000 (0x0028 - 0x0028)
class IBPI_BattleTargetSelect_C final : public IInterface
{
public:
	void BI_GetCurrentTargetType(E_SKILL_TARGET* TargetType);
	void BI_CalcLookAtGlobalPos(E_SKILL_TARGET TargetType, class FName SocketName, struct FVector* GlobalPos, bool* IsValid);
	void BI_GetInvTargetIndex(int32* TargetIndex);
	void BI_DrawClearAll(bool* NoUse);
	void BI_SetInvTargetIndex(int32 TargetIndex, bool* NoUse);
	void BI_SetOverrideCommandCamera(bool IsOverride, bool* NoUse);
	void BI_IsOverrideCommandCamera(bool* IsOverride);
	void BI_SetPlayerTargetIndex(int32 PartyIndex, bool* NoUse);
	void BI_SetTargetType_Item(int32 ItemId, bool* NoUse);
	void BI_SetTargetType_Skill(int32 SkillId, bool* NoUse);
	void BI_GetCurrentTargetIndex(int32* PartyIndex);
	void BI_SetCureHPExpection_Item(int32 ItemId, int32 UserIndex, bool* NoUse);
	void BI_SetCureHPExpection_Skill(int32 SkillId, int32 UserIndex, bool* NoUse);
	void BI_DirectSelectTargetIndex(int32 PartyIndex);
	void BI_DirectDecideTargetIndex(int32 PartyIndex);
	void BI_IsDirectDicided(bool* IsDecided);
	void BI_ResetDirectDicided();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_BattleTargetSelect_C">();
	}
	static class IBPI_BattleTargetSelect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_BattleTargetSelect_C>();
	}
};
static_assert(alignof(IBPI_BattleTargetSelect_C) == 0x000008, "Wrong alignment on IBPI_BattleTargetSelect_C");
static_assert(sizeof(IBPI_BattleTargetSelect_C) == 0x000028, "Wrong size on IBPI_BattleTargetSelect_C");

}

