#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_DevilAssetTable

#include "Basic.hpp"

#include "BPL_DevilAssetTable_classes.hpp"
#include "BPL_DevilAssetTable_parameters.hpp"


namespace SDK
{

// Function BPL_DevilAssetTable.BPL_DevilAssetTable_C.GetDevilAssetClassData
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   EnemyID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             ClassAssetID                                           (Parm, OutParm, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             PlayerBaseAssetID                                      (Parm, OutParm, HasGetValueTypeHash)

void UBPL_DevilAssetTable_C::GetDevilAssetClassData(int32 EnemyID, class UObject* __WorldContext, TSoftClassPtr<class UClass>* ClassAssetID, TSoftClassPtr<class UClass>* PlayerBaseAssetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_DevilAssetTable_C", "GetDevilAssetClassData");

	Params::BPL_DevilAssetTable_C_GetDevilAssetClassData Parms{};

	Parms.EnemyID = EnemyID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ClassAssetID != nullptr)
		*ClassAssetID = Parms.ClassAssetID;

	if (PlayerBaseAssetID != nullptr)
		*PlayerBaseAssetID = Parms.PlayerBaseAssetID;
}


// Function BPL_DevilAssetTable.BPL_DevilAssetTable_C.GetDevilPostData
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   EnemyID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_DevilPostData                PostData                                               (Parm, OutParm, HasGetValueTypeHash)

void UBPL_DevilAssetTable_C::GetDevilPostData(int32 EnemyID, class UObject* __WorldContext, struct FST_DevilPostData* PostData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_DevilAssetTable_C", "GetDevilPostData");

	Params::BPL_DevilAssetTable_C_GetDevilPostData Parms{};

	Parms.EnemyID = EnemyID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PostData != nullptr)
		*PostData = std::move(Parms.PostData);
}


// Function BPL_DevilAssetTable.BPL_DevilAssetTable_C.GetDevilAssetTableInstance
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_DevilAssetTableInstanceAccessor_C>Instance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_DevilAssetTable_C::GetDevilAssetTableInstance(class UObject* __WorldContext, TScriptInterface<class IBPI_DevilAssetTableInstanceAccessor_C>* Instance, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_DevilAssetTable_C", "GetDevilAssetTableInstance");

	Params::BPL_DevilAssetTable_C_GetDevilAssetTableInstance Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Instance != nullptr)
		*Instance = Parms.Instance;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BPL_DevilAssetTable.BPL_DevilAssetTable_C.FindAssetData
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EnemyID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDevilAssetTable_Raw             AssetData                                              (Parm, OutParm)

void UBPL_DevilAssetTable_C::FindAssetData(int32 EnemyID, class UObject* __WorldContext, struct FDevilAssetTable_Raw* AssetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_DevilAssetTable_C", "FindAssetData");

	Params::BPL_DevilAssetTable_C_FindAssetData Parms{};

	Parms.EnemyID = EnemyID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AssetData != nullptr)
		*AssetData = std::move(Parms.AssetData);
}

}

