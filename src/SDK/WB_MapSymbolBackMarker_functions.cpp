#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MapSymbolBackMarker

#include "Basic.hpp"

#include "WB_MapSymbolBackMarker_classes.hpp"
#include "WB_MapSymbolBackMarker_parameters.hpp"


namespace SDK
{

// Function WB_MapSymbolBackMarker.WB_MapSymbolBackMarker_C.ExecuteUbergraph_WB_MapSymbolBackMarker
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MapSymbolBackMarker_C::ExecuteUbergraph_WB_MapSymbolBackMarker(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSymbolBackMarker_C", "ExecuteUbergraph_WB_MapSymbolBackMarker");

	Params::WB_MapSymbolBackMarker_C_ExecuteUbergraph_WB_MapSymbolBackMarker Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MapSymbolBackMarker.WB_MapSymbolBackMarker_C.SetSymbolLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SymbolLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MapSymbolBackMarker_C::SetSymbolLocation(const struct FVector& SymbolLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSymbolBackMarker_C", "SetSymbolLocation");

	Params::WB_MapSymbolBackMarker_C_SetSymbolLocation Parms{};

	Parms.SymbolLocation = std::move(SymbolLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MapSymbolBackMarker.WB_MapSymbolBackMarker_C.GetCrossPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Line1                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Line2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Line3                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Line4                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Cross                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_MapSymbolBackMarker_C::GetCrossPoint(const struct FVector2D& Line1, const struct FVector2D& Line2, const struct FVector2D& Line3, const struct FVector2D& Line4, struct FVector2D* Cross, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSymbolBackMarker_C", "GetCrossPoint");

	Params::WB_MapSymbolBackMarker_C_GetCrossPoint Parms{};

	Parms.Line1 = std::move(Line1);
	Parms.Line2 = std::move(Line2);
	Parms.Line3 = std::move(Line3);
	Parms.Line4 = std::move(Line4);

	UObject::ProcessEvent(Func, &Parms);

	if (Cross != nullptr)
		*Cross = std::move(Parms.Cross);

	if (Success != nullptr)
		*Success = Parms.Success;
}

}

