#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SymbolRoute

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SymbolRoute.BP_SymbolRoute_C
// 0x0040 (0x0260 - 0x0220)
class ABP_SymbolRoute_C final : public AActor
{
public:
	class UBoxComponent*                          Box;                                               // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TracePoint;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocalLocation;                                  // 0x0240(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitSize;                                           // 0x024C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitView;                                           // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();
	void CheckWithinRange(const struct FVector& OtherNodePos, bool* WithinRange);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SymbolRoute_C">();
	}
	static class ABP_SymbolRoute_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SymbolRoute_C>();
	}
};
static_assert(alignof(ABP_SymbolRoute_C) == 0x000008, "Wrong alignment on ABP_SymbolRoute_C");
static_assert(sizeof(ABP_SymbolRoute_C) == 0x000260, "Wrong size on ABP_SymbolRoute_C");
static_assert(offsetof(ABP_SymbolRoute_C, Box) == 0x000220, "Member 'ABP_SymbolRoute_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_SymbolRoute_C, Arrow) == 0x000228, "Member 'ABP_SymbolRoute_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_SymbolRoute_C, TracePoint) == 0x000230, "Member 'ABP_SymbolRoute_C::TracePoint' has a wrong offset!");
static_assert(offsetof(ABP_SymbolRoute_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_SymbolRoute_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SymbolRoute_C, HitLocalLocation) == 0x000240, "Member 'ABP_SymbolRoute_C::HitLocalLocation' has a wrong offset!");
static_assert(offsetof(ABP_SymbolRoute_C, HitSize) == 0x00024C, "Member 'ABP_SymbolRoute_C::HitSize' has a wrong offset!");
static_assert(offsetof(ABP_SymbolRoute_C, HitView) == 0x000258, "Member 'ABP_SymbolRoute_C::HitView' has a wrong offset!");

}

