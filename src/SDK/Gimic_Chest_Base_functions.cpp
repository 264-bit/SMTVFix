#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Gimic_Chest_Base

#include "Basic.hpp"

#include "Gimic_Chest_Base_classes.hpp"
#include "Gimic_Chest_Base_parameters.hpp"


namespace SDK
{

// Function Gimic_Chest_Base.Gimic_Chest_Base_C.ExecuteUbergraph_Gimic_Chest_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGimic_Chest_Base_C::ExecuteUbergraph_Gimic_Chest_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "ExecuteUbergraph_Gimic_Chest_Base");

	Params::Gimic_Chest_Base_C_ExecuteUbergraph_Gimic_Chest_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnStartBattle
// (BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::OnStartBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "OnStartBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnEndAreaInit
// (BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::OnEndAreaInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "OnEndAreaInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnEndBattle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_END                               BtlEndType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChainEncountNum                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGimic_Chest_Base_C::OnEndBattle(E_BTL_END BtlEndType, int32 ChainEncountNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "OnEndBattle");

	Params::Gimic_Chest_Base_C_OnEndBattle Parms{};

	Parms.BtlEndType = BtlEndType;
	Parms.ChainEncountNum = ChainEncountNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.AfterLoad
// (BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::AfterLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "AfterLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_DestroyPiece
// (Public, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::BPI_DestroyPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_DestroyPiece");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGimic_Chest_Base_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "ReceiveEndPlay");

	Params::Gimic_Chest_Base_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_HideGimmick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MapGimmickHideReason                  Param_HideReason                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGimic_Chest_Base_C::BPI_HideGimmick(E_MapGimmickHideReason Param_HideReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_HideGimmick");

	Params::Gimic_Chest_Base_C_BPI_HideGimmick Parms{};

	Parms.Param_HideReason = Param_HideReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_ShowGimmick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MapGimmickHideReason                  Param_HideReason                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGimic_Chest_Base_C::BPI_ShowGimmick(E_MapGimmickHideReason Param_HideReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_ShowGimmick");

	Params::Gimic_Chest_Base_C_BPI_ShowGimmick Parms{};

	Parms.Param_HideReason = Param_HideReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_CalledInfo_ByPiece
// (Public, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::BPI_CalledInfo_ByPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_CalledInfo_ByPiece");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_DestroyTakara_ByPiece
// (Public, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::BPI_DestroyTakara_ByPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_DestroyTakara_ByPiece");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CallWhenClearedMesh
// (BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::CallWhenClearedMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "CallWhenClearedMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_SetTakaraPiece
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_MovePiece                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGimic_Chest_Base_C::BPI_SetTakaraPiece(class AActor* Param_MovePiece)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_SetTakaraPiece");

	Params::Gimic_Chest_Base_C_BPI_SetTakaraPiece Parms{};

	Parms.Param_MovePiece = Param_MovePiece;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.EvtDis_Hide_
// (BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::EvtDis_Hide_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "EvtDis_Hide_");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.EvtDis_Show_
// (BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::EvtDis_Show_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "EvtDis_Show_");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_ReceiveMapAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMapAttackDamageData             MapAttackData                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void AGimic_Chest_Base_C::BPI_ReceiveMapAttack(const struct FMapAttackDamageData& MapAttackData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_ReceiveMapAttack");

	Params::Gimic_Chest_Base_C_BPI_ReceiveMapAttack Parms{};

	Parms.MapAttackData = std::move(MapAttackData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnRotateStarted
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::OnRotateStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "OnRotateStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnRotateFinished
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSkipped                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::OnRotateFinished(bool IsSkipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "OnRotateFinished");

	Params::Gimic_Chest_Base_C_OnRotateFinished Parms{};

	Parms.IsSkipped = IsSkipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnLoaded_000CEC1647E4F09283905AA669A9A431
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void AGimic_Chest_Base_C::OnLoaded_000CEC1647E4F09283905AA669A9A431(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "OnLoaded_000CEC1647E4F09283905AA669A9A431");

	Params::Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA669A9A431 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.OnLoaded_000CEC1647E4F09283905AA6D49CDA93
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void AGimic_Chest_Base_C::OnLoaded_000CEC1647E4F09283905AA6D49CDA93(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "OnLoaded_000CEC1647E4F09283905AA6D49CDA93");

	Params::Gimic_Chest_Base_C_OnLoaded_000CEC1647E4F09283905AA6D49CDA93 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.Timeline_Clear__UpdateFunc
// (BlueprintEvent)

void AGimic_Chest_Base_C::Timeline_Clear__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "Timeline_Clear__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.Timeline_Clear__FinishedFunc
// (BlueprintEvent)

void AGimic_Chest_Base_C::Timeline_Clear__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "Timeline_Clear__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.IsLimitCore
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   StrT                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MgiT                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   VitT                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AgiT                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LucT                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLimit                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Log                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AGimic_Chest_Base_C::IsLimitCore(int32 Enable, int32 StrT, int32 MgiT, int32 VitT, int32 AgiT, int32 LucT, bool* IsLimit, class FString* Log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "IsLimitCore");

	Params::Gimic_Chest_Base_C_IsLimitCore Parms{};

	Parms.Enable = Enable;
	Parms.StrT = StrT;
	Parms.MgiT = MgiT;
	Parms.VitT = VitT;
	Parms.AgiT = AgiT;
	Parms.LucT = LucT;

	UObject::ProcessEvent(Func, &Parms);

	if (IsLimit != nullptr)
		*IsLimit = Parms.IsLimit;

	if (Log != nullptr)
		*Log = std::move(Parms.Log);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.GetPieceSpawnPos
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Pos                                                    (Parm, OutParm, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::GetPieceSpawnPos(struct FTransform* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "GetPieceSpawnPos");

	Params::Gimic_Chest_Base_C_GetPieceSpawnPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.ResetMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::ResetMesh(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "ResetMesh");

	Params::Gimic_Chest_Base_C_ResetMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CalcSuichoku
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::CalcSuichoku()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "CalcSuichoku");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CalcKatamukeru
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::CalcKatamukeru()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "CalcKatamukeru");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.SaveOpenFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::SaveOpenFlag(bool Sw, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "SaveOpenFlag");

	Params::Gimic_Chest_Base_C_SaveOpenFlag Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CheckOpenFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Exist                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::CheckOpenFlag(bool* Exist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "CheckOpenFlag");

	Params::Gimic_Chest_Base_C_CheckOpenFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Exist != nullptr)
		*Exist = Parms.Exist;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.PlayBreakSE
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::PlayBreakSE(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "PlayBreakSE");

	Params::Gimic_Chest_Base_C_PlayBreakSE Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CalcPiece
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::CalcPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "CalcPiece");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.Can Open Check Room Rotate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Original                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::Can_Open_Check_Room_Rotate(bool* Original)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "Can Open Check Room Rotate");

	Params::Gimic_Chest_Base_C_Can_Open_Check_Room_Rotate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Original != nullptr)
		*Original = Parms.Original;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.InitIcon
// (Public, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::InitIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "InitIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.CalcCeiling
// (Public, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::CalcCeiling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "CalcCeiling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.EndIcon
// (Public, BlueprintCallable, BlueprintEvent)

void AGimic_Chest_Base_C::EndIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "EndIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_GetDebugMemo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Memo                                                   (Parm, OutParm)

void AGimic_Chest_Base_C::BPI_GetDebugMemo(class FText* Memo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_GetDebugMemo");

	Params::Gimic_Chest_Base_C_BPI_GetDebugMemo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Memo != nullptr)
		*Memo = std::move(Parms.Memo);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_ChangeTakaraFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::BPI_ChangeTakaraFlag(bool Sw, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_ChangeTakaraFlag");

	Params::Gimic_Chest_Base_C_BPI_ChangeTakaraFlag Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_GetTakaraId
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TakaraID                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGimic_Chest_Base_C::BPI_GetTakaraId(int32* TakaraID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_GetTakaraId");

	Params::Gimic_Chest_Base_C_BPI_GetTakaraId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TakaraID != nullptr)
		*TakaraID = Parms.TakaraID;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_ChangeTakaraBreakFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::BPI_ChangeTakaraBreakFlag(bool Sw, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_ChangeTakaraBreakFlag");

	Params::Gimic_Chest_Base_C_BPI_ChangeTakaraBreakFlag Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.BPI_GetMovePiece
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_MovePiece                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGimic_Chest_Base_C::BPI_GetMovePiece(class AActor** Param_MovePiece)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "BPI_GetMovePiece");

	Params::Gimic_Chest_Base_C_BPI_GetMovePiece Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MovePiece != nullptr)
		*Param_MovePiece = Parms.Param_MovePiece;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.SetMinimapIconTableRow
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMinimapIconTableRow             OutRow                                                 (Parm, OutParm)
// bool                                    NeedToAddMore                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::SetMinimapIconTableRow(int32 Param_Index, struct FMinimapIconTableRow* OutRow, bool* NeedToAddMore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "SetMinimapIconTableRow");

	Params::Gimic_Chest_Base_C_SetMinimapIconTableRow Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);

	if (NeedToAddMore != nullptr)
		*NeedToAddMore = Parms.NeedToAddMore;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.SetRoomRotator
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADG_RoomRotator*                  Param_RoomRotator                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGimic_Chest_Base_C::SetRoomRotator(class ADG_RoomRotator* Param_RoomRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "SetRoomRotator");

	Params::Gimic_Chest_Base_C_SetRoomRotator Parms{};

	Parms.Param_RoomRotator = Param_RoomRotator;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.GetRoomRotator
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADG_RoomRotator*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class ADG_RoomRotator* AGimic_Chest_Base_C::GetRoomRotator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "GetRoomRotator");

	Params::Gimic_Chest_Base_C_GetRoomRotator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AGimic_Chest_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.FlagCh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    OK                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGimic_Chest_Base_C::FlagCh(bool* OK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "FlagCh");

	Params::Gimic_Chest_Base_C_FlagCh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OK != nullptr)
		*OK = Parms.OK;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.GetGazeTargetType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EGazeTargetType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EGazeTargetType AGimic_Chest_Base_C::GetGazeTargetType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "GetGazeTargetType");

	Params::Gimic_Chest_Base_C_GetGazeTargetType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Gimic_Chest_Base.Gimic_Chest_Base_C.GetGazeTargetLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AGimic_Chest_Base_C::GetGazeTargetLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimic_Chest_Base_C", "GetGazeTargetLocation");

	Params::Gimic_Chest_Base_C_GetGazeTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

