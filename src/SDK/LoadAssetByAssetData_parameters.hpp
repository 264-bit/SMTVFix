#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoadAssetByAssetData

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LoadAssetByAssetData.AssetDataAsyncLoader.LoadAssetData
// 0x0090 (0x0090 - 0x0000)
struct AssetDataAsyncLoader_LoadAssetData final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAssetData                             AssetData;                                         // 0x0008(0x0060)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Loaded)>        OnLoaded;                                          // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0078(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AssetDataAsyncLoader_LoadAssetData) == 0x000008, "Wrong alignment on AssetDataAsyncLoader_LoadAssetData");
static_assert(sizeof(AssetDataAsyncLoader_LoadAssetData) == 0x000090, "Wrong size on AssetDataAsyncLoader_LoadAssetData");
static_assert(offsetof(AssetDataAsyncLoader_LoadAssetData, WorldContextObject) == 0x000000, "Member 'AssetDataAsyncLoader_LoadAssetData::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AssetDataAsyncLoader_LoadAssetData, AssetData) == 0x000008, "Member 'AssetDataAsyncLoader_LoadAssetData::AssetData' has a wrong offset!");
static_assert(offsetof(AssetDataAsyncLoader_LoadAssetData, OnLoaded) == 0x000068, "Member 'AssetDataAsyncLoader_LoadAssetData::OnLoaded' has a wrong offset!");
static_assert(offsetof(AssetDataAsyncLoader_LoadAssetData, LatentInfo) == 0x000078, "Member 'AssetDataAsyncLoader_LoadAssetData::LatentInfo' has a wrong offset!");

// Function LoadAssetByAssetData.AssetDataAsyncLoader.LoadClassAssetData
// 0x0090 (0x0090 - 0x0000)
struct AssetDataAsyncLoader_LoadClassAssetData final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAssetData                             AssetData;                                         // 0x0008(0x0060)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> OnLoaded;                                          // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0078(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AssetDataAsyncLoader_LoadClassAssetData) == 0x000008, "Wrong alignment on AssetDataAsyncLoader_LoadClassAssetData");
static_assert(sizeof(AssetDataAsyncLoader_LoadClassAssetData) == 0x000090, "Wrong size on AssetDataAsyncLoader_LoadClassAssetData");
static_assert(offsetof(AssetDataAsyncLoader_LoadClassAssetData, WorldContextObject) == 0x000000, "Member 'AssetDataAsyncLoader_LoadClassAssetData::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AssetDataAsyncLoader_LoadClassAssetData, AssetData) == 0x000008, "Member 'AssetDataAsyncLoader_LoadClassAssetData::AssetData' has a wrong offset!");
static_assert(offsetof(AssetDataAsyncLoader_LoadClassAssetData, OnLoaded) == 0x000068, "Member 'AssetDataAsyncLoader_LoadClassAssetData::OnLoaded' has a wrong offset!");
static_assert(offsetof(AssetDataAsyncLoader_LoadClassAssetData, LatentInfo) == 0x000078, "Member 'AssetDataAsyncLoader_LoadClassAssetData::LatentInfo' has a wrong offset!");

// DelegateFunction LoadAssetByAssetData.AssetDataAsyncLoader.OnAssetDataLoaded__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AssetDataAsyncLoader_OnAssetDataLoaded__DelegateSignature final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AssetDataAsyncLoader_OnAssetDataLoaded__DelegateSignature) == 0x000008, "Wrong alignment on AssetDataAsyncLoader_OnAssetDataLoaded__DelegateSignature");
static_assert(sizeof(AssetDataAsyncLoader_OnAssetDataLoaded__DelegateSignature) == 0x000008, "Wrong size on AssetDataAsyncLoader_OnAssetDataLoaded__DelegateSignature");
static_assert(offsetof(AssetDataAsyncLoader_OnAssetDataLoaded__DelegateSignature, Loaded) == 0x000000, "Member 'AssetDataAsyncLoader_OnAssetDataLoaded__DelegateSignature::Loaded' has a wrong offset!");

// DelegateFunction LoadAssetByAssetData.AssetDataAsyncLoader.OnAssetClassDataLoaded__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AssetDataAsyncLoader_OnAssetClassDataLoaded__DelegateSignature final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AssetDataAsyncLoader_OnAssetClassDataLoaded__DelegateSignature) == 0x000008, "Wrong alignment on AssetDataAsyncLoader_OnAssetClassDataLoaded__DelegateSignature");
static_assert(sizeof(AssetDataAsyncLoader_OnAssetClassDataLoaded__DelegateSignature) == 0x000008, "Wrong size on AssetDataAsyncLoader_OnAssetClassDataLoaded__DelegateSignature");
static_assert(offsetof(AssetDataAsyncLoader_OnAssetClassDataLoaded__DelegateSignature, Loaded) == 0x000000, "Member 'AssetDataAsyncLoader_OnAssetClassDataLoaded__DelegateSignature::Loaded' has a wrong offset!");

}

