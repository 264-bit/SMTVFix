#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DLCAnnouncer

#include "Basic.hpp"

#include "BPI_DLCAnnouncer_classes.hpp"
#include "BPI_DLCAnnouncer_parameters.hpp"


namespace SDK
{

// Function BPI_DLCAnnouncer.BPI_DLCAnnouncer_C.BPI_StartTask_DlcReflectAndAnnounce
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBoot                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DLCAnnouncer_C::BPI_StartTask_DlcReflectAndAnnounce(bool IsBoot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DLCAnnouncer_C", "BPI_StartTask_DlcReflectAndAnnounce");

	Params::BPI_DLCAnnouncer_C_BPI_StartTask_DlcReflectAndAnnounce Parms{};

	Parms.IsBoot = IsBoot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DLCAnnouncer.BPI_DLCAnnouncer_C.BPI_StartTask_OnlyDlcReflect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBoot                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DLCAnnouncer_C::BPI_StartTask_OnlyDlcReflect(bool IsBoot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DLCAnnouncer_C", "BPI_StartTask_OnlyDlcReflect");

	Params::BPI_DLCAnnouncer_C_BPI_StartTask_OnlyDlcReflect Parms{};

	Parms.IsBoot = IsBoot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DLCAnnouncer.BPI_DLCAnnouncer_C.BPI_StartTask_OnlyAnnounce
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_DLCAnnouncer_C::BPI_StartTask_OnlyAnnounce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DLCAnnouncer_C", "BPI_StartTask_OnlyAnnounce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_DLCAnnouncer.BPI_DLCAnnouncer_C.BPI_IsActiveAnnounceTask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActiveTask                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DLCAnnouncer_C::BPI_IsActiveAnnounceTask(bool* IsActiveTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DLCAnnouncer_C", "BPI_IsActiveAnnounceTask");

	Params::BPI_DLCAnnouncer_C_BPI_IsActiveAnnounceTask Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsActiveTask != nullptr)
		*IsActiveTask = Parms.IsActiveTask;
}


// Function BPI_DLCAnnouncer.BPI_DLCAnnouncer_C.BPI_GetDelegateCheckActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DLCAnnouncer_DelegateChecker_C*OutActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DLCAnnouncer_C::BPI_GetDelegateCheckActor(class ABP_DLCAnnouncer_DelegateChecker_C** OutActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DLCAnnouncer_C", "BPI_GetDelegateCheckActor");

	Params::BPI_DLCAnnouncer_C_BPI_GetDelegateCheckActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutActor != nullptr)
		*OutActor = Parms.OutActor;
}

}

