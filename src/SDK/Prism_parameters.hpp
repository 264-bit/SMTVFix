#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prism

#include "Basic.hpp"


namespace SDK::Params
{

// Function Prism.PrismFunctionLibrary.AddMessage
// 0x0020 (0x0020 - 0x0000)
struct PrismFunctionLibrary_AddMessage final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PrismFunctionLibrary_AddMessage) == 0x000008, "Wrong alignment on PrismFunctionLibrary_AddMessage");
static_assert(sizeof(PrismFunctionLibrary_AddMessage) == 0x000020, "Wrong size on PrismFunctionLibrary_AddMessage");
static_assert(offsetof(PrismFunctionLibrary_AddMessage, Key) == 0x000000, "Member 'PrismFunctionLibrary_AddMessage::Key' has a wrong offset!");
static_assert(offsetof(PrismFunctionLibrary_AddMessage, Value) == 0x000010, "Member 'PrismFunctionLibrary_AddMessage::Value' has a wrong offset!");

// Function Prism.PrismFunctionLibrary.PushMessage
// 0x0020 (0x0020 - 0x0000)
struct PrismFunctionLibrary_PushMessage final
{
public:
	class FString                                 EventId;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EventName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PrismFunctionLibrary_PushMessage) == 0x000008, "Wrong alignment on PrismFunctionLibrary_PushMessage");
static_assert(sizeof(PrismFunctionLibrary_PushMessage) == 0x000020, "Wrong size on PrismFunctionLibrary_PushMessage");
static_assert(offsetof(PrismFunctionLibrary_PushMessage, EventId) == 0x000000, "Member 'PrismFunctionLibrary_PushMessage::EventId' has a wrong offset!");
static_assert(offsetof(PrismFunctionLibrary_PushMessage, EventName) == 0x000010, "Member 'PrismFunctionLibrary_PushMessage::EventName' has a wrong offset!");

// Function Prism.PrismFunctionLibrary.SetActive
// 0x0001 (0x0001 - 0x0000)
struct PrismFunctionLibrary_SetActive final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PrismFunctionLibrary_SetActive) == 0x000001, "Wrong alignment on PrismFunctionLibrary_SetActive");
static_assert(sizeof(PrismFunctionLibrary_SetActive) == 0x000001, "Wrong size on PrismFunctionLibrary_SetActive");
static_assert(offsetof(PrismFunctionLibrary_SetActive, bActive) == 0x000000, "Member 'PrismFunctionLibrary_SetActive::bActive' has a wrong offset!");

// Function Prism.PrismFunctionLibrary.SetInFocus
// 0x0001 (0x0001 - 0x0000)
struct PrismFunctionLibrary_SetInFocus final
{
public:
	bool                                          bInFocus;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PrismFunctionLibrary_SetInFocus) == 0x000001, "Wrong alignment on PrismFunctionLibrary_SetInFocus");
static_assert(sizeof(PrismFunctionLibrary_SetInFocus) == 0x000001, "Wrong size on PrismFunctionLibrary_SetInFocus");
static_assert(offsetof(PrismFunctionLibrary_SetInFocus, bInFocus) == 0x000000, "Member 'PrismFunctionLibrary_SetInFocus::bInFocus' has a wrong offset!");

}

