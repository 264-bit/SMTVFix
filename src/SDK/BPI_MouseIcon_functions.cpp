#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_MouseIcon

#include "Basic.hpp"

#include "BPI_MouseIcon_classes.hpp"
#include "BPI_MouseIcon_parameters.hpp"


namespace SDK
{

// Function BPI_MouseIcon.BPI_MouseIcon_C.BPI_SetIconSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTN_ICON_SIZE                         InSize                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_MouseIcon_C::BPI_SetIconSize(E_BTN_ICON_SIZE InSize, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MouseIcon_C", "BPI_SetIconSize");

	Params::BPI_MouseIcon_C_BPI_SetIconSize Parms{};

	Parms.InSize = InSize;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_MouseIcon.BPI_MouseIcon_C.BPI_SetIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTN_HELP_MOUSE_ICON_TYPE              InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_MouseIcon_C::BPI_SetIcon(E_BTN_HELP_MOUSE_ICON_TYPE InType, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MouseIcon_C", "BPI_SetIcon");

	Params::BPI_MouseIcon_C_BPI_SetIcon Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_MouseIcon.BPI_MouseIcon_C.BPI_SetIconColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_MouseIcon_C::BPI_SetIconColor(const struct FLinearColor& InColor, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MouseIcon_C", "BPI_SetIconColor");

	Params::BPI_MouseIcon_C_BPI_SetIconColor Parms{};

	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_MouseIcon.BPI_MouseIcon_C.BPI_SetIconColor_ByActiveState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActiveColor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_MouseIcon_C::BPI_SetIconColor_ByActiveState(bool IsActiveColor, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MouseIcon_C", "BPI_SetIconColor_ByActiveState");

	Params::BPI_MouseIcon_C_BPI_SetIconColor_ByActiveState Parms{};

	Parms.IsActiveColor = IsActiveColor;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}

}

