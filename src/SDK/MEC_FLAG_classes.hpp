#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MEC_FLAG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MEC_BaseTask_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MEC_FLAG.MEC_FLAG_C
// 0x0020 (0x0240 - 0x0220)
class UMEC_FLAG_C final : public UMEC_BaseTask_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_MEC_FLAG_C;                         // 0x0218(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class FName>                           OnFlag;                                            // 0x0220(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           OffFlag;                                           // 0x0230(0x0010)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_MEC_FLAG(int32 EntryPoint);
	void CallTask();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MEC_FLAG_C">();
	}
	static class UMEC_FLAG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMEC_FLAG_C>();
	}
};
static_assert(alignof(UMEC_FLAG_C) == 0x000010, "Wrong alignment on UMEC_FLAG_C");
static_assert(sizeof(UMEC_FLAG_C) == 0x000240, "Wrong size on UMEC_FLAG_C");
static_assert(offsetof(UMEC_FLAG_C, UberGraphFrame_MEC_FLAG_C) == 0x000218, "Member 'UMEC_FLAG_C::UberGraphFrame_MEC_FLAG_C' has a wrong offset!");
static_assert(offsetof(UMEC_FLAG_C, OnFlag) == 0x000220, "Member 'UMEC_FLAG_C::OnFlag' has a wrong offset!");
static_assert(offsetof(UMEC_FLAG_C, OffFlag) == 0x000230, "Member 'UMEC_FLAG_C::OffFlag' has a wrong offset!");

}

