#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BattleField

#include "Basic.hpp"

#include "BPI_BattleField_classes.hpp"
#include "BPI_BattleField_parameters.hpp"


namespace SDK
{

// Function BPI_BattleField.BPI_BattleField_C.BI_GetCommandBoxTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Trans                                                  (Parm, OutParm, IsPlainOldData, NoDestructor)

void IBPI_BattleField_C::BI_GetCommandBoxTransform(struct FTransform* Trans)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleField_C", "BI_GetCommandBoxTransform");

	Params::BPI_BattleField_C_BI_GetCommandBoxTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Trans != nullptr)
		*Trans = std::move(Parms.Trans);
}


// Function BPI_BattleField.BPI_BattleField_C.BI_ReplacePlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           InDevilList                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleField_C::BI_ReplacePlayer(const TArray<int32>& InDevilList, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleField_C", "BI_ReplacePlayer");

	Params::BPI_BattleField_C_BI_ReplacePlayer Parms{};

	Parms.InDevilList = std::move(InDevilList);

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleField.BPI_BattleField_C.BI_IsReplaceFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFinished                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleField_C::BI_IsReplaceFinished(bool* IsFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleField_C", "BI_IsReplaceFinished");

	Params::BPI_BattleField_C_BI_IsReplaceFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFinished != nullptr)
		*IsFinished = Parms.IsFinished;
}


// Function BPI_BattleField.BPI_BattleField_C.BI_GetPlayerReplaceResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<int32, struct FTransform>          TransformMap                                           (Parm, OutParm)

void IBPI_BattleField_C::BI_GetPlayerReplaceResult(TMap<int32, struct FTransform>* TransformMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleField_C", "BI_GetPlayerReplaceResult");

	Params::BPI_BattleField_C_BI_GetPlayerReplaceResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TransformMap != nullptr)
		*TransformMap = std::move(Parms.TransformMap);
}


// Function BPI_BattleField.BPI_BattleField_C.BI_GetAddPost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Output                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleField_C::BI_GetAddPost(int32 Param_Index, class USceneComponent** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleField_C", "BI_GetAddPost");

	Params::BPI_BattleField_C_BI_GetAddPost Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BPI_BattleField.BPI_BattleField_C.PrepareRenzokuBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncountID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEvent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<int32>                           EnemyIds                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    OnlyApplyEncountPostData                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleField_C::PrepareRenzokuBattle(int32 EncountID, bool IsEvent, const TArray<int32>& EnemyIds, bool OnlyApplyEncountPostData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleField_C", "PrepareRenzokuBattle");

	Params::BPI_BattleField_C_PrepareRenzokuBattle Parms{};

	Parms.EncountID = EncountID;
	Parms.IsEvent = IsEvent;
	Parms.EnemyIds = std::move(EnemyIds);
	Parms.OnlyApplyEncountPostData = OnlyApplyEncountPostData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_BattleField.BPI_BattleField_C.GetRenzokuBattleEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ACharaBase_C*>             Enemy                                                  (Parm, OutParm)
// int32                                   EncountID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleField_C::GetRenzokuBattleEnemy(TArray<class ACharaBase_C*>* Enemy, int32* EncountID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleField_C", "GetRenzokuBattleEnemy");

	Params::BPI_BattleField_C_GetRenzokuBattleEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enemy != nullptr)
		*Enemy = std::move(Parms.Enemy);

	if (EncountID != nullptr)
		*EncountID = Parms.EncountID;
}


// Function BPI_BattleField.BPI_BattleField_C.IsEndPrepareRenzokuBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDone                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleField_C::IsEndPrepareRenzokuBattle(bool* IsDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleField_C", "IsEndPrepareRenzokuBattle");

	Params::BPI_BattleField_C_IsEndPrepareRenzokuBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDone != nullptr)
		*IsDone = Parms.IsDone;
}

}

