#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MinimapRadar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_MinimapRadar.WB_MinimapRadar_C
// 0x0038 (0x0298 - 0x0260)
class UWB_MinimapRadar_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           CanvasForSlate;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ForCachedGeometry;                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ImageOverlay;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWB_MinimapRadarIcon_C*>         EffectArray;                                       // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         ENTRY_MAX;                                         // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_MinimapRadar(int32 EntryPoint);
	void Construct();
	void CreateData();
	void SetMinimapMode(E_MINIMAP_MODE MinimapMode);
	void UpdateEntries(E_MINIMAP_MODE MinimapMode);
	void Hide();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_MinimapRadar_C">();
	}
	static class UWB_MinimapRadar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_MinimapRadar_C>();
	}
};
static_assert(alignof(UWB_MinimapRadar_C) == 0x000008, "Wrong alignment on UWB_MinimapRadar_C");
static_assert(sizeof(UWB_MinimapRadar_C) == 0x000298, "Wrong size on UWB_MinimapRadar_C");
static_assert(offsetof(UWB_MinimapRadar_C, UberGraphFrame) == 0x000260, "Member 'UWB_MinimapRadar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_MinimapRadar_C, CanvasForSlate) == 0x000268, "Member 'UWB_MinimapRadar_C::CanvasForSlate' has a wrong offset!");
static_assert(offsetof(UWB_MinimapRadar_C, Image_ForCachedGeometry) == 0x000270, "Member 'UWB_MinimapRadar_C::Image_ForCachedGeometry' has a wrong offset!");
static_assert(offsetof(UWB_MinimapRadar_C, ImageOverlay) == 0x000278, "Member 'UWB_MinimapRadar_C::ImageOverlay' has a wrong offset!");
static_assert(offsetof(UWB_MinimapRadar_C, EffectArray) == 0x000280, "Member 'UWB_MinimapRadar_C::EffectArray' has a wrong offset!");
static_assert(offsetof(UWB_MinimapRadar_C, ENTRY_MAX) == 0x000290, "Member 'UWB_MinimapRadar_C::ENTRY_MAX' has a wrong offset!");

}

