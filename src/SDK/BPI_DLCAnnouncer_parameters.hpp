#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DLCAnnouncer

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_DLCAnnouncer.BPI_DLCAnnouncer_C.BPI_StartTask_DlcReflectAndAnnounce
// 0x0001 (0x0001 - 0x0000)
struct BPI_DLCAnnouncer_C_BPI_StartTask_DlcReflectAndAnnounce final
{
public:
	bool                                          IsBoot;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_DLCAnnouncer_C_BPI_StartTask_DlcReflectAndAnnounce) == 0x000001, "Wrong alignment on BPI_DLCAnnouncer_C_BPI_StartTask_DlcReflectAndAnnounce");
static_assert(sizeof(BPI_DLCAnnouncer_C_BPI_StartTask_DlcReflectAndAnnounce) == 0x000001, "Wrong size on BPI_DLCAnnouncer_C_BPI_StartTask_DlcReflectAndAnnounce");
static_assert(offsetof(BPI_DLCAnnouncer_C_BPI_StartTask_DlcReflectAndAnnounce, IsBoot) == 0x000000, "Member 'BPI_DLCAnnouncer_C_BPI_StartTask_DlcReflectAndAnnounce::IsBoot' has a wrong offset!");

// Function BPI_DLCAnnouncer.BPI_DLCAnnouncer_C.BPI_StartTask_OnlyDlcReflect
// 0x0001 (0x0001 - 0x0000)
struct BPI_DLCAnnouncer_C_BPI_StartTask_OnlyDlcReflect final
{
public:
	bool                                          IsBoot;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_DLCAnnouncer_C_BPI_StartTask_OnlyDlcReflect) == 0x000001, "Wrong alignment on BPI_DLCAnnouncer_C_BPI_StartTask_OnlyDlcReflect");
static_assert(sizeof(BPI_DLCAnnouncer_C_BPI_StartTask_OnlyDlcReflect) == 0x000001, "Wrong size on BPI_DLCAnnouncer_C_BPI_StartTask_OnlyDlcReflect");
static_assert(offsetof(BPI_DLCAnnouncer_C_BPI_StartTask_OnlyDlcReflect, IsBoot) == 0x000000, "Member 'BPI_DLCAnnouncer_C_BPI_StartTask_OnlyDlcReflect::IsBoot' has a wrong offset!");

// Function BPI_DLCAnnouncer.BPI_DLCAnnouncer_C.BPI_IsActiveAnnounceTask
// 0x0001 (0x0001 - 0x0000)
struct BPI_DLCAnnouncer_C_BPI_IsActiveAnnounceTask final
{
public:
	bool                                          IsActiveTask;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_DLCAnnouncer_C_BPI_IsActiveAnnounceTask) == 0x000001, "Wrong alignment on BPI_DLCAnnouncer_C_BPI_IsActiveAnnounceTask");
static_assert(sizeof(BPI_DLCAnnouncer_C_BPI_IsActiveAnnounceTask) == 0x000001, "Wrong size on BPI_DLCAnnouncer_C_BPI_IsActiveAnnounceTask");
static_assert(offsetof(BPI_DLCAnnouncer_C_BPI_IsActiveAnnounceTask, IsActiveTask) == 0x000000, "Member 'BPI_DLCAnnouncer_C_BPI_IsActiveAnnounceTask::IsActiveTask' has a wrong offset!");

// Function BPI_DLCAnnouncer.BPI_DLCAnnouncer_C.BPI_GetDelegateCheckActor
// 0x0008 (0x0008 - 0x0000)
struct BPI_DLCAnnouncer_C_BPI_GetDelegateCheckActor final
{
public:
	class ABP_DLCAnnouncer_DelegateChecker_C*     OutActor;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DLCAnnouncer_C_BPI_GetDelegateCheckActor) == 0x000008, "Wrong alignment on BPI_DLCAnnouncer_C_BPI_GetDelegateCheckActor");
static_assert(sizeof(BPI_DLCAnnouncer_C_BPI_GetDelegateCheckActor) == 0x000008, "Wrong size on BPI_DLCAnnouncer_C_BPI_GetDelegateCheckActor");
static_assert(offsetof(BPI_DLCAnnouncer_C_BPI_GetDelegateCheckActor, OutActor) == 0x000000, "Member 'BPI_DLCAnnouncer_C_BPI_GetDelegateCheckActor::OutActor' has a wrong offset!");

}

