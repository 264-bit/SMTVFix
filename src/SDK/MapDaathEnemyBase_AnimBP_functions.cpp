#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapDaathEnemyBase_AnimBP

#include "Basic.hpp"

#include "MapDaathEnemyBase_AnimBP_classes.hpp"
#include "MapDaathEnemyBase_AnimBP_parameters.hpp"


namespace SDK
{

// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.ExecuteUbergraph_MapDaathEnemyBase_AnimBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMapDaathEnemyBase_AnimBP_C::ExecuteUbergraph_MapDaathEnemyBase_AnimBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "ExecuteUbergraph_MapDaathEnemyBase_AnimBP");

	Params::MapDaathEnemyBase_AnimBP_C_ExecuteUbergraph_MapDaathEnemyBase_AnimBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.PlayDeadMotion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::PlayDeadMotion(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "PlayDeadMotion");

	Params::MapDaathEnemyBase_AnimBP_C_PlayDeadMotion Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetHeadIKRotationTick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMapDaathEnemyBase_AnimBP_C::SetHeadIKRotationTick(int32 Param_Index, const struct FRotator& Rotation, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetHeadIKRotationTick");

	Params::MapDaathEnemyBase_AnimBP_C_SetHeadIKRotationTick Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Rotation = std::move(Rotation);
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.CheckActive
// (Public, BlueprintCallable, BlueprintEvent)

void UMapDaathEnemyBase_AnimBP_C::CheckActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "CheckActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.DestroyKeyFree
// (Public, BlueprintCallable, BlueprintEvent)

void UMapDaathEnemyBase_AnimBP_C::DestroyKeyFree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "DestroyKeyFree");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.CallDeactivate
// (Public, BlueprintCallable, BlueprintEvent)

void UMapDaathEnemyBase_AnimBP_C::CallDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "CallDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.BI_ChangeMaterialAlice
// (Public, BlueprintCallable, BlueprintEvent)

void UMapDaathEnemyBase_AnimBP_C::BI_ChangeMaterialAlice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "BI_ChangeMaterialAlice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.BI_RecalcOverlap
// (Public, BlueprintCallable, BlueprintEvent)

void UMapDaathEnemyBase_AnimBP_C::BI_RecalcOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "BI_RecalcOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetRootOffsetEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetRootOffsetEnable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetRootOffsetEnable");

	Params::MapDaathEnemyBase_AnimBP_C_SetRootOffsetEnable Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetRootOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         DeltaRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetRootOffset(const struct FVector& Offset, const struct FRotator& DeltaRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetRootOffset");

	Params::MapDaathEnemyBase_AnimBP_C_SetRootOffset Parms{};

	Parms.Offset = std::move(Offset);
	Parms.DeltaRotation = std::move(DeltaRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetLegIKEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetLegIKEnable(bool Enable, bool Immediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetLegIKEnable");

	Params::MapDaathEnemyBase_AnimBP_C_SetLegIKEnable Parms{};

	Parms.Enable = Enable;
	Parms.Immediately = Immediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetLegIKEffector
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         DeltaRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetLegIKEffector(int32 Param_Index, const struct FVector& Location, const struct FRotator& DeltaRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetLegIKEffector");

	Params::MapDaathEnemyBase_AnimBP_C_SetLegIKEffector Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Location = std::move(Location);
	Parms.DeltaRotation = std::move(DeltaRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetHeadIKInterpSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewSpeed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMapDaathEnemyBase_AnimBP_C::SetHeadIKInterpSpeed(float NewSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetHeadIKInterpSpeed");

	Params::MapDaathEnemyBase_AnimBP_C_SetHeadIKInterpSpeed Parms{};

	Parms.NewSpeed = NewSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.ChangeTwistAsset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMapDaathEnemyBase_AnimBP_C::ChangeTwistAsset(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "ChangeTwistAsset");

	Params::MapDaathEnemyBase_AnimBP_C_ChangeTwistAsset Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.InvalidLookAt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Invalid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::InvalidLookAt(bool Invalid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "InvalidLookAt");

	Params::MapDaathEnemyBase_AnimBP_C_InvalidLookAt Parms{};

	Parms.Invalid = Invalid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetInvalidLegIK
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Invalid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMapDaathEnemyBase_AnimBP_C::SetInvalidLegIK(bool Invalid, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetInvalidLegIK");

	Params::MapDaathEnemyBase_AnimBP_C_SetInvalidLegIK Parms{};

	Parms.Invalid = Invalid;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetWorldOffsetBoneTranses
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FTransform>               Transes                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<float>                           TransAlphas                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UMapDaathEnemyBase_AnimBP_C::SetWorldOffsetBoneTranses(const TArray<struct FTransform>& Transes, const TArray<float>& TransAlphas)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetWorldOffsetBoneTranses");

	Params::MapDaathEnemyBase_AnimBP_C_SetWorldOffsetBoneTranses Parms{};

	Parms.Transes = std::move(Transes);
	Parms.TransAlphas = std::move(TransAlphas);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetEnableBoneTrans
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetEnableBoneTrans(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetEnableBoneTrans");

	Params::MapDaathEnemyBase_AnimBP_C_SetEnableBoneTrans Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetPrimaryWorldOffsetBoneTrans
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Trans                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   BlendAlpha                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMapDaathEnemyBase_AnimBP_C::SetPrimaryWorldOffsetBoneTrans(const struct FTransform& Trans, float BlendAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetPrimaryWorldOffsetBoneTrans");

	Params::MapDaathEnemyBase_AnimBP_C_SetPrimaryWorldOffsetBoneTrans Parms{};

	Parms.Trans = std::move(Trans);
	Parms.BlendAlpha = BlendAlpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetFloatingIKPerch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMapDaathEnemyBase_AnimBP_C::SetFloatingIKPerch(float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetFloatingIKPerch");

	Params::MapDaathEnemyBase_AnimBP_C_SetFloatingIKPerch Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetBodyIKEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetBodyIKEnable(bool Enable, bool Immediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetBodyIKEnable");

	Params::MapDaathEnemyBase_AnimBP_C_SetBodyIKEnable Parms{};

	Parms.Enable = Enable;
	Parms.Immediately = Immediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetLookAtEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetLookAtEnable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetLookAtEnable");

	Params::MapDaathEnemyBase_AnimBP_C_SetLookAtEnable Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetEyeIKRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetEyeIKRotation(int32 Param_Index, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetEyeIKRotation");

	Params::MapDaathEnemyBase_AnimBP_C_SetEyeIKRotation Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetEyeIKEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetEyeIKEnable(bool Enable, bool Immediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetEyeIKEnable");

	Params::MapDaathEnemyBase_AnimBP_C_SetEyeIKEnable Parms{};

	Parms.Enable = Enable;
	Parms.Immediately = Immediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetHeadIKRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetHeadIKRotation(int32 Param_Index, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetHeadIKRotation");

	Params::MapDaathEnemyBase_AnimBP_C_SetHeadIKRotation Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetHeadIKEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SetHeadIKEnable(bool Enable, bool Immediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetHeadIKEnable");

	Params::MapDaathEnemyBase_AnimBP_C_SetHeadIKEnable Parms{};

	Parms.Enable = Enable;
	Parms.Immediately = Immediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SetLegIKTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMapDaathEnemyBase_AnimBP_C::SetLegIKTarget(int32 Param_Index, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SetLegIKTarget");

	Params::MapDaathEnemyBase_AnimBP_C_SetLegIKTarget Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.ConvertR
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::ConvertR(const struct FRotator& In, struct FRotator* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "ConvertR");

	Params::MapDaathEnemyBase_AnimBP_C_ConvertR Parms{};

	Parms.In = std::move(In);

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "AnimGraph");

	Params::MapDaathEnemyBase_AnimBP_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.SpawnReflesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::SpawnReflesh(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "SpawnReflesh");

	Params::MapDaathEnemyBase_AnimBP_C_SpawnReflesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.BI_FadeInBlack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::BI_FadeInBlack(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "BI_FadeInBlack");

	Params::MapDaathEnemyBase_AnimBP_C_BI_FadeInBlack Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.BI_FadeOutBlack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::BI_FadeOutBlack(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "BI_FadeOutBlack");

	Params::MapDaathEnemyBase_AnimBP_C_BI_FadeOutBlack Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.BI_FadeInWhite
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::BI_FadeInWhite(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "BI_FadeInWhite");

	Params::MapDaathEnemyBase_AnimBP_C_BI_FadeInWhite Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.BI_FadeOutWhite
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::BI_FadeOutWhite(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "BI_FadeOutWhite");

	Params::MapDaathEnemyBase_AnimBP_C_BI_FadeOutWhite Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.BI_DeleteScript
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::BI_DeleteScript(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "BI_DeleteScript");

	Params::MapDaathEnemyBase_AnimBP_C_BI_DeleteScript Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.BI_SpawnScript
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::BI_SpawnScript(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "BI_SpawnScript");

	Params::MapDaathEnemyBase_AnimBP_C_BI_SpawnScript Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.BI_CheckActiveArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::BI_CheckActiveArea(bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "BI_CheckActiveArea");

	Params::MapDaathEnemyBase_AnimBP_C_BI_CheckActiveArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.ForceSpawnScript
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::ForceSpawnScript(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "ForceSpawnScript");

	Params::MapDaathEnemyBase_AnimBP_C_ForceSpawnScript Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function MapDaathEnemyBase_AnimBP.MapDaathEnemyBase_AnimBP_C.BI_SetInvalidWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Invalid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMapDaathEnemyBase_AnimBP_C::BI_SetInvalidWindow(bool Invalid, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapDaathEnemyBase_AnimBP_C", "BI_SetInvalidWindow");

	Params::MapDaathEnemyBase_AnimBP_C_BI_SetInvalidWindow Parms{};

	Parms.Invalid = Invalid;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}

}

