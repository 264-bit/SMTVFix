#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillSearchSortCtrl

#include "Basic.hpp"

#include "E_SORTWINDOW_ANIM_STATE_structs.hpp"
#include "Engine_structs.hpp"
#include "Project_structs.hpp"
#include "Project_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SkillSearchSortCtrl.BP_SkillSearchSortCtrl_C
// 0x0030 (0x0250 - 0x0220)
class ABP_SkillSearchSortCtrl_C final : public ASkillSearchSortWindowBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWB_SkillSearchSort_C*                  WB_SkillSearchSort;                                // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Define_ElementNum;                                 // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ElementCatgegory;                                  // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DecideListIndex;                                   // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScrollOffset;                                      // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorListIndex;                                   // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangeTabOut;                                    // 0x024C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_SkillSearchSortCtrl(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void AddToScreenWidget();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void BPI_TabSet(int32 InElementIdx);
	void BPI_ScrollList(int32 InScrollNum, bool IsPlaySE);
	void BPI_CheckMouseWheel(bool IsPlaySE);
	void BPI_Page_Down(bool IsPlaySE);
	void BPI_Page_UP(bool IsPlaySE);
	void BPI_CursorMove_Down(bool IsPlaySE);
	void BPI_CursorMove_Up(bool IsPlaySE);
	void BPI_SetCursorAndOffset(int32 InCursorIndex, int32 InScrollOffset, bool IsISkipListIn, bool IsPlaySE);
	void BPI_TabChange(E_CATEGORY_CURSOR_MOVE_DIRECTION InChangeDirection);
	void BPI_CloseWindow(bool IsSkipAnimation);
	void BPI_OpenWindow(bool IsSkipAnimation);
	void Init();
	void End();
	void ResetCursorParam();
	void SetupCursorParam();
	void OpenSkillSearchSort(bool IsSkipAnim);
	void CloseSkillSearchSort(bool IsSkipAnim);
	void SetElementTab(int32 InElementIdx);
	void ChangeElementTab(E_CATEGORY_CURSOR_MOVE_DIRECTION InChangeDirection);
	void CheckTabChangeState();
	void DecideCurrentCursorSlot(bool IsPlaySE, int32* DesideSkillID);
	void GetCategoryBySkillID(int32 InSkillId, int32* Category);
	void UpdateWIdget_SlotText();
	void UpdateWIdget_ScrollBar();
	void UpdateWIdget_CursorSlot();
	void UpdateWIdget_DecideSlot();
	void UpdateWIdget_HelpWindow();
	void UpdateWidget_BtnHelp();
	void SetCursorAndOffset(int32 InCursorIdx, int32 InScrollOffset, bool IsSkipListIn, bool IsPlaySE);
	void CursorMove_Up(bool IsPlaySE);
	void CursorMove_Down(bool IsPlaySE);
	void Page_Up(bool IsPlaySE);
	void Page_Down(bool IsPlaySE);
	void ScrollList(int32 InScrollNum, bool IsPlaySE);
	void GetSlotDrawNum(int32* SlotNum);
	void BindMouseInputEvent();
	void UnbindMouseInputEvent();
	void CheckMouseWheel(bool IsPlaySE);
	void IsEnableMouseWheel(bool* IsEnable);
	void OnHoveredSlot_ByMouse(int32 InSlotIdx);
	void OnClickedSlot_ByMouse(int32 InSlotIdx);
	void OnDraggedScrollBar_ByMouse(float InScrollRate);
	void OnClickedCategory_L_ByMouse();
	void OnClickedCategory_R_ByMouse();
	void OnClickedElementIcon_ByMouse(int32 InElementIdx);
	void GetCurrentTabIdx(int32* TabIdx);
	void BPI_GetCurrentSkillListNum(int32* SkillListNum);
	void BPI_GetScrollOffset(int32* Param_ScrollOffset);
	void BPI_GetCursorIdx(int32* CursorIdx);
	void BPI_IsActiveSkillSearchWindow(bool* IsActive);
	void BPI_DecideCurrentSlot(bool IsPlaySE, int32* DecidedSkillID);
	void BPI_CheckInputAndUpdate(bool* IsDecideSkill, bool* IsPressedClose);
	void BPI_IsEnableMouseWheel(bool* IsEnable);
	void BPI_GetCurrentTabIdx(int32* TabIdx);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillSearchSortCtrl_C">();
	}
	static class ABP_SkillSearchSortCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SkillSearchSortCtrl_C>();
	}
};
static_assert(alignof(ABP_SkillSearchSortCtrl_C) == 0x000008, "Wrong alignment on ABP_SkillSearchSortCtrl_C");
static_assert(sizeof(ABP_SkillSearchSortCtrl_C) == 0x000250, "Wrong size on ABP_SkillSearchSortCtrl_C");
static_assert(offsetof(ABP_SkillSearchSortCtrl_C, UberGraphFrame) == 0x000220, "Member 'ABP_SkillSearchSortCtrl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SkillSearchSortCtrl_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_SkillSearchSortCtrl_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SkillSearchSortCtrl_C, WB_SkillSearchSort) == 0x000230, "Member 'ABP_SkillSearchSortCtrl_C::WB_SkillSearchSort' has a wrong offset!");
static_assert(offsetof(ABP_SkillSearchSortCtrl_C, Define_ElementNum) == 0x000238, "Member 'ABP_SkillSearchSortCtrl_C::Define_ElementNum' has a wrong offset!");
static_assert(offsetof(ABP_SkillSearchSortCtrl_C, ElementCatgegory) == 0x00023C, "Member 'ABP_SkillSearchSortCtrl_C::ElementCatgegory' has a wrong offset!");
static_assert(offsetof(ABP_SkillSearchSortCtrl_C, DecideListIndex) == 0x000240, "Member 'ABP_SkillSearchSortCtrl_C::DecideListIndex' has a wrong offset!");
static_assert(offsetof(ABP_SkillSearchSortCtrl_C, ScrollOffset) == 0x000244, "Member 'ABP_SkillSearchSortCtrl_C::ScrollOffset' has a wrong offset!");
static_assert(offsetof(ABP_SkillSearchSortCtrl_C, CursorListIndex) == 0x000248, "Member 'ABP_SkillSearchSortCtrl_C::CursorListIndex' has a wrong offset!");
static_assert(offsetof(ABP_SkillSearchSortCtrl_C, IsChangeTabOut) == 0x00024C, "Member 'ABP_SkillSearchSortCtrl_C::IsChangeTabOut' has a wrong offset!");

}

