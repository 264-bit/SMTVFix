#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CharaFollower

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_CharaFollower.BPI_CharaFollower_C.BPI_WarpNaviDevilBasePos
// 0x0002 (0x0002 - 0x0000)
struct BPI_CharaFollower_C_BPI_WarpNaviDevilBasePos final
{
public:
	bool                                          CalcOnGround;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaFollower_C_BPI_WarpNaviDevilBasePos) == 0x000001, "Wrong alignment on BPI_CharaFollower_C_BPI_WarpNaviDevilBasePos");
static_assert(sizeof(BPI_CharaFollower_C_BPI_WarpNaviDevilBasePos) == 0x000002, "Wrong size on BPI_CharaFollower_C_BPI_WarpNaviDevilBasePos");
static_assert(offsetof(BPI_CharaFollower_C_BPI_WarpNaviDevilBasePos, CalcOnGround) == 0x000000, "Member 'BPI_CharaFollower_C_BPI_WarpNaviDevilBasePos::CalcOnGround' has a wrong offset!");
static_assert(offsetof(BPI_CharaFollower_C_BPI_WarpNaviDevilBasePos, NewParam) == 0x000001, "Member 'BPI_CharaFollower_C_BPI_WarpNaviDevilBasePos::NewParam' has a wrong offset!");

// Function BPI_CharaFollower.BPI_CharaFollower_C.BPI_SetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharaFollower_C_BPI_SetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaFollower_C_BPI_SetVisibility) == 0x000001, "Wrong alignment on BPI_CharaFollower_C_BPI_SetVisibility");
static_assert(sizeof(BPI_CharaFollower_C_BPI_SetVisibility) == 0x000001, "Wrong size on BPI_CharaFollower_C_BPI_SetVisibility");
static_assert(offsetof(BPI_CharaFollower_C_BPI_SetVisibility, Visible) == 0x000000, "Member 'BPI_CharaFollower_C_BPI_SetVisibility::Visible' has a wrong offset!");

// Function BPI_CharaFollower.BPI_CharaFollower_C.BPI_TeleportNaviLocationAndRotation
// 0x001C (0x001C - 0x0000)
struct BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          StopUntilPlayerMove;                               // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation) == 0x000004, "Wrong alignment on BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation");
static_assert(sizeof(BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation) == 0x00001C, "Wrong size on BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation");
static_assert(offsetof(BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation, Location) == 0x000000, "Member 'BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation::Location' has a wrong offset!");
static_assert(offsetof(BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation, Rotation) == 0x00000C, "Member 'BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation, StopUntilPlayerMove) == 0x000018, "Member 'BPI_CharaFollower_C_BPI_TeleportNaviLocationAndRotation::StopUntilPlayerMove' has a wrong offset!");

// Function BPI_CharaFollower.BPI_CharaFollower_C.BPI_ChangeDecalAnimNotify
// 0x0010 (0x0010 - 0x0000)
struct BPI_CharaFollower_C_BPI_ChangeDecalAnimNotify final
{
public:
	class UDecalComponent*                        Decal;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaFollower_C_BPI_ChangeDecalAnimNotify) == 0x000008, "Wrong alignment on BPI_CharaFollower_C_BPI_ChangeDecalAnimNotify");
static_assert(sizeof(BPI_CharaFollower_C_BPI_ChangeDecalAnimNotify) == 0x000010, "Wrong size on BPI_CharaFollower_C_BPI_ChangeDecalAnimNotify");
static_assert(offsetof(BPI_CharaFollower_C_BPI_ChangeDecalAnimNotify, Decal) == 0x000000, "Member 'BPI_CharaFollower_C_BPI_ChangeDecalAnimNotify::Decal' has a wrong offset!");
static_assert(offsetof(BPI_CharaFollower_C_BPI_ChangeDecalAnimNotify, Visible) == 0x000008, "Member 'BPI_CharaFollower_C_BPI_ChangeDecalAnimNotify::Visible' has a wrong offset!");

// Function BPI_CharaFollower.BPI_CharaFollower_C.BPI_SetVisible_NaviGimmickEffect
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharaFollower_C_BPI_SetVisible_NaviGimmickEffect final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaFollower_C_BPI_SetVisible_NaviGimmickEffect) == 0x000001, "Wrong alignment on BPI_CharaFollower_C_BPI_SetVisible_NaviGimmickEffect");
static_assert(sizeof(BPI_CharaFollower_C_BPI_SetVisible_NaviGimmickEffect) == 0x000001, "Wrong size on BPI_CharaFollower_C_BPI_SetVisible_NaviGimmickEffect");
static_assert(offsetof(BPI_CharaFollower_C_BPI_SetVisible_NaviGimmickEffect, Visible) == 0x000000, "Member 'BPI_CharaFollower_C_BPI_SetVisible_NaviGimmickEffect::Visible' has a wrong offset!");

// Function BPI_CharaFollower.BPI_CharaFollower_C.BPI_SetVisible_NaviMoveEffect
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharaFollower_C_BPI_SetVisible_NaviMoveEffect final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaFollower_C_BPI_SetVisible_NaviMoveEffect) == 0x000001, "Wrong alignment on BPI_CharaFollower_C_BPI_SetVisible_NaviMoveEffect");
static_assert(sizeof(BPI_CharaFollower_C_BPI_SetVisible_NaviMoveEffect) == 0x000001, "Wrong size on BPI_CharaFollower_C_BPI_SetVisible_NaviMoveEffect");
static_assert(offsetof(BPI_CharaFollower_C_BPI_SetVisible_NaviMoveEffect, Visible) == 0x000000, "Member 'BPI_CharaFollower_C_BPI_SetVisible_NaviMoveEffect::Visible' has a wrong offset!");

}

