#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_SortWindow2

#include "Basic.hpp"

#include "E_SORTWINDOW_ANIM_STATE_structs.hpp"
#include "Engine_classes.hpp"
#include "E_SORTWINDOW_SCROLL_OFFSET_PATTERN_structs.hpp"
#include "Project_structs.hpp"
#include "E_SORTWINDOW_POS_TYPE_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_SortWindow2.BPL_SortWindow2_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_SortWindow2_C final : public UBlueprintFunctionLibrary
{
public:
	static void BPL_SortWindow2_Open(E_SORT_WINDOW_SORT_TYPE InSortScene, E_SORTWINDOW_POS_TYPE InPosType, bool IsSkipAnimation, bool IsAutoSetupCursor, bool IsAutoSetupDecideSlot, class UObject* __WorldContext);
	static void BPL_SortWindow2_Close(bool IsSkipAnimation, class UObject* __WorldContext);
	static void BPL_SortWindow2_GetListNum(class UObject* __WorldContext, int32* ListNum);
	static void BPL_SortWindow2_GetAnimState(class UObject* __WorldContext, E_SORTWINDOW_ANIM_STATE* AnimState);
	static void BPL_SortWindow2_CheckInputCursor(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_GetCursorIdx(class UObject* __WorldContext, int32* ListIndex);
	static void BPL_SortWindow2_SetCursorAndOffsetIdx(int32 InListIndex, int32 InScrollOffset, bool IsInitSetting, bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_SetCursorAndOffsetPattern(int32 InListIndex, E_SORTWINDOW_SCROLL_OFFSET_PATTERN InScrollOffsetPattern, bool IsInitSetting, bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_MoveCursor_Up(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_MoveCursor_Down(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_MovePage_Up(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_MovePage_Down(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_MoveTop(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_MoveBottom(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_GetAppliedSetting(E_SORT_WINDOW_SORT_TYPE InSortScene, class UObject* __WorldContext, int32* AppliedSetting, E_SORT_WINDOW_SORT_ORDER* AppliedOrder);
	static void BPL_SortWindow2_SetDecideSlot(int32 InListIndex, const bool IsSave_SortSetting, const bool IsSave_SortOrder, bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_GetDecideSlot(class UObject* __WorldContext, int32* ListIndex);
	static void BPL_SortWindow2_HideDecideSlot(class UObject* __WorldContext);
	static void BPL_SortWindow2_GetScrollOffset(class UObject* __WorldContext, int32* ScrollOffset);
	static void BPL_SortWindow2_SetScrollOffsetPattern(E_SORTWINDOW_SCROLL_OFFSET_PATTERN InOffssetPattern, class UObject* __WorldContext);
	static void BPL_SortWindow2_CheckMouseWheel(bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_IsEnableMouseWheel(class UObject* __WorldContext, bool* IsEnable);
	static void BPL_SortWindow2_GetCtrlActor(class UObject* __WorldContext, class ABP_SortWindowCtrl2_C** SortWindowCtrl);
	static void BPL_SortWindow2_ScrollList(int32 InScrollNum, bool IsPlaySE, class UObject* __WorldContext);
	static void BPL_SortWindow2_SetMouseHitVisibility(bool EnableMouseHit, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_SortWindow2_C">();
	}
	static class UBPL_SortWindow2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_SortWindow2_C>();
	}
};
static_assert(alignof(UBPL_SortWindow2_C) == 0x000008, "Wrong alignment on UBPL_SortWindow2_C");
static_assert(sizeof(UBPL_SortWindow2_C) == 0x000028, "Wrong size on UBPL_SortWindow2_C");

}

