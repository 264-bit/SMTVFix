#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DLCAnnouncer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Project_structs.hpp"
#include "Project_classes.hpp"
#include "E_TutorialWindow_WidgetState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DLCAnnouncer.BP_DLCAnnouncer_C
// 0x0050 (0x0270 - 0x0220)
class ABP_DLCAnnouncer_C final : public ADLCAnnouncerBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_DLCAnnouncer_DelegateChecker_C*     DelegateChecker;                                   // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>        DLC_EnableTutorial;                                // 0x0238(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           DLC_EnableTag;                                     // 0x0248(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           DLC_DisableTag;                                    // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsActiveTask;                                      // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsBootCheck;                                       // 0x0269(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsExecAnnounce;                                    // 0x026A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void BPI_IsActiveAnnounceTask(bool* Param_IsActiveTask);
	void BPI_GetDelegateCheckActor(class ABP_DLCAnnouncer_DelegateChecker_C** OutActor);
	void ResetParam(bool ClearList);
	void RefrectDLC_SystemData();
	void ConvDLC_TagToTutorialEnum(const TArray<class FName>& InTagList, TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>* EnumList);
	void ConvDLC_TagToName(TArray<class FName>& InTagList, TArray<class FName>* DLC_NameList);
	void DLC_ClearList();
	void DLC_AddDisableList(class FName In_DLC_Name);
	void DLC_AddEnableList(class FName In_DLC_Name);
	void BPI_StartTask_DlcReflectAndAnnounce(bool IsBoot);
	void BPI_StartTask_OnlyDlcReflect(bool IsBoot);
	void BPI_StartTask_OnlyAnnounce();
	void DLC_OnMountComplete();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_DLCAnnouncer(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DLCAnnouncer_C">();
	}
	static class ABP_DLCAnnouncer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DLCAnnouncer_C>();
	}
};
static_assert(alignof(ABP_DLCAnnouncer_C) == 0x000008, "Wrong alignment on ABP_DLCAnnouncer_C");
static_assert(sizeof(ABP_DLCAnnouncer_C) == 0x000270, "Wrong size on ABP_DLCAnnouncer_C");
static_assert(offsetof(ABP_DLCAnnouncer_C, UberGraphFrame) == 0x000220, "Member 'ABP_DLCAnnouncer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DLCAnnouncer_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_DLCAnnouncer_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DLCAnnouncer_C, DelegateChecker) == 0x000230, "Member 'ABP_DLCAnnouncer_C::DelegateChecker' has a wrong offset!");
static_assert(offsetof(ABP_DLCAnnouncer_C, DLC_EnableTutorial) == 0x000238, "Member 'ABP_DLCAnnouncer_C::DLC_EnableTutorial' has a wrong offset!");
static_assert(offsetof(ABP_DLCAnnouncer_C, DLC_EnableTag) == 0x000248, "Member 'ABP_DLCAnnouncer_C::DLC_EnableTag' has a wrong offset!");
static_assert(offsetof(ABP_DLCAnnouncer_C, DLC_DisableTag) == 0x000258, "Member 'ABP_DLCAnnouncer_C::DLC_DisableTag' has a wrong offset!");
static_assert(offsetof(ABP_DLCAnnouncer_C, IsActiveTask) == 0x000268, "Member 'ABP_DLCAnnouncer_C::IsActiveTask' has a wrong offset!");
static_assert(offsetof(ABP_DLCAnnouncer_C, IsBootCheck) == 0x000269, "Member 'ABP_DLCAnnouncer_C::IsBootCheck' has a wrong offset!");
static_assert(offsetof(ABP_DLCAnnouncer_C, IsExecAnnounce) == 0x00026A, "Member 'ABP_DLCAnnouncer_C::IsExecAnnounce' has a wrong offset!");

}

