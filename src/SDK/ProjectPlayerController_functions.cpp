#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProjectPlayerController

#include "Basic.hpp"

#include "ProjectPlayerController_classes.hpp"
#include "ProjectPlayerController_parameters.hpp"


namespace SDK
{

// Function ProjectPlayerController.ProjectPlayerController_C.ExecuteUbergraph_ProjectPlayerController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::ExecuteUbergraph_ProjectPlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ExecuteUbergraph_ProjectPlayerController");

	Params::ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ReceivePossess");

	Params::ProjectPlayerController_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9");

	Params::ProjectPlayerController_C_InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8");

	Params::ProjectPlayerController_C_InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4");

	Params::ProjectPlayerController_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2");

	Params::ProjectPlayerController_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.OnChangeIgnoreMoveInput
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewIgnoreInput                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProjectPlayerController_C::OnChangeIgnoreMoveInput(bool bNewIgnoreInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "OnChangeIgnoreMoveInput");

	Params::ProjectPlayerController_C_OnChangeIgnoreMoveInput Parms{};

	Parms.bNewIgnoreInput = bNewIgnoreInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_LookRight_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::InpAxisEvt_LookRight_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "InpAxisEvt_LookRight_K2Node_InputAxisEvent_1");

	Params::ProjectPlayerController_C_InpAxisEvt_LookRight_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_0");

	Params::ProjectPlayerController_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.InpActEvt_One_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::InpActEvt_One_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "InpActEvt_One_K2Node_InputKeyEvent_0");

	Params::ProjectPlayerController_C_InpActEvt_One_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0");

	Params::ProjectPlayerController_C_ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1");

	Params::ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2");

	Params::ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3");

	Params::ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4");

	Params::ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5");

	Params::ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6");

	Params::ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7");

	Params::ProjectPlayerController_C_ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8");

	Params::ProjectPlayerController_C_ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.InpActEvt_Z_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::InpActEvt_Z_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "InpActEvt_Z_K2Node_InputKeyEvent_1");

	Params::ProjectPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9");

	Params::ProjectPlayerController_C_ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10");

	Params::ProjectPlayerController_C_ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AProjectPlayerController_C::ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11");

	Params::ProjectPlayerController_C_ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.Look Up
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMouse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProjectPlayerController_C::Look_Up(float Value, bool IsMouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "Look Up");

	Params::ProjectPlayerController_C_Look_Up Parms{};

	Parms.Value = Value;
	Parms.IsMouse = IsMouse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.Look Right
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMouse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProjectPlayerController_C::Look_Right(float Value, bool IsMouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "Look Right");

	Params::ProjectPlayerController_C_Look_Right Parms{};

	Parms.Value = Value;
	Parms.IsMouse = IsMouse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProjectPlayerController.ProjectPlayerController_C.ClampCameraInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ClampValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::ClampCameraInput(float Value, float* ClampValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "ClampCameraInput");

	Params::ProjectPlayerController_C_ClampCameraInput Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (ClampValue != nullptr)
		*ClampValue = Parms.ClampValue;
}


// Function ProjectPlayerController.ProjectPlayerController_C.DebugcameraSpeed_LR
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::DebugcameraSpeed_LR(float* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "DebugcameraSpeed_LR");

	Params::ProjectPlayerController_C_DebugcameraSpeed_LR Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function ProjectPlayerController.ProjectPlayerController_C.DebugcameraSpeed_UD
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::DebugcameraSpeed_UD(float* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "DebugcameraSpeed_UD");

	Params::ProjectPlayerController_C_DebugcameraSpeed_UD Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function ProjectPlayerController.ProjectPlayerController_C.Use Garden Tribute
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ShouldUse                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProjectPlayerController_C::Use_Garden_Tribute(bool* ShouldUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "Use Garden Tribute");

	Params::ProjectPlayerController_C_Use_Garden_Tribute Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldUse != nullptr)
		*ShouldUse = Parms.ShouldUse;
}


// Function ProjectPlayerController.ProjectPlayerController_C.NewFunction_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   CalcInput                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Final                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::NewFunction_0(float CalcInput, float* Final)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "NewFunction_0");

	Params::ProjectPlayerController_C_NewFunction_0 Parms{};

	Parms.CalcInput = CalcInput;

	UObject::ProcessEvent(Func, &Parms);

	if (Final != nullptr)
		*Final = Parms.Final;
}


// Function ProjectPlayerController.ProjectPlayerController_C.GetInitRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Param_InitRotation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProjectPlayerController_C::GetInitRotation(struct FRotator* Param_InitRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "GetInitRotation");

	Params::ProjectPlayerController_C_GetInitRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_InitRotation != nullptr)
		*Param_InitRotation = std::move(Parms.Param_InitRotation);
}


// Function ProjectPlayerController.ProjectPlayerController_C.CalcCameraSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AXIS_MAPPING_TYPE                     CameraAxis                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InputSpeed                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMouseInput                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CameraSpeed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProjectPlayerController_C::CalcCameraSpeed(E_AXIS_MAPPING_TYPE CameraAxis, float InputSpeed, bool IsMouseInput, float* CameraSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectPlayerController_C", "CalcCameraSpeed");

	Params::ProjectPlayerController_C_CalcCameraSpeed Parms{};

	Parms.CameraAxis = CameraAxis;
	Parms.InputSpeed = InputSpeed;
	Parms.IsMouseInput = IsMouseInput;

	UObject::ProcessEvent(Func, &Parms);

	if (CameraSpeed != nullptr)
		*CameraSpeed = Parms.CameraSpeed;
}

}

