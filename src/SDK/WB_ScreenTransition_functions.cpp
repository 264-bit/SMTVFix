#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ScreenTransition

#include "Basic.hpp"

#include "WB_ScreenTransition_classes.hpp"
#include "WB_ScreenTransition_parameters.hpp"


namespace SDK
{

// Function WB_ScreenTransition.WB_ScreenTransition_C.ExecuteUbergraph_WB_ScreenTransition
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::ExecuteUbergraph_WB_ScreenTransition(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "ExecuteUbergraph_WB_ScreenTransition");

	Params::WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_ScreenTransition_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "Tick");

	Params::WB_ScreenTransition_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.SetTransitionTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       InTexture                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::SetTransitionTexture(class UTexture2D* InTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "SetTransitionTexture");

	Params::WB_ScreenTransition_C_SetTransitionTexture Parms{};

	Parms.InTexture = InTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.FadeIn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ScreenTransitionFadeType              InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::FadeIn(E_ScreenTransitionFadeType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "FadeIn");

	Params::WB_ScreenTransition_C_FadeIn Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.FadeOut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ScreenTransitionFadeType              InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::FadeOut(E_ScreenTransitionFadeType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "FadeOut");

	Params::WB_ScreenTransition_C_FadeOut Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.Clear
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ScreenTransition_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.Cover
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ScreenTransitionFadeType              InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::Cover(E_ScreenTransitionFadeType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "Cover");

	Params::WB_ScreenTransition_C_Cover Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.SetVectorValue
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::SetVectorValue(class FName ParameterName, const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "SetVectorValue");

	Params::WB_ScreenTransition_C_SetVectorValue Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.PlayStart
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AnimType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ScreenTransitionFadeType              ScreenType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartFrame                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::PlayStart(int32 AnimType, E_ScreenTransitionFadeType ScreenType, float StartFrame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "PlayStart");

	Params::WB_ScreenTransition_C_PlayStart Parms{};

	Parms.AnimType = AnimType;
	Parms.ScreenType = ScreenType;
	Parms.StartFrame = StartFrame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.UpdateAnim
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PastTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AnimEnd                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ScreenTransition_C::UpdateAnim(float PastTime, bool* AnimEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "UpdateAnim");

	Params::WB_ScreenTransition_C_UpdateAnim Parms{};

	Parms.PastTime = PastTime;

	UObject::ProcessEvent(Func, &Parms);

	if (AnimEnd != nullptr)
		*AnimEnd = Parms.AnimEnd;
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.InitTexture
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ScreenTransitionFadeType              ScreenType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::InitTexture(E_ScreenTransitionFadeType ScreenType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "InitTexture");

	Params::WB_ScreenTransition_C_InitTexture Parms{};

	Parms.ScreenType = ScreenType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.PlaySsPlayer
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AnimType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartFrame                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::PlaySsPlayer(int32 AnimType, float StartFrame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "PlaySsPlayer");

	Params::WB_ScreenTransition_C_PlaySsPlayer Parms{};

	Parms.AnimType = AnimType;
	Parms.StartFrame = StartFrame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.IsEndAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ScreenTransition_C::IsEndAnim(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "IsEndAnim");

	Params::WB_ScreenTransition_C_IsEndAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.getFinishByFrame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   OutFrame                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::GetFinishByFrame(float* OutFrame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "getFinishByFrame");

	Params::WB_ScreenTransition_C_GetFinishByFrame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFrame != nullptr)
		*OutFrame = Parms.OutFrame;
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.GetFadeState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_UI_FADE_STATE                         FadeState                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ScreenTransition_C::GetFadeState(E_UI_FADE_STATE* FadeState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "GetFadeState");

	Params::WB_ScreenTransition_C_GetFadeState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FadeState != nullptr)
		*FadeState = Parms.FadeState;
}


// Function WB_ScreenTransition.WB_ScreenTransition_C.UpdateUV
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForceUpdate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ScreenTransition_C::UpdateUV(bool bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ScreenTransition_C", "UpdateUV");

	Params::WB_ScreenTransition_C_UpdateUV Parms{};

	Parms.bForceUpdate = bForceUpdate;

	UObject::ProcessEvent(Func, &Parms);
}

}

