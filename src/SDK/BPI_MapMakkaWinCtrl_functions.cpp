#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_MapMakkaWinCtrl

#include "Basic.hpp"

#include "BPI_MapMakkaWinCtrl_classes.hpp"
#include "BPI_MapMakkaWinCtrl_parameters.hpp"


namespace SDK
{

// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_OpenMapMakkaWin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PrevMakka                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AddMakka                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_MapMakkaWinCtrl_C::BPI_OpenMapMakkaWin(int32 PrevMakka, int32 AddMakka)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_OpenMapMakkaWin");

	Params::BPI_MapMakkaWinCtrl_C_BPI_OpenMapMakkaWin Parms{};

	Parms.PrevMakka = PrevMakka;
	Parms.AddMakka = AddMakka;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_SetPrevMakka_MakkaWindow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PrevMakka                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_MapMakkaWinCtrl_C::BPI_SetPrevMakka_MakkaWindow(int32 PrevMakka)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_SetPrevMakka_MakkaWindow");

	Params::BPI_MapMakkaWinCtrl_C_BPI_SetPrevMakka_MakkaWindow Parms{};

	Parms.PrevMakka = PrevMakka;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_SetLock_MapMakkaWin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnAreaName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_MapMakkaWinCtrl_C::BPI_SetLock_MapMakkaWin(bool Lock, bool ReturnAreaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_SetLock_MapMakkaWin");

	Params::BPI_MapMakkaWinCtrl_C_BPI_SetLock_MapMakkaWin Parms{};

	Parms.Lock = Lock;
	Parms.ReturnAreaName = ReturnAreaName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_OpenMapMiitsuWin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PrevMiitsu                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AddMiitsu                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_MapMakkaWinCtrl_C::BPI_OpenMapMiitsuWin(int32 PrevMiitsu, int32 AddMiitsu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_OpenMapMiitsuWin");

	Params::BPI_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin Parms{};

	Parms.PrevMiitsu = PrevMiitsu;
	Parms.AddMiitsu = AddMiitsu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_SetPrevMiitsu_MiitsuWindow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PrevMiitsu                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_MapMakkaWinCtrl_C::BPI_SetPrevMiitsu_MiitsuWindow(int32 PrevMiitsu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_SetPrevMiitsu_MiitsuWindow");

	Params::BPI_MapMakkaWinCtrl_C_BPI_SetPrevMiitsu_MiitsuWindow Parms{};

	Parms.PrevMiitsu = PrevMiitsu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_CheckActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_MapMakkaWinCtrl_C::BPI_CheckActive(bool* Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_CheckActive");

	Params::BPI_MapMakkaWinCtrl_C_BPI_CheckActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;
}


// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_OpenMapMiitsuWin_ManualNext
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PrevMiitsu                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AddMiitsu                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_MapMakkaWinCtrl_C::BPI_OpenMapMiitsuWin_ManualNext(int32 PrevMiitsu, int32 AddMiitsu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_OpenMapMiitsuWin_ManualNext");

	Params::BPI_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin_ManualNext Parms{};

	Parms.PrevMiitsu = PrevMiitsu;
	Parms.AddMiitsu = AddMiitsu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_NextMapMiitsuWin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_MapMakkaWinCtrl_C::BPI_NextMapMiitsuWin(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_NextMapMiitsuWin");

	Params::BPI_MapMakkaWinCtrl_C_BPI_NextMapMiitsuWin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_CheckNext_MapMiitsuWin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Next                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_MapMakkaWinCtrl_C::BPI_CheckNext_MapMiitsuWin(bool* Next)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_CheckNext_MapMiitsuWin");

	Params::BPI_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Next != nullptr)
		*Next = Parms.Next;
}


// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_CheckActive_Miitsu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_MapMakkaWinCtrl_C::BPI_CheckActive_Miitsu(bool* Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_CheckActive_Miitsu");

	Params::BPI_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;
}


// Function BPI_MapMakkaWinCtrl.BPI_MapMakkaWinCtrl_C.BPI_CheckNext_MimanMiitsu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Next                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_MapMakkaWinCtrl_C::BPI_CheckNext_MimanMiitsu(bool* Next)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MapMakkaWinCtrl_C", "BPI_CheckNext_MimanMiitsu");

	Params::BPI_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Next != nullptr)
		*Next = Parms.Next;
}

}

