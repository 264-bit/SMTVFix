#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventNaviDevil

#include "Basic.hpp"

#include "BP_EventNaviDevil_classes.hpp"
#include "BP_EventNaviDevil_parameters.hpp"


namespace SDK
{

// Function BP_EventNaviDevil.BP_EventNaviDevil_C.EvtDis_EndEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::EvtDis_EndEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "EvtDis_EndEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.ExecuteUbergraph_BP_EventNaviDevil
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventNaviDevil_C::ExecuteUbergraph_BP_EventNaviDevil(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "ExecuteUbergraph_BP_EventNaviDevil");

	Params::BP_EventNaviDevil_C_ExecuteUbergraph_BP_EventNaviDevil Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.EndNaviTick
// (BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::EndNaviTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "EndNaviTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.StartNaviTick
// (BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::StartNaviTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "StartNaviTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.EvtDis_EndFadeOut_FoundGimmick_
// (BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::EvtDis_EndFadeOut_FoundGimmick_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "EvtDis_EndFadeOut_FoundGimmick_");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.Event_EndStep
// (BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::Event_EndStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "Event_EndStep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.EvtDis_EndFoundGimmick_
// (BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::EvtDis_EndFoundGimmick_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "EvtDis_EndFoundGimmick_");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.OnDestroyed_¤ÙóÈ_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventNaviDevil_C::OnDestroyed______0(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "OnDestroyed_¤ÙóÈ_0");

	Params::BP_EventNaviDevil_C_OnDestroyed______0 Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventNaviDevil_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "ReceiveEndPlay");

	Params::BP_EventNaviDevil_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.OnDestroyed_
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventNaviDevil_C::OnDestroyed_(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "OnDestroyed_");

	Params::BP_EventNaviDevil_C_OnDestroyed_ Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.Evt_EndBattle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_END                               BtlEndType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChainEncountNum                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventNaviDevil_C::Evt_EndBattle(E_BTL_END BtlEndType, int32 ChainEncountNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "Evt_EndBattle");

	Params::BP_EventNaviDevil_C_Evt_EndBattle Parms{};

	Parms.BtlEndType = BtlEndType;
	Parms.ChainEncountNum = ChainEncountNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.QuestExecute
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::QuestExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "QuestExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EventNaviDevil_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.LotItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsItem                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsMakka                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_ItemId                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OnFlag                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventNaviDevil_C::LotItem(bool* IsItem, bool* IsMakka, int32* Param_ItemId, int32* Num, int32* OnFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "LotItem");

	Params::BP_EventNaviDevil_C_LotItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsItem != nullptr)
		*IsItem = Parms.IsItem;

	if (IsMakka != nullptr)
		*IsMakka = Parms.IsMakka;

	if (Param_ItemId != nullptr)
		*Param_ItemId = Parms.Param_ItemId;

	if (Num != nullptr)
		*Num = Parms.Num;

	if (OnFlag != nullptr)
		*OnFlag = Parms.OnFlag;
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.ItemInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HaveOver                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventNaviDevil_C::ItemInfo(bool HaveOver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "ItemInfo");

	Params::BP_EventNaviDevil_C_ItemInfo Parms{};

	Parms.HaveOver = HaveOver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.MakkaInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::MakkaInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "MakkaInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.GetEncountID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_EncountID                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPackEncount                     PackData                                               (Parm, OutParm)

void ABP_EventNaviDevil_C::GetEncountID(int32* Param_EncountID, struct FPackEncount* PackData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "GetEncountID");

	Params::BP_EventNaviDevil_C_GetEncountID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_EncountID != nullptr)
		*Param_EncountID = Parms.Param_EncountID;

	if (PackData != nullptr)
		*PackData = std::move(Parms.PackData);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.GodInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::GodInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "GodInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.OnlySaveLog
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::OnlySaveLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "OnlySaveLog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.Lot_ItemOrEncount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ItemGet                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventNaviDevil_C::Lot_ItemOrEncount(bool* ItemGet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "Lot_ItemOrEncount");

	Params::BP_EventNaviDevil_C_Lot_ItemOrEncount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemGet != nullptr)
		*ItemGet = Parms.ItemGet;
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.SaveUniqueGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::SaveUniqueGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "SaveUniqueGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.CalcChainEncountInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FChainEncountInfo                Info                                                   (Parm, OutParm)

void ABP_EventNaviDevil_C::CalcChainEncountInfo(struct FChainEncountInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "CalcChainEncountInfo");

	Params::BP_EventNaviDevil_C_CalcChainEncountInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Info != nullptr)
		*Info = std::move(Parms.Info);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.DebugLog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_EventNaviDevil_C::DebugLog(const class FString& Str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "DebugLog");

	Params::BP_EventNaviDevil_C_DebugLog Parms{};

	Parms.Str = std::move(Str);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.GetMsgAsset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_NAVI_DEVIL                            NaviType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UScriptMessageAsset*              MsgAsset                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventNaviDevil_C::GetMsgAsset(E_NAVI_DEVIL NaviType, class UScriptMessageAsset** MsgAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "GetMsgAsset");

	Params::BP_EventNaviDevil_C_GetMsgAsset Parms{};

	Parms.NaviType = NaviType;

	UObject::ProcessEvent(Func, &Parms);

	if (MsgAsset != nullptr)
		*MsgAsset = Parms.MsgAsset;
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.GetGazeTargetSocket
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Socket                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventNaviDevil_C::GetGazeTargetSocket(class FName* Socket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "GetGazeTargetSocket");

	Params::BP_EventNaviDevil_C_GetGazeTargetSocket Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Socket != nullptr)
		*Socket = Parms.Socket;
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.CalcMitama
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPackEncount                     PackData                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// E_MITAMA_ENCOUNT                        MitamaType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPackEncount                     OutPackData                                            (Parm, OutParm)

void ABP_EventNaviDevil_C::CalcMitama(const struct FPackEncount& PackData, E_MITAMA_ENCOUNT* MitamaType, struct FPackEncount* OutPackData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "CalcMitama");

	Params::BP_EventNaviDevil_C_CalcMitama Parms{};

	Parms.PackData = std::move(PackData);

	UObject::ProcessEvent(Func, &Parms);

	if (MitamaType != nullptr)
		*MitamaType = Parms.MitamaType;

	if (OutPackData != nullptr)
		*OutPackData = std::move(Parms.OutPackData);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.CalcMagatsuhi
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPackEncount                     PackData                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<int32>                           EnemyIDS                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Magatsuhi                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventNaviDevil_C::CalcMagatsuhi(const struct FPackEncount& PackData, TArray<int32>& EnemyIDS, bool* Magatsuhi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "CalcMagatsuhi");

	Params::BP_EventNaviDevil_C_CalcMagatsuhi Parms{};

	Parms.PackData = std::move(PackData);
	Parms.EnemyIDS = std::move(EnemyIDS);

	UObject::ProcessEvent(Func, &Parms);

	EnemyIDS = std::move(Parms.EnemyIDS);

	if (Magatsuhi != nullptr)
		*Magatsuhi = Parms.Magatsuhi;
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.CallDeactivate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::CallDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "CallDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventNaviDevil.BP_EventNaviDevil_C.CheckActive
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventNaviDevil_C::CheckActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventNaviDevil_C", "CheckActive");

	UObject::ProcessEvent(Func, nullptr);
}

}

