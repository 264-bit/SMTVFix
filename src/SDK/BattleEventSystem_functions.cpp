#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleEventSystem

#include "Basic.hpp"

#include "BattleEventSystem_classes.hpp"
#include "BattleEventSystem_parameters.hpp"


namespace SDK
{

// Function BattleEventSystem.BattleEventSystem_C.ExecuteUbergraph_BattleEventSystem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::ExecuteUbergraph_BattleEventSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "ExecuteUbergraph_BattleEventSystem");

	Params::BattleEventSystem_C_ExecuteUbergraph_BattleEventSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleEventSystem.BattleEventSystem_C.BI_AddDestroyPool
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::BI_AddDestroyPool(const class AActor*& Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "BI_AddDestroyPool");

	Params::BattleEventSystem_C_BI_AddDestroyPool Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleEventSystem.BattleEventSystem_C.BI_DestroyPool
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::BI_DestroyPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "BI_DestroyPool");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "ReceiveTick");

	Params::BattleEventSystem_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleEventSystem.BattleEventSystem_C.Evt_PlayBattleEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_EVT_POINT                         EventPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::Evt_PlayBattleEvent(class FName EventName, E_BTL_EVT_POINT EventPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "Evt_PlayBattleEvent");

	Params::BattleEventSystem_C_Evt_PlayBattleEvent Parms{};

	Parms.EventName = EventName;
	Parms.EventPoint = EventPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleEventSystem.BattleEventSystem_C.SeqEvtCheck
// (BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::SeqEvtCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "SeqEvtCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.SeqEvtExecute
// (BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::SeqEvtExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "SeqEvtExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBattleEventSystem_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.SeqEvtLoadWait
// (BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::SeqEvtLoadWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "SeqEvtLoadWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.SeqEvtLoad
// (BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::SeqEvtLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "SeqEvtLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.OnLoaded_EDCAD1D54D40549B940102BD5DE89F2B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBattleEventSystem_C::OnLoaded_EDCAD1D54D40549B940102BD5DE89F2B(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "OnLoaded_EDCAD1D54D40549B940102BD5DE89F2B");

	Params::BattleEventSystem_C_OnLoaded_EDCAD1D54D40549B940102BD5DE89F2B Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleEventSystem.BattleEventSystem_C.OnLoaded_1A6E70294E980748DCFA99B6D0C3BE91
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBattleEventSystem_C::OnLoaded_1A6E70294E980748DCFA99B6D0C3BE91(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "OnLoaded_1A6E70294E980748DCFA99B6D0C3BE91");

	Params::BattleEventSystem_C_OnLoaded_1A6E70294E980748DCFA99B6D0C3BE91 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleEventSystem.BattleEventSystem_C.CheckEventTrigger
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_EVT_POINT                         CheckPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EventName                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::CheckEventTrigger(E_BTL_EVT_POINT CheckPoint, class FName* EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "CheckEventTrigger");

	Params::BattleEventSystem_C_CheckEventTrigger Parms{};

	Parms.CheckPoint = CheckPoint;

	UObject::ProcessEvent(Func, &Parms);

	if (EventName != nullptr)
		*EventName = Parms.EventName;
}


// Function BattleEventSystem.BattleEventSystem_C.GetEventState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_EVT                               RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::GetEventState(E_BTL_EVT* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetEventState");

	Params::BattleEventSystem_C_GetEventState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.PrepareReady
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::PrepareReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "PrepareReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.MakeEventData
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::MakeEventData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "MakeEventData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.PrepareIsComplete
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleEventSystem_C::PrepareIsComplete(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "PrepareIsComplete");

	Params::BattleEventSystem_C_PrepareIsComplete Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.GetMainWork
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABattleMain_C*                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::GetMainWork(class ABattleMain_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetMainWork");

	Params::BattleEventSystem_C_GetMainWork Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.GetTaskFactory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleActionTaskFactory_C*       RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::GetTaskFactory(class UBattleActionTaskFactory_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetTaskFactory");

	Params::BattleEventSystem_C_GetTaskFactory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.CalcFrame
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::CalcFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "CalcFrame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.GetBattleCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABattleCamera_C*                  RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::GetBattleCamera(class ABattleCamera_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetBattleCamera");

	Params::BattleEventSystem_C_GetBattleCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.GetTaskModelManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleTaskModelManager_C*        RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::GetTaskModelManager(class UBattleTaskModelManager_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetTaskModelManager");

	Params::BattleEventSystem_C_GetTaskModelManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.GetEventResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_EVT_RESULT                        RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::GetEventResult(E_BTL_EVT_RESULT* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetEventResult");

	Params::BattleEventSystem_C_GetEventResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.GetEventModelList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ACharaBase_C*>             RetValue                                               (Parm, OutParm)

void UBattleEventSystem_C::GetEventModelList(TArray<class ACharaBase_C*>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetEventModelList");

	Params::BattleEventSystem_C_GetEventModelList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleEventSystem.BattleEventSystem_C.ClearEventModelList
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::ClearEventModelList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "ClearEventModelList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.GetNextEventBattleID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::GetNextEventBattleID(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetNextEventBattleID");

	Params::BattleEventSystem_C_GetNextEventBattleID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.NoEvtSeq
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::NoEvtSeq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "NoEvtSeq");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.CheckOnlyFirst
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TableIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleEventSystem_C::CheckOnlyFirst(int32 TableIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "CheckOnlyFirst");

	Params::BattleEventSystem_C_CheckOnlyFirst Parms{};

	Parms.TableIndex = TableIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.GetPartySystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattlePartySystem_C*             RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::GetPartySystem(class UBattlePartySystem_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetPartySystem");

	Params::BattleEventSystem_C_GetPartySystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.CheckEventIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TableIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleEventSystem_C::CheckEventIndex(int32 TableIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "CheckEventIndex");

	Params::BattleEventSystem_C_CheckEventIndex Parms{};

	Parms.TableIndex = TableIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleEventSystem.BattleEventSystem_C.GetMainInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_MainInterface>AsBPI_Main_Interface                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleEventSystem_C::GetMainInterface(TScriptInterface<class IBPI_MainInterface>* AsBPI_Main_Interface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetMainInterface");

	Params::BattleEventSystem_C_GetMainInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsBPI_Main_Interface != nullptr)
		*AsBPI_Main_Interface = Parms.AsBPI_Main_Interface;
}


// Function BattleEventSystem.BattleEventSystem_C.LoadBattleEventList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::LoadBattleEventList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "LoadBattleEventList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.GetBattleEventActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABattleEventBase_C*               Event                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::GetBattleEventActor(class ABattleEventBase_C** Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "GetBattleEventActor");

	Params::BattleEventSystem_C_GetBattleEventActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Event != nullptr)
		*Event = Parms.Event;
}


// Function BattleEventSystem.BattleEventSystem_C.CtrlEventScript
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::CtrlEventScript(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "CtrlEventScript");

	Params::BattleEventSystem_C_CtrlEventScript Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleEventSystem.BattleEventSystem_C.IsEventScriptInProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsInProgress                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleEventSystem_C::IsEventScriptInProgress(bool* IsInProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "IsEventScriptInProgress");

	Params::BattleEventSystem_C_IsEventScriptInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsInProgress != nullptr)
		*IsInProgress = Parms.IsInProgress;
}


// Function BattleEventSystem.BattleEventSystem_C.CheckEventFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleEventSystem_C::CheckEventFinished(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "CheckEventFinished");

	Params::BattleEventSystem_C_CheckEventFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleEventSystem.BattleEventSystem_C.PlayEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EentName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_EVT_POINT                         EventPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleEventSystem_C::PlayEvent(class FName EentName, E_BTL_EVT_POINT EventPoint, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "PlayEvent");

	Params::BattleEventSystem_C_PlayEvent Parms{};

	Parms.EentName = EentName;
	Parms.EventPoint = EventPoint;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleEventSystem.BattleEventSystem_C.AddDestroyPool
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleEventSystem_C::AddDestroyPool(class AActor*& Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "AddDestroyPool");

	Params::BattleEventSystem_C_AddDestroyPool Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	Actor = Parms.Actor;
}


// Function BattleEventSystem.BattleEventSystem_C.DestroyPool
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleEventSystem_C::DestroyPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "DestroyPool");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleEventSystem.BattleEventSystem_C.OnWindowActivationChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleEventSystem_C::OnWindowActivationChanged(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "OnWindowActivationChanged");

	Params::BattleEventSystem_C_OnWindowActivationChanged Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleEventSystem.BattleEventSystem_C.UpdateComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ContinueUpdate                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleEventSystem_C::UpdateComponent(float Delta, bool* ContinueUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleEventSystem_C", "UpdateComponent");

	Params::BattleEventSystem_C_UpdateComponent Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);

	if (ContinueUpdate != nullptr)
		*ContinueUpdate = Parms.ContinueUpdate;
}

}

