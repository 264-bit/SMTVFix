#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleCharAction

#include "Basic.hpp"

#include "BattleCharAction_classes.hpp"
#include "BattleCharAction_parameters.hpp"


namespace SDK
{

// Function BattleCharAction.BattleCharAction_C.ExecuteUbergraph_BattleCharAction
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::ExecuteUbergraph_BattleCharAction(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ExecuteUbergraph_BattleCharAction");

	Params::BattleCharAction_C_ExecuteUbergraph_BattleCharAction Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.LoadEnemyAI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             InAIName                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    IsCounter                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPartner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ActorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::LoadEnemyAI(TSoftClassPtr<class UClass> InAIName, bool IsCounter, bool IsPartner, int32 ActorIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "LoadEnemyAI");

	Params::BattleCharAction_C_LoadEnemyAI Parms{};

	Parms.InAIName = InAIName;
	Parms.IsCounter = IsCounter;
	Parms.IsPartner = IsPartner;
	Parms.ActorIndex = ActorIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.BP_SetSummonTask
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   TargetIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::BP_SetSummonTask(int32 TargetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "BP_SetSummonTask");

	Params::BattleCharAction_C_BP_SetSummonTask Parms{};

	Parms.TargetIndex = TargetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ReceiveTick");

	Params::BattleCharAction_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABattleCharAction_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.OnLoaded_6350A8714EA87FA1A6E72CBC95C623AF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABattleCharAction_C::OnLoaded_6350A8714EA87FA1A6E72CBC95C623AF(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "OnLoaded_6350A8714EA87FA1A6E72CBC95C623AF");

	Params::BattleCharAction_C_OnLoaded_6350A8714EA87FA1A6E72CBC95C623AF Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.CallSeqEvent
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::CallSeqEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CallSeqEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetActionSeq
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_ACT_SEQ                           InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::SetActionSeq(E_BTL_ACT_SEQ InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetActionSeq");

	Params::BattleCharAction_C_SetActionSeq Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.CallSeqEventCore
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::CallSeqEventCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CallSeqEventCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.IsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::IsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsFinished");

	Params::BattleCharAction_C_IsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetNoneFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetNoneFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetNoneFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqNoneFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqNoneFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqNoneFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.ClearActionParam
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::ClearActionParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ClearActionParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetAuto
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetAuto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetAuto");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqNone_ActTypeSet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::SeqNone_ActTypeSet(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqNone_ActTypeSet");

	Params::BattleCharAction_C_SeqNone_ActTypeSet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetCommFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetCommFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetCommFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqCommFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqCommFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqCommFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetTarselFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetTarselFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetTarselFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqTarselFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqTarselFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqTarselFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqReadyFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqReadyFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqReadyFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetAIFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetAIFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetAIFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqAIFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqAIFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqAIFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetCheck1Func
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetCheck1Func()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetCheck1Func");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqCheck1Func
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqCheck1Func()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqCheck1Func");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetCheck2Func
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetCheck2Func()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetCheck2Func");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqCheck2Func
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqCheck2Func()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqCheck2Func");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.GetCommand
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FBtlCommand                      RetValue                                               (Parm, OutParm)

void ABattleCharAction_C::GetCommand(struct FBtlCommand* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetCommand");

	Params::BattleCharAction_C_GetCommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleCharAction.BattleCharAction_C.GetPartyIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::GetPartyIndex(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetPartyIndex");

	Params::BattleCharAction_C_GetPartyIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetEndFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetEndFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetEndFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqEndFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqEndFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqEndFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.GetPecID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::GetPecID(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetPecID");

	Params::BattleCharAction_C_GetPecID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetTalkFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetTalkFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetTalkFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqTalkFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqTalkFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqTalkFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetTalkResultFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetTalkResultFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetTalkResultFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqTalkResultFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqTalkResultFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqTalkResultFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetEscapeFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetEscapeFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetEscapeFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqEscapeFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqEscapeFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqEscapeFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetChangeActorFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetChangeActorFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetChangeActorFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqChangeActorFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqChangeActorFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqChangeActorFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.GetRefListHP
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::GetRefListHP(int32 PartyIndex, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetRefListHP");

	Params::BattleCharAction_C_GetRefListHP Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetDeadTask
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::SetDeadTask(TArray<int32>& WaitTaskList, int32 PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetDeadTask");

	Params::BattleCharAction_C_SetDeadTask Parms{};

	Parms.WaitTaskList = std::move(WaitTaskList);
	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskList = std::move(Parms.WaitTaskList);
}


// Function BattleCharAction.BattleCharAction_C.SetCounterActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SrcIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DstIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::SetCounterActor(int32 SrcIndex, int32 DstIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetCounterActor");

	Params::BattleCharAction_C_SetCounterActor Parms{};

	Parms.SrcIndex = SrcIndex;
	Parms.DstIndex = DstIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.isCounterActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::IsCounterActor(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "isCounterActor");

	Params::BattleCharAction_C_IsCounterActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetCounterWaitFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetCounterWaitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetCounterWaitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqCounterWaitFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqCounterWaitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqCounterWaitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.CreateActor
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::CreateActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CreateActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetSkillActionFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetSkillActionFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetSkillActionFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqSkillActionFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqSkillActionFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqSkillActionFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.DokodemoPoa
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Inside                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::DokodemoPoa(E_BTL_SIDE Inside)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "DokodemoPoa");

	Params::BattleCharAction_C_DokodemoPoa Parms{};

	Parms.Inside = Inside;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.CheckTickValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::CheckTickValid(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CheckTickValid");

	Params::BattleCharAction_C_CheckTickValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SubActorTickPause
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::SubActorTickPause(bool Sw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SubActorTickPause");

	Params::BattleCharAction_C_SubActorTickPause Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.PauseSeq
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::PauseSeq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "PauseSeq");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.Debug_IsDamage0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   DstParty                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::Debug_IsDamage0(int32 DstParty, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "Debug_IsDamage0");

	Params::BattleCharAction_C_Debug_IsDamage0 Parms{};

	Parms.DstParty = DstParty;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.Debug_Damage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   DstParty                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InDamage                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::Debug_Damage(int32 DstParty, int32 InDamage, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "Debug_Damage");

	Params::BattleCharAction_C_Debug_Damage Parms{};

	Parms.DstParty = DstParty;
	Parms.InDamage = InDamage;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.Debug_IsDamageMax
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::Debug_IsDamageMax(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "Debug_IsDamageMax");

	Params::BattleCharAction_C_Debug_IsDamageMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetBadWaitFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetBadWaitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetBadWaitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqBadWaitFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqBadWaitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqBadWaitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.IsConfuseActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::IsConfuseActor(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsConfuseActor");

	Params::BattleCharAction_C_IsConfuseActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.IsCharmActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::IsCharmActor(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsCharmActor");

	Params::BattleCharAction_C_IsCharmActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.GetBstSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::GetBstSkill(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetBstSkill");

	Params::BattleCharAction_C_GetBstSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetExtraBadFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetExtraBadFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetExtraBadFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqExtraBadFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqExtraBadFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqExtraBadFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetPartnerActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::SetPartnerActor(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetPartnerActor");

	Params::BattleCharAction_C_SetPartnerActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetPartnerWaitFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetPartnerWaitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetPartnerWaitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqPartnerWaitFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqPartnerWaitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqPartnerWaitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.IsPartnerActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::IsPartnerActor(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsPartnerActor");

	Params::BattleCharAction_C_IsPartnerActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetPartnerTargetSelect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetPartnerTargetSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetPartnerTargetSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.GetDeadEffectType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SrcIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DstIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_DAMAGE_HIT_TYPE                   HitType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_DEAD_EFFECT                       RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::GetDeadEffectType(int32 SrcIndex, int32 DstIndex, E_BTL_DAMAGE_HIT_TYPE HitType, E_BTL_DEAD_EFFECT* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetDeadEffectType");

	Params::BattleCharAction_C_GetDeadEffectType Parms{};

	Parms.SrcIndex = SrcIndex;
	Parms.DstIndex = DstIndex;
	Parms.HitType = HitType;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.GetBIMainWork
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleMain_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::GetBIMainWork(TScriptInterface<class IBPI_BattleMain_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetBIMainWork");

	Params::BattleCharAction_C_GetBIMainWork Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.SetStkselFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetStkselFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetStkselFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqStkFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqStkFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqStkFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.Com_SkillSelAfter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_SIDE                              Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::Com_SkillSelAfter(int32 SkillId, E_BTL_SIDE Side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "Com_SkillSelAfter");

	Params::BattleCharAction_C_Com_SkillSelAfter Parms{};

	Parms.SkillId = SkillId;
	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.Com_ItemSelAfter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_SIDE                              Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::Com_ItemSelAfter(int32 ItemId, E_BTL_SIDE Side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "Com_ItemSelAfter");

	Params::BattleCharAction_C_Com_ItemSelAfter Parms{};

	Parms.ItemId = ItemId;
	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.SetSmnSelFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetSmnSelFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetSmnSelFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqSmnSelFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqSmnSelFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqSmnSelFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SkillMasterApplyAidEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlAttack                       AttackData                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   SrcIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DstIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::SkillMasterApplyAidEffect(const struct FBtlAttack& AttackData, int32 SrcIndex, int32 DstIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SkillMasterApplyAidEffect");

	Params::BattleCharAction_C_SkillMasterApplyAidEffect Parms{};

	Parms.AttackData = std::move(AttackData);
	Parms.SrcIndex = SrcIndex;
	Parms.DstIndex = DstIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.SetSummonTask
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TargetIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::SetSummonTask(int32 TargetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetSummonTask");

	Params::BattleCharAction_C_SetSummonTask Parms{};

	Parms.TargetIndex = TargetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.ApplySummon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::ApplySummon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ApplySummon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.ClearReflectCharaList
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::ClearReflectCharaList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ClearReflectCharaList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqSkillFunc_New
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqSkillFunc_New()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqSkillFunc_New");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.CalcActionDamage_Finish
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::CalcActionDamage_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CalcActionDamage_Finish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.AutoCommProc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAuto                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::AutoCommProc(bool* IsAuto)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "AutoCommProc");

	Params::BattleCharAction_C_AutoCommProc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsAuto != nullptr)
		*IsAuto = Parms.IsAuto;
}


// Function BattleCharAction.BattleCharAction_C.SetPlayRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::SetPlayRate(float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetPlayRate");

	Params::BattleCharAction_C_SetPlayRate Parms{};

	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.Com_TalkSelAfter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::Com_TalkSelAfter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "Com_TalkSelAfter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.CreateSettleCriticalListThread
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::CreateSettleCriticalListThread()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CreateSettleCriticalListThread");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.GetBPI_PartyMember
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_PTMemDataInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::GetBPI_PartyMember(TScriptInterface<class IBPI_PTMemDataInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetBPI_PartyMember");

	Params::BattleCharAction_C_GetBPI_PartyMember Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.GetBPI_PartyFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_PTFlagInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::GetBPI_PartyFlag(TScriptInterface<class IBPI_PTFlagInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetBPI_PartyFlag");

	Params::BattleCharAction_C_GetBPI_PartyFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.GetBPI_PartyBadStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_PTBadStatusInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::GetBPI_PartyBadStatus(TScriptInterface<class IBPI_PTBadStatusInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetBPI_PartyBadStatus");

	Params::BattleCharAction_C_GetBPI_PartyBadStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.GetBPI_PartyUtil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_PTUtilInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::GetBPI_PartyUtil(TScriptInterface<class IBPI_PTUtilInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetBPI_PartyUtil");

	Params::BattleCharAction_C_GetBPI_PartyUtil Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.GetMainWork
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABattleMain_C*                    AsBattle_Main                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::GetMainWork(class ABattleMain_C** AsBattle_Main)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetMainWork");

	Params::BattleCharAction_C_GetMainWork Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsBattle_Main != nullptr)
		*AsBattle_Main = Parms.AsBattle_Main;
}


// Function BattleCharAction.BattleCharAction_C.GetBPI_PartyUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_PTBPInterface_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::GetBPI_PartyUnit(TScriptInterface<class IBPI_PTBPInterface_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetBPI_PartyUnit");

	Params::BattleCharAction_C_GetBPI_PartyUnit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.GetBPI_Calc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_CalcInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::GetBPI_Calc(TScriptInterface<class IBPI_CalcInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetBPI_Calc");

	Params::BattleCharAction_C_GetBPI_Calc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.GetBPI_Main
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_MainInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::GetBPI_Main(TScriptInterface<class IBPI_MainInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetBPI_Main");

	Params::BattleCharAction_C_GetBPI_Main Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharAction.BattleCharAction_C.GetLeftIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::GetLeftIndex(int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetLeftIndex");

	Params::BattleCharAction_C_GetLeftIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BattleCharAction.BattleCharAction_C.SeqCheck3Func
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqCheck3Func()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqCheck3Func");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.FindUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharaBase_C*                     Unit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::FindUnit(int32 PartyIndex, class ACharaBase_C** Unit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "FindUnit");

	Params::BattleCharAction_C_FindUnit Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Unit != nullptr)
		*Unit = Parms.Unit;
}


// Function BattleCharAction.BattleCharAction_C.SetWaitFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetWaitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetWaitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqWaitFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqWaitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqWaitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetSkillFuncNew
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetSkillFuncNew()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetSkillFuncNew");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.ChangeBGM
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleBGMType                          BGM_Type                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFadeType                               FadeType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::ChangeBGM(EBattleBGMType BGM_Type, EFadeType FadeType, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ChangeBGM");

	Params::BattleCharAction_C_ChangeBGM Parms{};

	Parms.BGM_Type = BGM_Type;
	Parms.FadeType = FadeType;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BattleCharAction.BattleCharAction_C.SkillSkipCtrl
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SkillSkipCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SkillSkipCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.IsSkillSkippable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsSkipable                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::IsSkillSkippable(bool* IsSkipable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsSkillSkippable");

	Params::BattleCharAction_C_IsSkillSkippable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSkipable != nullptr)
		*IsSkipable = Parms.IsSkipable;
}


// Function BattleCharAction.BattleCharAction_C.RecoverFading
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::RecoverFading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "RecoverFading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DelatSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ContinueUpdate                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::Update(float DelatSec, bool* ContinueUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "Update");

	Params::BattleCharAction_C_Update Parms{};

	Parms.DelatSec = DelatSec;

	UObject::ProcessEvent(Func, &Parms);

	if (ContinueUpdate != nullptr)
		*ContinueUpdate = Parms.ContinueUpdate;
}


// Function BattleCharAction.BattleCharAction_C.SeqSkillActionFuncUpdateElectrification
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Ret                                                    (Parm, OutParm)

void ABattleCharAction_C::SeqSkillActionFuncUpdateElectrification(TArray<int32>& WaitTaskList, TArray<int32>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqSkillActionFuncUpdateElectrification");

	Params::BattleCharAction_C_SeqSkillActionFuncUpdateElectrification Parms{};

	Parms.WaitTaskList = std::move(WaitTaskList);

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskList = std::move(Parms.WaitTaskList);

	if (Ret != nullptr)
		*Ret = std::move(Parms.Ret);
}


// Function BattleCharAction.BattleCharAction_C.SeqSkillActionFuncUpdatePressIcon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Ret                                                    (Parm, OutParm)

void ABattleCharAction_C::SeqSkillActionFuncUpdatePressIcon(TArray<int32>& WaitTaskList, TArray<int32>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqSkillActionFuncUpdatePressIcon");

	Params::BattleCharAction_C_SeqSkillActionFuncUpdatePressIcon Parms{};

	Parms.WaitTaskList = std::move(WaitTaskList);

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskList = std::move(Parms.WaitTaskList);

	if (Ret != nullptr)
		*Ret = std::move(Parms.Ret);
}


// Function BattleCharAction.BattleCharAction_C.SeqSkillActionFuncUpliftingOff
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Ret                                                    (Parm, OutParm)

void ABattleCharAction_C::SeqSkillActionFuncUpliftingOff(TArray<int32>& WaitTaskList, TArray<int32>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqSkillActionFuncUpliftingOff");

	Params::BattleCharAction_C_SeqSkillActionFuncUpliftingOff Parms{};

	Parms.WaitTaskList = std::move(WaitTaskList);

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskList = std::move(Parms.WaitTaskList);

	if (Ret != nullptr)
		*Ret = std::move(Parms.Ret);
}


// Function BattleCharAction.BattleCharAction_C.GetHeroIndex
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::GetHeroIndex(int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetHeroIndex");

	Params::BattleCharAction_C_GetHeroIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BattleCharAction.BattleCharAction_C.IsPlayMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleParty_C>PartySys                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CHARA_MOTION_ID                       Motion                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlay                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::IsPlayMotion(TScriptInterface<class IBPI_BattleParty_C> PartySys, int32 PartyIndex, E_CHARA_MOTION_ID Motion, bool* IsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsPlayMotion");

	Params::BattleCharAction_C_IsPlayMotion Parms{};

	Parms.PartySys = PartySys;
	Parms.PartyIndex = PartyIndex;
	Parms.Motion = Motion;

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlay != nullptr)
		*IsPlay = Parms.IsPlay;
}


// Function BattleCharAction.BattleCharAction_C.ShowActionName
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WaitTaskID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_COMM_TYPE                         ActionType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ShowPos                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TaskID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::ShowActionName(int32 WaitTaskID, E_BTL_COMM_TYPE ActionType, int32 ShowPos, int32* TaskID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ShowActionName");

	Params::BattleCharAction_C_ShowActionName Parms{};

	Parms.WaitTaskID = WaitTaskID;
	Parms.ActionType = ActionType;
	Parms.ShowPos = ShowPos;

	UObject::ProcessEvent(Func, &Parms);

	if (TaskID != nullptr)
		*TaskID = Parms.TaskID;
}


// Function BattleCharAction.BattleCharAction_C.HideActionName
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskID                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   TaskID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::HideActionName(TArray<int32>& WaitTaskID, int32* TaskID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "HideActionName");

	Params::BattleCharAction_C_HideActionName Parms{};

	Parms.WaitTaskID = std::move(WaitTaskID);

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskID = std::move(Parms.WaitTaskID);

	if (TaskID != nullptr)
		*TaskID = Parms.TaskID;
}


// Function BattleCharAction.BattleCharAction_C.SeqSkillActionFuncMPCure
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Ret                                                    (Parm, OutParm)

void ABattleCharAction_C::SeqSkillActionFuncMPCure(TArray<int32>& WaitTaskList, TArray<int32>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqSkillActionFuncMPCure");

	Params::BattleCharAction_C_SeqSkillActionFuncMPCure Parms{};

	Parms.WaitTaskList = std::move(WaitTaskList);

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskList = std::move(Parms.WaitTaskList);

	if (Ret != nullptr)
		*Ret = std::move(Parms.Ret);
}


// Function BattleCharAction.BattleCharAction_C.SeqSkillActionFuncAfter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqSkillActionFuncAfter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqSkillActionFuncAfter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.CheckCommandSkillIsSummon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::CheckCommandSkillIsSummon(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CheckCommandSkillIsSummon");

	Params::BattleCharAction_C_CheckCommandSkillIsSummon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleCharAction.BattleCharAction_C.CheckCommandItemIsTelescope
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::CheckCommandItemIsTelescope(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CheckCommandItemIsTelescope");

	Params::BattleCharAction_C_CheckCommandItemIsTelescope Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleCharAction.BattleCharAction_C.RetrieveTargetIndex
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           Param_Index                                            (Parm, OutParm)

void ABattleCharAction_C::RetrieveTargetIndex(TArray<int32>* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "RetrieveTargetIndex");

	Params::BattleCharAction_C_RetrieveTargetIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = std::move(Parms.Param_Index);
}


// Function BattleCharAction.BattleCharAction_C.CalcSummonTarget
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           Src                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Dest                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsReturn                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSummon                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::CalcSummonTarget(TArray<int32>& Src, TArray<int32>& Dest, int32* Target, bool* IsReturn, bool* IsSummon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CalcSummonTarget");

	Params::BattleCharAction_C_CalcSummonTarget Parms{};

	Parms.Src = std::move(Src);
	Parms.Dest = std::move(Dest);

	UObject::ProcessEvent(Func, &Parms);

	Src = std::move(Parms.Src);
	Dest = std::move(Parms.Dest);

	if (Target != nullptr)
		*Target = Parms.Target;

	if (IsReturn != nullptr)
		*IsReturn = Parms.IsReturn;

	if (IsSummon != nullptr)
		*IsSummon = Parms.IsSummon;
}


// Function BattleCharAction.BattleCharAction_C.ReduceBGM
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::ReduceBGM(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ReduceBGM");

	Params::BattleCharAction_C_ReduceBGM Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.ResumeBGM
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::ResumeBGM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ResumeBGM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.GetEnemyNum
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::GetEnemyNum(int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetEnemyNum");

	Params::BattleCharAction_C_GetEnemyNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BattleCharAction.BattleCharAction_C.CalcSkillAptitude
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Aptitude                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::CalcSkillAptitude(int32 SkillId, int32* Aptitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CalcSkillAptitude");

	Params::BattleCharAction_C_CalcSkillAptitude Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (Aptitude != nullptr)
		*Aptitude = Parms.Aptitude;
}


// Function BattleCharAction.BattleCharAction_C.GetBIPartySystem
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleParty_C>BPIPartySystem                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::GetBIPartySystem(TScriptInterface<class IBPI_BattleParty_C>* BPIPartySystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "GetBIPartySystem");

	Params::BattleCharAction_C_GetBIPartySystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BPIPartySystem != nullptr)
		*BPIPartySystem = Parms.BPIPartySystem;
}


// Function BattleCharAction.BattleCharAction_C.SetDitherEnablePlayerSide
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::SetDitherEnablePlayerSide(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetDitherEnablePlayerSide");

	Params::BattleCharAction_C_SetDitherEnablePlayerSide Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.HideActionName_forOutsider
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::HideActionName_forOutsider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "HideActionName_forOutsider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.ShowActionName_forOutsider
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::ShowActionName_forOutsider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "ShowActionName_forOutsider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqSkillActionFuncUpdateApplyUnitState
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Ret                                                    (Parm, OutParm)

void ABattleCharAction_C::SeqSkillActionFuncUpdateApplyUnitState(TArray<int32>& WaitTaskList, TArray<int32>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqSkillActionFuncUpdateApplyUnitState");

	Params::BattleCharAction_C_SeqSkillActionFuncUpdateApplyUnitState Parms{};

	Parms.WaitTaskList = std::move(WaitTaskList);

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskList = std::move(Parms.WaitTaskList);

	if (Ret != nullptr)
		*Ret = std::move(Parms.Ret);
}


// Function BattleCharAction.BattleCharAction_C.SeqSkillActionFuncUniqueSkillCure
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAllAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsDeadOnly                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::SeqSkillActionFuncUniqueSkillCure(bool IsAllAction, bool IsDeadOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqSkillActionFuncUniqueSkillCure");

	Params::BattleCharAction_C_SeqSkillActionFuncUniqueSkillCure Parms{};

	Parms.IsAllAction = IsAllAction;
	Parms.IsDeadOnly = IsDeadOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.IsDecideSkip
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABattleCharAction_C::IsDecideSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsDecideSkip");

	Params::BattleCharAction_C_IsDecideSkip Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattleCharAction.BattleCharAction_C.BeginSkillSpeedCtrl
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::BeginSkillSpeedCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "BeginSkillSpeedCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.IsDecideSpeedCtrl
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABattleCharAction_C::IsDecideSpeedCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsDecideSpeedCtrl");

	Params::BattleCharAction_C_IsDecideSpeedCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattleCharAction.BattleCharAction_C.EndSkillSpeedCtrl
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::EndSkillSpeedCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "EndSkillSpeedCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SetAutoPassFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SetAutoPassFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SetAutoPassFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.SeqAutoPassFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::SeqAutoPassFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "SeqAutoPassFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.IsDecideButtonSpeedCtrl
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsCtrl                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::IsDecideButtonSpeedCtrl(bool* IsCtrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsDecideButtonSpeedCtrl");

	Params::BattleCharAction_C_IsDecideButtonSpeedCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsCtrl != nullptr)
		*IsCtrl = Parms.IsCtrl;
}


// Function BattleCharAction.BattleCharAction_C.IsAlwaysSkillSkip
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsSkip                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::IsAlwaysSkillSkip(bool* IsSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsAlwaysSkillSkip");

	Params::BattleCharAction_C_IsAlwaysSkillSkip Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSkip != nullptr)
		*IsSkip = Parms.IsSkip;
}


// Function BattleCharAction.BattleCharAction_C.UpdateSpeedCtrlRemainSec
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::UpdateSpeedCtrlRemainSec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "UpdateSpeedCtrlRemainSec");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.BeginBattleSpeedCtrl
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::BeginBattleSpeedCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "BeginBattleSpeedCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.EndBattleSpeedCtrl
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::EndBattleSpeedCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "EndBattleSpeedCtrl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.IsUnusualBGMBattle
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABattleCharAction_C::IsUnusualBGMBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsUnusualBGMBattle");

	Params::BattleCharAction_C_IsUnusualBGMBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattleCharAction.BattleCharAction_C.CheckStopAutoBattle
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    DoStop                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::CheckStopAutoBattle(bool* DoStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CheckStopAutoBattle");

	Params::BattleCharAction_C_CheckStopAutoBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DoStop != nullptr)
		*DoStop = Parms.DoStop;
}


// Function BattleCharAction.BattleCharAction_C.HasUniqueSkillExtraEffect
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<E_AUTO_SKILL_EXTRA_EFFECT>       ExtraEffects                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   UniqueSkillID                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContains                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Efficacy                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::HasUniqueSkillExtraEffect(const int32& PartyIndex, TArray<E_AUTO_SKILL_EXTRA_EFFECT>& ExtraEffects, int32* UniqueSkillID, bool* IsContains, bool* Efficacy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "HasUniqueSkillExtraEffect");

	Params::BattleCharAction_C_HasUniqueSkillExtraEffect Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.ExtraEffects = std::move(ExtraEffects);

	UObject::ProcessEvent(Func, &Parms);

	ExtraEffects = std::move(Parms.ExtraEffects);

	if (UniqueSkillID != nullptr)
		*UniqueSkillID = Parms.UniqueSkillID;

	if (IsContains != nullptr)
		*IsContains = Parms.IsContains;

	if (Efficacy != nullptr)
		*Efficacy = Parms.Efficacy;
}


// Function BattleCharAction.BattleCharAction_C.UniqueSkill_AddMagatsuhiGauge
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleCharAction_C::UniqueSkill_AddMagatsuhiGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "UniqueSkill_AddMagatsuhiGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleCharAction.BattleCharAction_C.CheckAction
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_INPUT_TYPE                            InputType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABattleCharAction_C::CheckAction(E_INPUT_TYPE InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CheckAction");

	Params::BattleCharAction_C_CheckAction Parms{};

	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattleCharAction.BattleCharAction_C.Unique Skill Charge Dead
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::Unique_Skill_Charge_Dead(int32 ActorIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "Unique Skill Charge Dead");

	Params::BattleCharAction_C_Unique_Skill_Charge_Dead Parms{};

	Parms.ActorIndex = ActorIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharAction.BattleCharAction_C.CheckUniqueSkillEfficacy
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   UniqueSkillID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SKILL_INFO_MESS_TIMING                Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Efficacy                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<int32>                           EffectiveTargets                                       (Parm, OutParm)

void ABattleCharAction_C::CheckUniqueSkillEfficacy(int32 UniqueSkillID, E_SKILL_INFO_MESS_TIMING Timing, TArray<int32>& Target, bool* Efficacy, TArray<int32>* EffectiveTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "CheckUniqueSkillEfficacy");

	Params::BattleCharAction_C_CheckUniqueSkillEfficacy Parms{};

	Parms.UniqueSkillID = UniqueSkillID;
	Parms.Timing = Timing;
	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);

	Target = std::move(Parms.Target);

	if (Efficacy != nullptr)
		*Efficacy = Parms.Efficacy;

	if (EffectiveTargets != nullptr)
		*EffectiveTargets = std::move(Parms.EffectiveTargets);
}


// Function BattleCharAction.BattleCharAction_C.RetrieveUniqueSkillIDs
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           PartyIndexs                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           UniqueSkillIDs                                         (Parm, OutParm)

void ABattleCharAction_C::RetrieveUniqueSkillIDs(TArray<int32>& PartyIndexs, TArray<int32>* UniqueSkillIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "RetrieveUniqueSkillIDs");

	Params::BattleCharAction_C_RetrieveUniqueSkillIDs Parms{};

	Parms.PartyIndexs = std::move(PartyIndexs);

	UObject::ProcessEvent(Func, &Parms);

	PartyIndexs = std::move(Parms.PartyIndexs);

	if (UniqueSkillIDs != nullptr)
		*UniqueSkillIDs = std::move(Parms.UniqueSkillIDs);
}


// Function BattleCharAction.BattleCharAction_C.IsWhiteOutFinishBlow
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABattleCharAction_C::IsWhiteOutFinishBlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "IsWhiteOutFinishBlow");

	Params::BattleCharAction_C_IsWhiteOutFinishBlow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattleCharAction.BattleCharAction_C.BPI_GetActorIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::BPI_GetActorIndex(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "BPI_GetActorIndex");

	Params::BattleCharAction_C_BPI_GetActorIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleCharAction.BattleCharAction_C.BPI_SetSelectList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<uint8>                           List                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::BPI_SetSelectList(const TArray<uint8>& List, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "BPI_SetSelectList");

	Params::BattleCharAction_C_BPI_SetSelectList Parms{};

	Parms.List = std::move(List);

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleCharAction.BattleCharAction_C.BPI_GetSelectList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<uint8>                           List                                                   (Parm, OutParm)

void ABattleCharAction_C::BPI_GetSelectList(TArray<uint8>* List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "BPI_GetSelectList");

	Params::BattleCharAction_C_BPI_GetSelectList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (List != nullptr)
		*List = std::move(Parms.List);
}


// Function BattleCharAction.BattleCharAction_C.BPI_ClearSelectList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::BPI_ClearSelectList(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "BPI_ClearSelectList");

	Params::BattleCharAction_C_BPI_ClearSelectList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleCharAction.BattleCharAction_C.BPI_ApplySummon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::BPI_ApplySummon(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "BPI_ApplySummon");

	Params::BattleCharAction_C_BPI_ApplySummon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleCharAction.BattleCharAction_C.BPI_SupportTsukuyomiSummon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleCharAction_C::BPI_SupportTsukuyomiSummon(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "BPI_SupportTsukuyomiSummon");

	Params::BattleCharAction_C_BPI_SupportTsukuyomiSummon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleCharAction.BattleCharAction_C.BPL_GetReflectCharaList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           Ret                                                    (Parm, OutParm)

void ABattleCharAction_C::BPL_GetReflectCharaList(TArray<int32>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "BPL_GetReflectCharaList");

	Params::BattleCharAction_C_BPL_GetReflectCharaList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = std::move(Parms.Ret);
}


// Function BattleCharAction.BattleCharAction_C.Do
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Complete                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleCharAction_C::Do(bool* Complete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharAction_C", "Do");

	Params::BattleCharAction_C_Do Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Complete != nullptr)
		*Complete = Parms.Complete;
}

}

