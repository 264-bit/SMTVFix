#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DevilAssetTableInstanceAccessor

#include "Basic.hpp"

#include "BPI_DevilAssetTableInstanceAccessor_classes.hpp"
#include "BPI_DevilAssetTableInstanceAccessor_parameters.hpp"


namespace SDK
{

// Function BPI_DevilAssetTableInstanceAccessor.BPI_DevilAssetTableInstanceAccessor_C.BI_GetDevilAsset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilAssetID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDevilAssetTable_Raw             AssetData                                              (Parm, OutParm)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilAssetTableInstanceAccessor_C::BI_GetDevilAsset(int32 DevilAssetID, struct FDevilAssetTable_Raw* AssetData, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilAssetTableInstanceAccessor_C", "BI_GetDevilAsset");

	Params::BPI_DevilAssetTableInstanceAccessor_C_BI_GetDevilAsset Parms{};

	Parms.DevilAssetID = DevilAssetID;

	UObject::ProcessEvent(Func, &Parms);

	if (AssetData != nullptr)
		*AssetData = std::move(Parms.AssetData);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BPI_DevilAssetTableInstanceAccessor.BPI_DevilAssetTableInstanceAccessor_C.BI_GetDevilAssetMapValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDevilAssetTable_Raw>     Value                                                  (Parm, OutParm)

void IBPI_DevilAssetTableInstanceAccessor_C::BI_GetDevilAssetMapValue(TArray<struct FDevilAssetTable_Raw>* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilAssetTableInstanceAccessor_C", "BI_GetDevilAssetMapValue");

	Params::BPI_DevilAssetTableInstanceAccessor_C_BI_GetDevilAssetMapValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}

}

