#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_Common

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_Common.BPL_Common_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_Common_C final : public UBlueprintFunctionLibrary
{
public:
	static struct FVector Flatten(const struct FVector& InVec, class UObject* __WorldContext);
	static struct FRotator RotMaskXY(const struct FRotator& Rotation, class UObject* __WorldContext);
	static void TraceGround(const struct FVector& Base, const struct FVector& Direction, float Length, float Radius, EDrawDebugTrace DrawDebugType, class UObject* __WorldContext, bool* Hit, struct FVector* Location, struct FVector* Normal, EPhysicalSurface* Surface);
	static float GetDistance(const struct FVector& From, const struct FVector& To, class UObject* __WorldContext);
	static bool IsPlayer(class AActor* Actor, class UObject* __WorldContext);
	static void SetPlayerIgnoreMoveInput(bool Ignore, class UObject* __WorldContext);
	static void SetPlayerIgnoreLookInput(bool Ignore, class UObject* __WorldContext);
	static void GetMapCommon(class UObject* __WorldContext, class AActor** Rerutn);
	static void SetPlayerLevelFlat(class UObject* __WorldContext);
	static void MaouPartyIn(int32 DevilID, class UObject* __WorldContext);
	static void RemoveHayataro(class UObject* __WorldContext);
	static void HayataroPartyIn(class UObject* __WorldContext, bool* IsEntry, bool* IsBattleIn);
	static void ApplyNahobinoOpen(class UObject* __WorldContext);
	static void GetMapUICtrl(class UObject* __WorldContext, class AActor** MapUICtrl);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_Common_C">();
	}
	static class UBPL_Common_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_Common_C>();
	}
};
static_assert(alignof(UBPL_Common_C) == 0x000008, "Wrong alignment on UBPL_Common_C");
static_assert(sizeof(UBPL_Common_C) == 0x000028, "Wrong size on UBPL_Common_C");

}

