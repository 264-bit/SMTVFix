#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_BattleDesignDebug

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_BattleDesignDebug.BPL_BattleDesignDebug_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_BattleDesignDebug_C final : public UBlueprintFunctionLibrary
{
public:
	static void AddDebugMenuBattleDesignDebug(class UObject* __WorldContext);
	static void BattleDebugAddCameraParam(class UObject* __WorldContext);
	static void RetrieveCameraNames(const class FString& Include, class UObject* __WorldContext, TArray<class FString>* CameraNames);
	static void BattleDesignDebugIsUseDebugData(const class FString& Path, class UObject* __WorldContext, bool* IsUse);
	static void BattleDesignDebugGetCameraName(const class FString& Path, class UObject* __WorldContext, class FString* IsCameraName);
	static void BattleDesignDebugIsPerformRigRail(class UObject* __WorldContext, bool* IsPerform);
	static void BattleDesignDebugCalcTargetFovy(float DistanceToTarget, class UObject* __WorldContext, float* Fovy);
	static void BattleDesignDebugIsAdjustFovy(class UObject* __WorldContext, bool* IsAdjust);
	static void BattleDebugAddSlopeParam(class UObject* __WorldContext);
	static void BattleDesignDebugIsEnableCharaTilt(class UObject* __WorldContext, bool* IsEnable);
	static void BattleDesignDebugGetTiltStartDeg(class UObject* __WorldContext, float* TiltStart);
	static void BattleDesignDebugRetrieveApplyTiming(class UObject* __WorldContext, TArray<E_CHARA_TILT>* Timing);
	static void BattleDesignDebugGetTiltSec(class UObject* __WorldContext, float* Sec);
	static void BattleDesignDebugDisableLookAtEnemyLine(class UObject* __WorldContext, bool* DisableLook);
	static void BattleDesignDebugGetSkillCameraSideFB(class UObject* __WorldContext, class FString* SideStr);
	static void BattleDesignDebugGetSkillCameraSideLR(class UObject* __WorldContext, class FString* SideStr);
	static void BattleDesignDebugDisableLookAtEnemyHeight(class UObject* __WorldContext, bool* DisableLook);
	static void BattleDesignDebugDisableAvoidBreakThrough(class UObject* __WorldContext, bool* IsAvoid);
	static void BattleDesignDebugIsShowRigSight(class UObject* __WorldContext, bool* IsShow);
	static void BattleDebugAddAnimNotifyParam(class UObject* __WorldContext);
	static void BattleDesignDebugIsShowAnimNotify(class UObject* __WorldContext, bool* IsEnable);
	static void BattleDesignDebugIsForceMotionChange(class UObject* __WorldContext, bool* IsEnable);
	static void BattleDesignDebugDisableAdjustRelativePitch(class UObject* __WorldContext, bool* DisableAdjust);
	static void BattleDesignDebugIsAdjustRelativeDistance(class UObject* __WorldContext, bool* IsAdjust);
	static void BattleDebugAddUIParam(class UObject* __WorldContext);
	static void BattleDesignDebugIsIgnoreCameraRelativeRotation(class UObject* __WorldContext, bool* IsAdjust);
	static void BattleDebugAddActionTiming(class UObject* __WorldContext);
	static void BattleDesignDebugGetMeleeStartDistance(class UObject* __WorldContext, float* Distance);
	static void BattleDesignDebugGetSkillMotionOffsetPosition(class UObject* __WorldContext, float* Distance);
	static void BattleDesignDebugIsNkmBoxOn(class UObject* __WorldContext, bool* IsAdjust);
	static void BattleDesignDebugGetCutChangeDegree(class UObject* __WorldContext, float* Degree);
	static void BattleDebugAddCharaChange(class UObject* __WorldContext);
	static void BattleDesignDebugGetAllowSameCamera(class UObject* __WorldContext, bool* Allowed);
	static void BattleDebugAddDevilScale(class UObject* __WorldContext);
	static void BattleDesignDebugGetEnemyDevilScaleParam(class UObject* __WorldContext, int32* ScaleParam);
	static void BattleDebugAddTaskDebug(class UObject* __WorldContext);
	static void BattleDesignDebugIsDrawInfo(class UObject* __WorldContext, bool* IsDraw);
	static void BattleDesignDebugIsUseOldTaskSystem(class UObject* __WorldContext, bool* Enable);
	static void BattleDesignDebugIsSkillCheckAutoBattle(class UObject* __WorldContext, bool* Enable);
	static void BattleDesignDebugGetSkillCheckStartSkillID(class UObject* __WorldContext, int32* SkillId);
	static void BattleDesignDebugIsNotSkipWhenWatingDamageTooLong(class UObject* __WorldContext, bool* Enable);
	static void BattleDesignDebugIsSkillCheckRandomSelect(class UObject* __WorldContext, bool* Enable);
	static void BattleDesignDebugCheckValidSkillID(int32 SkillId, class UObject* __WorldContext, bool* Valid);
	static void BattleDesignDebugGetActorDitherAtSkillHit(class UObject* __WorldContext, bool* Allowed);
	static void BattleDebugAddBattleFieldDebug(class UObject* __WorldContext);
	static void BattleDesignDebugGetSkipProcessActivateSec(class UObject* __WorldContext, float* Enable);
	static void BattleDesignDebugGetSkipProcessForceExecuteSec(class UObject* __WorldContext, float* Enable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_BattleDesignDebug_C">();
	}
	static class UBPL_BattleDesignDebug_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_BattleDesignDebug_C>();
	}
};
static_assert(alignof(UBPL_BattleDesignDebug_C) == 0x000008, "Wrong alignment on UBPL_BattleDesignDebug_C");
static_assert(sizeof(UBPL_BattleDesignDebug_C) == 0x000028, "Wrong size on UBPL_BattleDesignDebug_C");

}

