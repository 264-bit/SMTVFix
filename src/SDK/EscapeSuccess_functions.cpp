#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EscapeSuccess

#include "Basic.hpp"

#include "EscapeSuccess_classes.hpp"
#include "EscapeSuccess_parameters.hpp"


namespace SDK
{

// Function EscapeSuccess.EscapeSuccess_C.ExecuteUbergraph_EscapeSuccess
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEscapeSuccess_C::ExecuteUbergraph_EscapeSuccess(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EscapeSuccess_C", "ExecuteUbergraph_EscapeSuccess");

	Params::EscapeSuccess_C_ExecuteUbergraph_EscapeSuccess Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EscapeSuccess.EscapeSuccess_C.EscapelPerformance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Step                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEscapeSuccess_C::EscapelPerformance(int32 Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EscapeSuccess_C", "EscapelPerformance");

	Params::EscapeSuccess_C_EscapelPerformance Parms{};

	Parms.Step = Step;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EscapeSuccess.EscapeSuccess_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AEscapeSuccess_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EscapeSuccess_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EscapeSuccess.EscapeSuccess_C.CounterFunc
// (Protected, BlueprintCallable, BlueprintEvent)

void AEscapeSuccess_C::CounterFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EscapeSuccess_C", "CounterFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EscapeSuccess.EscapeSuccess_C.DeadFunc
// (Protected, BlueprintCallable, BlueprintEvent)

void AEscapeSuccess_C::DeadFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EscapeSuccess_C", "DeadFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EscapeSuccess.EscapeSuccess_C.HitFunc
// (Protected, BlueprintCallable, BlueprintEvent)

void AEscapeSuccess_C::HitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EscapeSuccess_C", "HitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EscapeSuccess.EscapeSuccess_C.IntroductionFunc
// (Protected, BlueprintCallable, BlueprintEvent)

void AEscapeSuccess_C::IntroductionFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EscapeSuccess_C", "IntroductionFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EscapeSuccess.EscapeSuccess_C.FinishFunc
// (Protected, BlueprintCallable, BlueprintEvent)

void AEscapeSuccess_C::FinishFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EscapeSuccess_C", "FinishFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

