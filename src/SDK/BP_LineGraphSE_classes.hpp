#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LineGraphSE

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LineGraphSE.BP_LineGraphSE_C
// 0x0030 (0x0250 - 0x0220)
class ABP_LineGraphSE_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          CullBox;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_ResidentSound_C*                   BPC_ResidentSound;                                 // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Cue;                                               // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LineGraphSE(int32 EntryPoint);
	void BndEvt__CullBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__CullBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void TickSELocation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LineGraphSE_C">();
	}
	static class ABP_LineGraphSE_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LineGraphSE_C>();
	}
};
static_assert(alignof(ABP_LineGraphSE_C) == 0x000008, "Wrong alignment on ABP_LineGraphSE_C");
static_assert(sizeof(ABP_LineGraphSE_C) == 0x000250, "Wrong size on ABP_LineGraphSE_C");
static_assert(offsetof(ABP_LineGraphSE_C, UberGraphFrame) == 0x000220, "Member 'ABP_LineGraphSE_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LineGraphSE_C, CullBox) == 0x000228, "Member 'ABP_LineGraphSE_C::CullBox' has a wrong offset!");
static_assert(offsetof(ABP_LineGraphSE_C, BPC_ResidentSound) == 0x000230, "Member 'ABP_LineGraphSE_C::BPC_ResidentSound' has a wrong offset!");
static_assert(offsetof(ABP_LineGraphSE_C, Root) == 0x000238, "Member 'ABP_LineGraphSE_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_LineGraphSE_C, Spline) == 0x000240, "Member 'ABP_LineGraphSE_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_LineGraphSE_C, Cue) == 0x000248, "Member 'ABP_LineGraphSE_C::Cue' has a wrong offset!");

}

