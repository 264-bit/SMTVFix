#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NaviDevilGimmick_IgnorePause

#include "Basic.hpp"

#include "BP_NaviDevilGimmick_IgnorePause_classes.hpp"
#include "BP_NaviDevilGimmick_IgnorePause_parameters.hpp"


namespace SDK
{

// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EvtDis_GoalGimmick__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::EvtDis_GoalGimmick__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "EvtDis_GoalGimmick__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EvtDis_LeaveTarget__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::EvtDis_LeaveTarget__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "EvtDis_LeaveTarget__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause");

	Params::BP_NaviDevilGimmick_IgnorePause_C_ExecuteUbergraph_BP_NaviDevilGimmick_IgnorePause Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EndOverlap_FollowHit
// (BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::EndOverlap_FollowHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "EndOverlap_FollowHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BeginOverlap_FollowHit
// (BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::BeginOverlap_FollowHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BeginOverlap_FollowHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.Evt_WarpBasePos
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBPC_CharaFollower_C*             This                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::Evt_WarpBasePos(class AActor* Target, class UBPC_CharaFollower_C* This)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "Evt_WarpBasePos");

	Params::BP_NaviDevilGimmick_IgnorePause_C_Evt_WarpBasePos Parms{};

	Parms.Target = Target;
	Parms.This = This;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EvtDis_EndEvent_
// (BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::EvtDis_EndEvent_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "EvtDis_EndEvent_");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EvtDis_LeaveTarget_
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBPC_CharaFollower_C*             This                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::EvtDis_LeaveTarget_(class AActor* Target, class UBPC_CharaFollower_C* This)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "EvtDis_LeaveTarget_");

	Params::BP_NaviDevilGimmick_IgnorePause_C_EvtDis_LeaveTarget_ Parms{};

	Parms.Target = Target;
	Parms.This = This;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EvtDis_GoalGimmick_
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBPC_CharaFollower_C*             This                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::EvtDis_GoalGimmick_(class AActor* Target, class UBPC_CharaFollower_C* This)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "EvtDis_GoalGimmick_");

	Params::BP_NaviDevilGimmick_IgnorePause_C_EvtDis_GoalGimmick_ Parms{};

	Parms.Target = Target;
	Parms.This = This;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EvtDis_EndOverlap_
// (BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::EvtDis_EndOverlap_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "EvtDis_EndOverlap_");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EvtDis_BeginOverlap_
// (BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::EvtDis_BeginOverlap_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "EvtDis_BeginOverlap_");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_NaviDevilGimmick_IgnorePause_C::BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_NaviDevilGimmick_IgnorePause_C_BndEvt__FollowHit_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_SetNaviGimmickDebugView
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    View                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NaviDevilGimmick_IgnorePause_C::BPI_SetNaviGimmickDebugView(bool View)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BPI_SetNaviGimmickDebugView");

	Params::BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickDebugView Parms{};

	Parms.View = View;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_SetNaviGimmickActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NaviDevilGimmick_IgnorePause_C::BPI_SetNaviGimmickActive(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BPI_SetNaviGimmickActive");

	Params::BP_NaviDevilGimmick_IgnorePause_C_BPI_SetNaviGimmickActive Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EventHitOUT
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::EventHitOUT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "EventHitOUT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.EventHitIN
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::EventHitIN()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "EventHitIN");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.OnLoaded_3040A93845BE129A9498D9B94AC20E0D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::OnLoaded_3040A93845BE129A9498D9B94AC20E0D(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "OnLoaded_3040A93845BE129A9498D9B94AC20E0D");

	Params::BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_3040A93845BE129A9498D9B94AC20E0D Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.OnLoaded_A2400B66439F28435BD53BB0D9184B44
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::OnLoaded_A2400B66439F28435BD53BB0D9184B44(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "OnLoaded_A2400B66439F28435BD53BB0D9184B44");

	Params::BP_NaviDevilGimmick_IgnorePause_C_OnLoaded_A2400B66439F28435BD53BB0D9184B44 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.CalcExistNum
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::CalcExistNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "CalcExistNum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.CalcSave
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::CalcSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "CalcSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.DebugText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::DebugText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "DebugText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.CheckIgnoreBox
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Lock                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NaviDevilGimmick_IgnorePause_C::CheckIgnoreBox(bool* Lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "CheckIgnoreBox");

	Params::BP_NaviDevilGimmick_IgnorePause_C_CheckIgnoreBox Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Lock != nullptr)
		*Lock = Parms.Lock;
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.ShowIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::ShowIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "ShowIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.HideIcon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::HideIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "HideIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.GetNaviParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FNaviDevilParam_st               Param                                                  (Parm, OutParm, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::GetNaviParam(struct FNaviDevilParam_st* Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "GetNaviParam");

	Params::BP_NaviDevilGimmick_IgnorePause_C_GetNaviParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param != nullptr)
		*Param = std::move(Parms.Param);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.CallOuterTutorial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::CallOuterTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "CallOuterTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.CallInnerTutorial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::CallInnerTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "CallInnerTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.CallInnerMovedTutorial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NaviDevilGimmick_IgnorePause_C::CallInnerMovedTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "CallInnerMovedTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.LineTrace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Start                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDrawDebugTrace                         DrawDebugType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Param_Hit                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NaviDevilGimmick_IgnorePause_C::LineTrace(const struct FVector& Start, const struct FVector& End, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool* Param_Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "LineTrace");

	Params::BP_NaviDevilGimmick_IgnorePause_C_LineTrace Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.DrawDebugType = DrawDebugType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);

	if (Param_Hit != nullptr)
		*Param_Hit = Parms.Param_Hit;
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.GetAroundLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BaseLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BaseDir                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LocationNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  LocationList                                           (Parm, OutParm)

void ABP_NaviDevilGimmick_IgnorePause_C::GetAroundLocation(const struct FVector& BaseLocation, const struct FVector& BaseDir, float Distance, int32 LocationNum, TArray<struct FVector>* LocationList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "GetAroundLocation");

	Params::BP_NaviDevilGimmick_IgnorePause_C_GetAroundLocation Parms{};

	Parms.BaseLocation = std::move(BaseLocation);
	Parms.BaseDir = std::move(BaseDir);
	Parms.Distance = Distance;
	Parms.LocationNum = LocationNum;

	UObject::ProcessEvent(Func, &Parms);

	if (LocationList != nullptr)
		*LocationList = std::move(Parms.LocationList);
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_GetNaviGimmickExistNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::BPI_GetNaviGimmickExistNum(int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BPI_GetNaviGimmickExistNum");

	Params::BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickExistNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_GetNaviGimmickCategory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Category                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::BPI_GetNaviGimmickCategory(int32* Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BPI_GetNaviGimmickCategory");

	Params::BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickCategory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Category != nullptr)
		*Category = Parms.Category;
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_GetNaviGimmickSaveID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_SaveId                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NaviDevilGimmick_IgnorePause_C::BPI_GetNaviGimmickSaveID(int32* Param_SaveId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BPI_GetNaviGimmickSaveID");

	Params::BP_NaviDevilGimmick_IgnorePause_C_BPI_GetNaviGimmickSaveID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SaveId != nullptr)
		*Param_SaveId = Parms.Param_SaveId;
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_CanExistNaviGimmick
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanExist                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NaviDevilGimmick_IgnorePause_C::BPI_CanExistNaviGimmick(bool* CanExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BPI_CanExistNaviGimmick");

	Params::BP_NaviDevilGimmick_IgnorePause_C_BPI_CanExistNaviGimmick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanExist != nullptr)
		*CanExist = Parms.CanExist;
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_IsCheckObstacle_WhenGotoGimmick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_CheckObstacle_WhenGotoGimmick                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NaviDevilGimmick_IgnorePause_C::BPI_IsCheckObstacle_WhenGotoGimmick(bool* Param_CheckObstacle_WhenGotoGimmick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BPI_IsCheckObstacle_WhenGotoGimmick");

	Params::BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckObstacle_WhenGotoGimmick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CheckObstacle_WhenGotoGimmick != nullptr)
		*Param_CheckObstacle_WhenGotoGimmick = Parms.Param_CheckObstacle_WhenGotoGimmick;
}


// Function BP_NaviDevilGimmick_IgnorePause.BP_NaviDevilGimmick_IgnorePause_C.BPI_IsCheckGotoGimmickMoving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_CheckGotoGimmickMoving                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NaviDevilGimmick_IgnorePause_C::BPI_IsCheckGotoGimmickMoving(bool* Param_CheckGotoGimmickMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NaviDevilGimmick_IgnorePause_C", "BPI_IsCheckGotoGimmickMoving");

	Params::BP_NaviDevilGimmick_IgnorePause_C_BPI_IsCheckGotoGimmickMoving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CheckGotoGimmickMoving != nullptr)
		*Param_CheckGotoGimmickMoving = Parms.Param_CheckGotoGimmickMoving;
}

}

