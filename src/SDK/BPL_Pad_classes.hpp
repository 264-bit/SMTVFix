#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_Pad

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_Pad.BPL_Pad_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_Pad_C final : public UBlueprintFunctionLibrary
{
public:
	static void IsActionPadCheck(E_ACTION_MAPPING_TYPE ActionMapping, E_INPUT_TYPE InputType, class UObject* __WorldContext, bool* Success);
	static void GetAxisPad(E_AXIS_MAPPING_TYPE AxisMapping, class UObject* __WorldContext, float* Value);
	static void GetInputActionMappings(E_INPUT_TYPE InputType, class UObject* __WorldContext, TArray<E_ACTION_MAPPING_TYPE>* ActionMappings);
	static void RepeatActionCheck_ForCrossKey(E_ACTION_MAPPING_TYPE ActionMapping, class UObject* __WorldContext, bool* Success);
	static void GetMouseWheelAxis(class UObject* __WorldContext, float* Axis);
	static void GetMousePos(class UObject* __WorldContext, bool* Success, float* X, float* Y);
	static void IsHold_MouseLeftButton(class UObject* __WorldContext, bool* Hold);
	static void CheckGamePadUI(class UObject* __WorldContext, bool* Gamepad);
	static void CheckGamePadEnable(class UObject* __WorldContext, bool* Enable);
	static void CheckMouseKeyboardEnable(class UObject* __WorldContext, bool* Enable);
	static void CallManualActionMapping(E_ACTION_MAPPING_TYPE ActionMapping, class UObject* __WorldContext);
	static void CallManualAxisMapping(E_AXIS_MAPPING_TYPE AxisMapping, float Scale, class UObject* __WorldContext);
	static void ConvertAxisMovingScale(float InAxisValue, class UObject* __WorldContext, float* OutAxisValue);
	static void IsMovedMouseCursor(class UObject* __WorldContext, bool* Moved);
	static void IsHold_MouseAnyButton(class UObject* __WorldContext, bool* Hold);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_Pad_C">();
	}
	static class UBPL_Pad_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_Pad_C>();
	}
};
static_assert(alignof(UBPL_Pad_C) == 0x000008, "Wrong alignment on UBPL_Pad_C");
static_assert(sizeof(UBPL_Pad_C) == 0x000028, "Wrong size on UBPL_Pad_C");

}

