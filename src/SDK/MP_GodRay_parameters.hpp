#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MP_GodRay

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MP_GodRay.MP_GodRay_C.ExecuteUbergraph_MP_GodRay
// 0x0008 (0x0008 - 0x0000)
struct MP_GodRay_C_ExecuteUbergraph_MP_GodRay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GodRay_C_ExecuteUbergraph_MP_GodRay) == 0x000004, "Wrong alignment on MP_GodRay_C_ExecuteUbergraph_MP_GodRay");
static_assert(sizeof(MP_GodRay_C_ExecuteUbergraph_MP_GodRay) == 0x000008, "Wrong size on MP_GodRay_C_ExecuteUbergraph_MP_GodRay");
static_assert(offsetof(MP_GodRay_C_ExecuteUbergraph_MP_GodRay, EntryPoint) == 0x000000, "Member 'MP_GodRay_C_ExecuteUbergraph_MP_GodRay::EntryPoint' has a wrong offset!");
static_assert(offsetof(MP_GodRay_C_ExecuteUbergraph_MP_GodRay, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'MP_GodRay_C_ExecuteUbergraph_MP_GodRay::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function MP_GodRay.MP_GodRay_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct MP_GodRay_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GodRay_C_UserConstructionScript) == 0x000008, "Wrong alignment on MP_GodRay_C_UserConstructionScript");
static_assert(sizeof(MP_GodRay_C_UserConstructionScript) == 0x000020, "Wrong size on MP_GodRay_C_UserConstructionScript");
static_assert(offsetof(MP_GodRay_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'MP_GodRay_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GodRay_C_UserConstructionScript, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000008, "Member 'MP_GodRay_C_UserConstructionScript::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GodRay_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'MP_GodRay_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GodRay_C_UserConstructionScript, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x00001C, "Member 'MP_GodRay_C_UserConstructionScript::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");

// Function MP_GodRay.MP_GodRay_C.UpdateOpacity
// 0x0004 (0x0004 - 0x0000)
struct MP_GodRay_C_UpdateOpacity final
{
public:
	float                                         NewOpacity;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GodRay_C_UpdateOpacity) == 0x000004, "Wrong alignment on MP_GodRay_C_UpdateOpacity");
static_assert(sizeof(MP_GodRay_C_UpdateOpacity) == 0x000004, "Wrong size on MP_GodRay_C_UpdateOpacity");
static_assert(offsetof(MP_GodRay_C_UpdateOpacity, NewOpacity) == 0x000000, "Member 'MP_GodRay_C_UpdateOpacity::NewOpacity' has a wrong offset!");

}

