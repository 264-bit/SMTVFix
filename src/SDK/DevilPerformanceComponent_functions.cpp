#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DevilPerformanceComponent

#include "Basic.hpp"

#include "DevilPerformanceComponent_classes.hpp"
#include "DevilPerformanceComponent_parameters.hpp"


namespace SDK
{

// Function DevilPerformanceComponent.DevilPerformanceComponent_C.Evt_AfterAdjustMeshScale__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::Evt_AfterAdjustMeshScale__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "Evt_AfterAdjustMeshScale__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.ExecuteUbergraph_DevilPerformanceComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::ExecuteUbergraph_DevilPerformanceComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "ExecuteUbergraph_DevilPerformanceComponent");

	Params::DevilPerformanceComponent_C_ExecuteUbergraph_DevilPerformanceComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.LoadParticles
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftObjectPtr<class UParticleSystem>>Particles                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UDevilPerformanceComponent_C::LoadParticles(const TArray<TSoftObjectPtr<class UParticleSystem>>& Particles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "LoadParticles");

	Params::DevilPerformanceComponent_C_LoadParticles Parms{};

	Parms.Particles = std::move(Particles);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "ReceiveEndPlay");

	Params::DevilPerformanceComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UDevilPerformanceComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.LoadDestructibleMesh
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::LoadDestructibleMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "LoadDestructibleMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Dead_CharaEffectDeactivate
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Dead_CharaEffectDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Dead_CharaEffectDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Dead_UpdateFreezeDMDither
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DitherRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::TimeLine_Dead_UpdateFreezeDMDither(float DitherRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Dead_UpdateFreezeDMDither");

	Params::DevilPerformanceComponent_C_TimeLine_Dead_UpdateFreezeDMDither Parms{};

	Parms.DitherRate = DitherRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Dead_UpdateFreeze
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeadMaterialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateMaterialValue                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::TimeLine_Dead_UpdateFreeze(float DeadMaterialValue, float StateMaterialValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Dead_UpdateFreeze");

	Params::DevilPerformanceComponent_C_TimeLine_Dead_UpdateFreeze Parms{};

	Parms.DeadMaterialValue = DeadMaterialValue;
	Parms.StateMaterialValue = StateMaterialValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Dead_Update
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeadMaterialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateMaterialValue                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::TimeLine_Dead_Update(float DeadMaterialValue, float StateMaterialValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Dead_Update");

	Params::DevilPerformanceComponent_C_TimeLine_Dead_Update Parms{};

	Parms.DeadMaterialValue = DeadMaterialValue;
	Parms.StateMaterialValue = StateMaterialValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Dead_BreakDown
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Dead_BreakDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Dead_BreakDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Dead_StopMotion
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Dead_StopMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Dead_StopMotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Dead_SpawnParticle
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Dead_SpawnParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Dead_SpawnParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Dead_Dead
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Dead_Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Dead_Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Dead_Finished
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Dead_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Dead_Finished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.SpawnActionParticle
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UParticleSystem*>          Particle                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class USoundAtomCue*                    SE                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OnexScale                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::SpawnActionParticle(const TArray<class UParticleSystem*>& Particle, class USoundAtomCue* SE, class FName SocketName, float PlayRate, bool OnexScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "SpawnActionParticle");

	Params::DevilPerformanceComponent_C_SpawnActionParticle Parms{};

	Parms.Particle = std::move(Particle);
	Parms.SE = SE;
	Parms.SocketName = SocketName;
	Parms.PlayRate = PlayRate;
	Parms.OnexScale = OnexScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PrepareDeadActionData
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_DEAD_EFFECT                       DeadType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::PrepareDeadActionData(E_BTL_DEAD_EFFECT DeadType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PrepareDeadActionData");

	Params::DevilPerformanceComponent_C_PrepareDeadActionData Parms{};

	Parms.DeadType = DeadType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.Begin_DeathAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   InOption                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DeadTimingOverride                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DeadTiming                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::Begin_DeathAction(uint8 InOption, bool DeadTimingOverride, float DeadTiming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "Begin_DeathAction");

	Params::DevilPerformanceComponent_C_Begin_DeathAction Parms{};

	Parms.InOption = InOption;
	Parms.DeadTimingOverride = DeadTimingOverride;
	Parms.DeadTiming = DeadTiming;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TImeLine_Summon_EndofSummon
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TImeLine_Summon_EndofSummon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TImeLine_Summon_EndofSummon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.Begin_RapidSummonAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentStatus                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::Begin_RapidSummonAction(int32 CurrentStatus, bool IsSymbol, bool Immediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "Begin_RapidSummonAction");

	Params::DevilPerformanceComponent_C_Begin_RapidSummonAction Parms{};

	Parms.CurrentStatus = CurrentStatus;
	Parms.IsSymbol = IsSymbol;
	Parms.Immediately = Immediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.Begin_RapidReturnAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::Begin_RapidReturnAction(float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "Begin_RapidReturnAction");

	Params::DevilPerformanceComponent_C_Begin_RapidReturnAction Parms{};

	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Return_Finished
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Return_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Return_Finished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Return_ParticleOff
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Return_ParticleOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Return_ParticleOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Return_Update
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::TimeLine_Return_Update(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Return_Update");

	Params::DevilPerformanceComponent_C_TimeLine_Return_Update Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Summon_Finished
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Summon_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Summon_Finished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Summon_ApplyBadStatus
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Summon_ApplyBadStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Summon_ApplyBadStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Summon_Update
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::TimeLine_Summon_Update(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Summon_Update");

	Params::DevilPerformanceComponent_C_TimeLine_Summon_Update Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.Begin_ReturnAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsInstantEvent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::Begin_ReturnAction(float PlayRate, bool IsInstantEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "Begin_ReturnAction");

	Params::DevilPerformanceComponent_C_Begin_ReturnAction Parms{};

	Parms.PlayRate = PlayRate;
	Parms.IsInstantEvent = IsInstantEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.Begin_SummonAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentStatus                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsInstantEvent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::Begin_SummonAction(int32 CurrentStatus, bool IsSymbol, bool Immediately, bool IsInstantEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "Begin_SummonAction");

	Params::DevilPerformanceComponent_C_Begin_SummonAction Parms{};

	Parms.CurrentStatus = CurrentStatus;
	Parms.IsSymbol = IsSymbol;
	Parms.Immediately = Immediately;
	Parms.IsInstantEvent = IsInstantEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Revive_Finished_Nakama
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Revive_Finished_Nakama()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Revive_Finished_Nakama");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Revive_ParticleOn_Nakama
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Revive_ParticleOn_Nakama()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Revive_ParticleOn_Nakama");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Revive_Update_Nakama
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::TimeLine_Revive_Update_Nakama(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Revive_Update_Nakama");

	Params::DevilPerformanceComponent_C_TimeLine_Revive_Update_Nakama Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Revive_Finished_Enemy
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Revive_Finished_Enemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Revive_Finished_Enemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Revive_ParticleOn_Enemy
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Revive_ParticleOn_Enemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Revive_ParticleOn_Enemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Revive_Update_Enemy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::TimeLine_Revive_Update_Enemy(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Revive_Update_Enemy");

	Params::DevilPerformanceComponent_C_TimeLine_Revive_Update_Enemy Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.Begin_ReviveAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::Begin_ReviveAction(bool IsSymbol)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "Begin_ReviveAction");

	Params::DevilPerformanceComponent_C_Begin_ReviveAction Parms{};

	Parms.IsSymbol = IsSymbol;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Spawn_SpawnEffectVisibleOn
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Spawn_SpawnEffectVisibleOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Spawn_SpawnEffectVisibleOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Spawn_SpawnMotion
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Spawn_SpawnMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Spawn_SpawnMotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Spawn_SpawnEffect
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Spawn_SpawnEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Spawn_SpawnEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Spawn_SpawnDecal
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Spawn_SpawnDecal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Spawn_SpawnDecal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Spawn_Finished
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::TimeLine_Spawn_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Spawn_Finished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.TimeLine_Spawn_Update
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::TimeLine_Spawn_Update(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "TimeLine_Spawn_Update");

	Params::DevilPerformanceComponent_C_TimeLine_Spawn_Update Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformSpawnDecal
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PerformSpawnDecal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformSpawnDecal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformSpawn
// (BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PerformSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.Begin_PlayStartEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PlayMotion                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsInstantEvent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::Begin_PlayStartEffect(bool IsSymbol, bool PlayMotion, bool IsInstantEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "Begin_PlayStartEffect");

	Params::DevilPerformanceComponent_C_Begin_PlayStartEffect Parms{};

	Parms.IsSymbol = IsSymbol;
	Parms.PlayMotion = PlayMotion;
	Parms.IsInstantEvent = IsInstantEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_8AF18245438D7BE0543AE082597FC168
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_8AF18245438D7BE0543AE082597FC168(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_8AF18245438D7BE0543AE082597FC168");

	Params::DevilPerformanceComponent_C_OnLoaded_8AF18245438D7BE0543AE082597FC168 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_BBBB00E64EF9214BEFCDC4B21852097A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_BBBB00E64EF9214BEFCDC4B21852097A(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_BBBB00E64EF9214BEFCDC4B21852097A");

	Params::DevilPerformanceComponent_C_OnLoaded_BBBB00E64EF9214BEFCDC4B21852097A Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_21A24FF24F9179F917F54184D78EA334
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_21A24FF24F9179F917F54184D78EA334(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_21A24FF24F9179F917F54184D78EA334");

	Params::DevilPerformanceComponent_C_OnLoaded_21A24FF24F9179F917F54184D78EA334 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_CF3CAD974F79FF778E0E3580BC07A721
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_CF3CAD974F79FF778E0E3580BC07A721(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_CF3CAD974F79FF778E0E3580BC07A721");

	Params::DevilPerformanceComponent_C_OnLoaded_CF3CAD974F79FF778E0E3580BC07A721 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_D1EEB0594CEB5C96BDBF08BA23CE86CE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_D1EEB0594CEB5C96BDBF08BA23CE86CE(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_D1EEB0594CEB5C96BDBF08BA23CE86CE");

	Params::DevilPerformanceComponent_C_OnLoaded_D1EEB0594CEB5C96BDBF08BA23CE86CE Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_27D48A50494FB2E0362338A35F064586
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_27D48A50494FB2E0362338A35F064586(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_27D48A50494FB2E0362338A35F064586");

	Params::DevilPerformanceComponent_C_OnLoaded_27D48A50494FB2E0362338A35F064586 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_AFF84E60425A20B2B02FB8BAE0D68980
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_AFF84E60425A20B2B02FB8BAE0D68980(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_AFF84E60425A20B2B02FB8BAE0D68980");

	Params::DevilPerformanceComponent_C_OnLoaded_AFF84E60425A20B2B02FB8BAE0D68980 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_E8DDD1164F938CF44791AB8157486DE8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_E8DDD1164F938CF44791AB8157486DE8(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_E8DDD1164F938CF44791AB8157486DE8");

	Params::DevilPerformanceComponent_C_OnLoaded_E8DDD1164F938CF44791AB8157486DE8 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_589B9BA242E542D45B3EDCA25E41FA65
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_589B9BA242E542D45B3EDCA25E41FA65(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_589B9BA242E542D45B3EDCA25E41FA65");

	Params::DevilPerformanceComponent_C_OnLoaded_589B9BA242E542D45B3EDCA25E41FA65 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_86678FBD4DD68F6937F1D0927DDDDA46
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_86678FBD4DD68F6937F1D0927DDDDA46(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_86678FBD4DD68F6937F1D0927DDDDA46");

	Params::DevilPerformanceComponent_C_OnLoaded_86678FBD4DD68F6937F1D0927DDDDA46 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_E98F5099449BABC5515E4885F529D544
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_E98F5099449BABC5515E4885F529D544(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_E98F5099449BABC5515E4885F529D544");

	Params::DevilPerformanceComponent_C_OnLoaded_E98F5099449BABC5515E4885F529D544 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.OnLoaded_C47A5A45460ED7F7B92BC78734FE07A3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::OnLoaded_C47A5A45460ED7F7B92BC78734FE07A3(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "OnLoaded_C47A5A45460ED7F7B92BC78734FE07A3");

	Params::DevilPerformanceComponent_C_OnLoaded_C47A5A45460ED7F7B92BC78734FE07A3 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.SetLoadingOther
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLoading                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::SetLoadingOther(bool IsLoading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "SetLoadingOther");

	Params::DevilPerformanceComponent_C_SetLoadingOther Parms{};

	Parms.IsLoading = IsLoading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.GetDeadActionParticle
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_DEAD_EFFECT                       DeadType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<TSoftObjectPtr<class UParticleSystem>>Particle                                               (Parm, OutParm)
// TSoftObjectPtr<class USoundAtomCue>     SE                                                     (Parm, OutParm, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             SocketName                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::GetDeadActionParticle(E_BTL_DEAD_EFFECT DeadType, TArray<TSoftObjectPtr<class UParticleSystem>>* Particle, TSoftObjectPtr<class USoundAtomCue>* SE, bool* IsValid, class FName* SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "GetDeadActionParticle");

	Params::DevilPerformanceComponent_C_GetDeadActionParticle Parms{};

	Parms.DeadType = DeadType;

	UObject::ProcessEvent(Func, &Parms);

	if (Particle != nullptr)
		*Particle = std::move(Parms.Particle);

	if (SE != nullptr)
		*SE = Parms.SE;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (SocketName != nullptr)
		*SocketName = Parms.SocketName;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.GetDestructibleMesh
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_DEAD_EFFECT                       DeadType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UDestructibleMesh> DM                                                     (Parm, OutParm, HasGetValueTypeHash)
// bool                                    IsExist                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::GetDestructibleMesh(E_BTL_DEAD_EFFECT DeadType, TSoftObjectPtr<class UDestructibleMesh>* DM, bool* IsExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "GetDestructibleMesh");

	Params::DevilPerformanceComponent_C_GetDestructibleMesh Parms{};

	Parms.DeadType = DeadType;

	UObject::ProcessEvent(Func, &Parms);

	if (DM != nullptr)
		*DM = Parms.DM;

	if (IsExist != nullptr)
		*IsExist = Parms.IsExist;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.InitializeDMMaterial
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDestructibleMesh*                DM                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDestructibleComponent*           DM_Component                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::InitializeDMMaterial(class UDestructibleMesh* DM, class UDestructibleComponent*& DM_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "InitializeDMMaterial");

	Params::DevilPerformanceComponent_C_InitializeDMMaterial Parms{};

	Parms.DM = DM;
	Parms.DM_Component = DM_Component;

	UObject::ProcessEvent(Func, &Parms);

	DM_Component = Parms.DM_Component;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.UpdateDeadMaterialAnimation
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeadMaterialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateMaterialValue                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<E_BAD_STATUS>                    BadStatus                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UDevilPerformanceComponent_C::UpdateDeadMaterialAnimation(float DeadMaterialValue, float StateMaterialValue, TArray<E_BAD_STATUS>& BadStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "UpdateDeadMaterialAnimation");

	Params::DevilPerformanceComponent_C_UpdateDeadMaterialAnimation Parms{};

	Parms.DeadMaterialValue = DeadMaterialValue;
	Parms.StateMaterialValue = StateMaterialValue;
	Parms.BadStatus = std::move(BadStatus);

	UObject::ProcessEvent(Func, &Parms);

	BadStatus = std::move(Parms.BadStatus);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.UpdateDeadMaterialAnimationDM
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeadMaterialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateMaterialValue                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<E_BAD_STATUS>                    BadStatus                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UMaterialInstanceDynamic*> BaseMaterials                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UMaterialInstanceDynamic*> StateMaterials                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UDevilPerformanceComponent_C::UpdateDeadMaterialAnimationDM(float DeadMaterialValue, float StateMaterialValue, TArray<E_BAD_STATUS>& BadStatus, const TArray<class UMaterialInstanceDynamic*>& BaseMaterials, TArray<class UMaterialInstanceDynamic*>& StateMaterials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "UpdateDeadMaterialAnimationDM");

	Params::DevilPerformanceComponent_C_UpdateDeadMaterialAnimationDM Parms{};

	Parms.DeadMaterialValue = DeadMaterialValue;
	Parms.StateMaterialValue = StateMaterialValue;
	Parms.BadStatus = std::move(BadStatus);
	Parms.BaseMaterials = std::move(BaseMaterials);
	Parms.StateMaterials = std::move(StateMaterials);

	UObject::ProcessEvent(Func, &Parms);

	BadStatus = std::move(Parms.BadStatus);
	StateMaterials = std::move(Parms.StateMaterials);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Param_Mesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDestructibleComponent*           Param_Destructible                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WaitDead                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DEVIL_PERFORMANCE_TYPE                ReturnPerformance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DEVIL_PERFORMANCE_TYPE                SummonPerformance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DEVIL_PERFORMANCE_TYPE                SpawnPerformance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UAnimSequenceBase> SpawnMotion                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UTimelineComponent*               SpawnTimeLine                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Spawn1xEffectScale                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::Initialize(class USkeletalMeshComponent* Param_Mesh, class UDestructibleComponent* Param_Destructible, float WaitDead, E_DEVIL_PERFORMANCE_TYPE ReturnPerformance, E_DEVIL_PERFORMANCE_TYPE SummonPerformance, E_DEVIL_PERFORMANCE_TYPE SpawnPerformance, TSoftObjectPtr<class UAnimSequenceBase> SpawnMotion, class UTimelineComponent* SpawnTimeLine, bool Spawn1xEffectScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "Initialize");

	Params::DevilPerformanceComponent_C_Initialize Parms{};

	Parms.Param_Mesh = Param_Mesh;
	Parms.Param_Destructible = Param_Destructible;
	Parms.WaitDead = WaitDead;
	Parms.ReturnPerformance = ReturnPerformance;
	Parms.SummonPerformance = SummonPerformance;
	Parms.SpawnPerformance = SpawnPerformance;
	Parms.SpawnMotion = SpawnMotion;
	Parms.SpawnTimeLine = SpawnTimeLine;
	Parms.Spawn1xEffectScale = Spawn1xEffectScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BreakDestructibleMesh
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::BreakDestructibleMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BreakDestructibleMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.DeadActionOtherFinalize
// (Private, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::DeadActionOtherFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "DeadActionOtherFinalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PrepareOtherDeadActionData
// (Private, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PrepareOtherDeadActionData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PrepareOtherDeadActionData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.SpawnDeadActionParticle
// (Private, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::SpawnDeadActionParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "SpawnDeadActionParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.AdjustMeshScale
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReset                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::AdjustMeshScale(bool IsReset, bool IsSymbol)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "AdjustMeshScale");

	Params::DevilPerformanceComponent_C_AdjustMeshScale Parms{};

	Parms.IsReset = IsReset;
	Parms.IsSymbol = IsSymbol;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.AttachedParticleVisibleOn
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::AttachedParticleVisibleOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "AttachedParticleVisibleOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.AttachedParticleVisibleOff
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::AttachedParticleVisibleOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "AttachedParticleVisibleOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.ResetDeadMaterial
// (Private, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::ResetDeadMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "ResetDeadMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.GetSpawnMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequenceBase*                Motion                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::GetSpawnMotion(class UAnimSequenceBase** Motion, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "GetSpawnMotion");

	Params::DevilPerformanceComponent_C_GetSpawnMotion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Motion != nullptr)
		*Motion = Parms.Motion;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.IsExistNotify
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimSequenceBase*                Motion                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsExist                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::IsExistNotify(class UAnimSequenceBase* Motion, const class FString& NotifyName, bool* IsExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "IsExistNotify");

	Params::DevilPerformanceComponent_C_IsExistNotify Parms{};

	Parms.Motion = Motion;
	Parms.NotifyName = std::move(NotifyName);

	UObject::ProcessEvent(Func, &Parms);

	if (IsExist != nullptr)
		*IsExist = Parms.IsExist;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformSpawnMotion
// (Private, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PerformSpawnMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformSpawnMotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformSpawnMaterialAnim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WeightValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::PerformSpawnMaterialAnim(float WeightValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformSpawnMaterialAnim");

	Params::DevilPerformanceComponent_C_PerformSpawnMaterialAnim Parms{};

	Parms.WeightValue = WeightValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformSpawnEffect
// (Private, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PerformSpawnEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformSpawnEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformSpawnFinalize
// (Private, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PerformSpawnFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformSpawnFinalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.AddDeadMaterialParamName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::AddDeadMaterialParamName(class FName ParamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "AddDeadMaterialParamName");

	Params::DevilPerformanceComponent_C_AddDeadMaterialParamName Parms{};

	Parms.ParamName = ParamName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.UpdateDMDitherRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DitherRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::UpdateDMDitherRate(float DitherRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "UpdateDMDitherRate");

	Params::DevilPerformanceComponent_C_UpdateDMDitherRate Parms{};

	Parms.DitherRate = DitherRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.UpdateDeadMaterialAnimationCharaBase
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeadMaterialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateMaterialValue                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<E_BAD_STATUS>                    BadStatus                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UDevilPerformanceComponent_C::UpdateDeadMaterialAnimationCharaBase(float DeadMaterialValue, float StateMaterialValue, TArray<E_BAD_STATUS>& BadStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "UpdateDeadMaterialAnimationCharaBase");

	Params::DevilPerformanceComponent_C_UpdateDeadMaterialAnimationCharaBase Parms{};

	Parms.DeadMaterialValue = DeadMaterialValue;
	Parms.StateMaterialValue = StateMaterialValue;
	Parms.BadStatus = std::move(BadStatus);

	UObject::ProcessEvent(Func, &Parms);

	BadStatus = std::move(Parms.BadStatus);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.GetDeadActionMaterial
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_DEAD_EFFECT                       DeadType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UCurveFloat>       ProgressCurve                                          (Parm, OutParm, HasGetValueTypeHash)
// TSoftObjectPtr<class UMaterialParameterApplier>ParamApplier                                           (Parm, OutParm, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::GetDeadActionMaterial(E_BTL_DEAD_EFFECT DeadType, TSoftObjectPtr<class UCurveFloat>* ProgressCurve, TSoftObjectPtr<class UMaterialParameterApplier>* ParamApplier, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "GetDeadActionMaterial");

	Params::DevilPerformanceComponent_C_GetDeadActionMaterial Parms{};

	Parms.DeadType = DeadType;

	UObject::ProcessEvent(Func, &Parms);

	if (ProgressCurve != nullptr)
		*ProgressCurve = Parms.ProgressCurve;

	if (ParamApplier != nullptr)
		*ParamApplier = Parms.ParamApplier;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.ApplyDeadMaterialParam
// (Public, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::ApplyDeadMaterialParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "ApplyDeadMaterialParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PlayDeadVoice
// (Protected, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PlayDeadVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PlayDeadVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.DeadActionPrimalFinalize
// (Private, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::DeadActionPrimalFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "DeadActionPrimalFinalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.DecideWaitDeadSec
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DeadTimingOverride                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DeadTiming                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::DecideWaitDeadSec(bool DeadTimingOverride, float DeadTiming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "DecideWaitDeadSec");

	Params::DevilPerformanceComponent_C_DecideWaitDeadSec Parms{};

	Parms.DeadTimingOverride = DeadTimingOverride;
	Parms.DeadTiming = DeadTiming;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformReturnFinalize
// (Public, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PerformReturnFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformReturnFinalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.DecideDeadPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::DecideDeadPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "DecideDeadPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.AttachedParticleDeactivate
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::AttachedParticleDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "AttachedParticleDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.SetSpawnPerformance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_DEVIL_PERFORMANCE_TYPE                Performance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::SetSpawnPerformance(E_DEVIL_PERFORMANCE_TYPE Performance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "SetSpawnPerformance");

	Params::DevilPerformanceComponent_C_SetSpawnPerformance Parms{};

	Parms.Performance = Performance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformSpawnFirstHide
// (Public, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PerformSpawnFirstHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformSpawnFirstHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformSummonMotion
// (Public, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PerformSummonMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformSummonMotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformReturnMotion
// (Public, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::PerformReturnMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformReturnMotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformSummonMaterialAnim
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::PerformSummonMaterialAnim(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformSummonMaterialAnim");

	Params::DevilPerformanceComponent_C_PerformSummonMaterialAnim Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.PerformReturnMaterialAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::PerformReturnMaterialAnim(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "PerformReturnMaterialAnim");

	Params::DevilPerformanceComponent_C_PerformReturnMaterialAnim Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.DeadActionSetVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UDevilPerformanceComponent_C::DeadActionSetVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "DeadActionSetVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.SetDeadMaterialParamName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   DeathOption                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::SetDeadMaterialParamName(class FName ParamName, uint8 DeathOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "SetDeadMaterialParamName");

	Params::DevilPerformanceComponent_C_SetDeadMaterialParamName Parms{};

	Parms.ParamName = ParamName;
	Parms.DeathOption = DeathOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.GetMaterialAnimTimeRange
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMaterialAnimSetting_T           Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Min                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Max                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDevilPerformanceComponent_C::GetMaterialAnimTimeRange(struct FMaterialAnimSetting_T& Anim, float* Min, float* Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "GetMaterialAnimTimeRange");

	Params::DevilPerformanceComponent_C_GetMaterialAnimTimeRange Parms{};

	Parms.Anim = std::move(Anim);

	UObject::ProcessEvent(Func, &Parms);

	Anim = std::move(Parms.Anim);

	if (Min != nullptr)
		*Min = Parms.Min;

	if (Max != nullptr)
		*Max = Parms.Max;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Spawn_SpawnEffectVisibleOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Spawn_SpawnEffectVisibleOn(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Spawn_SpawnEffectVisibleOn");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Spawn_SpawnEffectVisibleOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Spawn_SpawnMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Spawn_SpawnMotion(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Spawn_SpawnMotion");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Spawn_SpawnMotion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Spawn_SpawnEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Spawn_SpawnEffect(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Spawn_SpawnEffect");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Spawn_SpawnEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Spawn_SpawnDecal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Spawn_SpawnDecal(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Spawn_SpawnDecal");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Spawn_SpawnDecal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Spawn_Finished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Spawn_Finished(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Spawn_Finished");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Spawn_Finished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Spawn_Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Spawn_Update(float Value, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Spawn_Update");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Spawn_Update Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_BeginSpawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PlayMotion                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsInstantEvent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_BeginSpawn(bool IsSymbol, bool PlayMotion, bool IsInstantEvent, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_BeginSpawn");

	Params::DevilPerformanceComponent_C_BI_BeginSpawn Parms{};

	Parms.IsSymbol = IsSymbol;
	Parms.PlayMotion = PlayMotion;
	Parms.IsInstantEvent = IsInstantEvent;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Revive_ParticleOn_Nakama
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Revive_ParticleOn_Nakama(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Revive_ParticleOn_Nakama");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Revive_ParticleOn_Nakama Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Revive_Finished_Nakama
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Revive_Finished_Nakama(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Revive_Finished_Nakama");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Revive_Finished_Nakama Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Revive_Update_Nakama
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Revive_Update_Nakama(float Value, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Revive_Update_Nakama");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Revive_Update_Nakama Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Revive_ParticleOn_Enemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Revive_ParticleOn_Enemy(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Revive_ParticleOn_Enemy");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Revive_ParticleOn_Enemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Revive_Finished_Enemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Revive_Finished_Enemy(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Revive_Finished_Enemy");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Revive_Finished_Enemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Revive_Update_Enemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Revive_Update_Enemy(float Value, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Revive_Update_Enemy");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Revive_Update_Enemy Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_BeginReviveAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_BeginReviveAction(bool IsSymbol, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_BeginReviveAction");

	Params::DevilPerformanceComponent_C_BI_BeginReviveAction Parms{};

	Parms.IsSymbol = IsSymbol;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Dead_Dead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Dead_Dead(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Dead_Dead");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Dead_Dead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Dead_StopMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Dead_StopMotion(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Dead_StopMotion");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Dead_StopMotion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Dead_SpawnParticle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Dead_SpawnParticle(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Dead_SpawnParticle");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Dead_SpawnParticle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Dead_Finished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Dead_Finished(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Dead_Finished");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Dead_Finished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Dead_BreakDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Dead_BreakDown(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Dead_BreakDown");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Dead_BreakDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Dead_Update_Freeze_DMDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DitherRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Dead_Update_Freeze_DMDither(float DitherRate, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Dead_Update_Freeze_DMDither");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Dead_Update_Freeze_DMDither Parms{};

	Parms.DitherRate = DitherRate;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Dead_Update_Freeze
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeadMaterialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateMaterialValue                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Dead_Update_Freeze(float DeadMaterialValue, float StateMaterialValue, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Dead_Update_Freeze");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Dead_Update_Freeze Parms{};

	Parms.DeadMaterialValue = DeadMaterialValue;
	Parms.StateMaterialValue = StateMaterialValue;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Dead_Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeadMaterialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateMateialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Dead_Update(float DeadMaterialValue, float StateMateialValue, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Dead_Update");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Dead_Update Parms{};

	Parms.DeadMaterialValue = DeadMaterialValue;
	Parms.StateMateialValue = StateMateialValue;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_BeginDeathAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   InOption                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DeadTimingOverride                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DeadTiming                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_BeginDeathAction(uint8 InOption, bool DeadTimingOverride, float DeadTiming, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_BeginDeathAction");

	Params::DevilPerformanceComponent_C_BI_BeginDeathAction Parms{};

	Parms.InOption = InOption;
	Parms.DeadTimingOverride = DeadTimingOverride;
	Parms.DeadTiming = DeadTiming;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_BeginReturnAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsInstantEvnet                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_BeginReturnAction(float PlayRate, bool IsInstantEvnet, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_BeginReturnAction");

	Params::DevilPerformanceComponent_C_BI_BeginReturnAction Parms{};

	Parms.PlayRate = PlayRate;
	Parms.IsInstantEvnet = IsInstantEvnet;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Return_Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Return_Update(float Value, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Return_Update");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Return_Update Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Return_Finished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Return_Finished(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Return_Finished");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Return_Finished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Return_ParticleOff
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Return_ParticleOff(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Return_ParticleOff");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Return_ParticleOff Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_BeginSummonAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentStatus                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsInstantEvent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_BeginSummonAction(int32 CurrentStatus, bool IsSymbol, bool Immediate, bool IsInstantEvent, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_BeginSummonAction");

	Params::DevilPerformanceComponent_C_BI_BeginSummonAction Parms{};

	Parms.CurrentStatus = CurrentStatus;
	Parms.IsSymbol = IsSymbol;
	Parms.Immediate = Immediate;
	Parms.IsInstantEvent = IsInstantEvent;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Summon_Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Summon_Update(float Value, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Summon_Update");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Summon_Update Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Summon_Finished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Summon_Finished(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Summon_Finished");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Summon_Finished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Summon_ApplyBadStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Summon_ApplyBadStatus(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Summon_ApplyBadStatus");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Summon_ApplyBadStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_AdjustMeshScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReset                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_AdjustMeshScale(bool IsReset, bool IsSymbol, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_AdjustMeshScale");

	Params::DevilPerformanceComponent_C_BI_AdjustMeshScale Parms{};

	Parms.IsReset = IsReset;
	Parms.IsSymbol = IsSymbol;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_ResetDeadMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_ResetDeadMaterial(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_ResetDeadMaterial");

	Params::DevilPerformanceComponent_C_BI_ResetDeadMaterial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Spawn_SpawnMotion_Sub
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Spawn_SpawnMotion_Sub(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Spawn_SpawnMotion_Sub");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Spawn_SpawnMotion_Sub Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Spawn_Update_Sub
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Spawn_Update_Sub(float Value, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Spawn_Update_Sub");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Spawn_Update_Sub Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_BeginRapidReturnAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_BeginRapidReturnAction(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_BeginRapidReturnAction");

	Params::DevilPerformanceComponent_C_BI_BeginRapidReturnAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_BeginRapidSummonAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentStatus                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsImmediately                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_BeginRapidSummonAction(int32 CurrentStatus, bool IsSymbol, bool IsImmediately, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_BeginRapidSummonAction");

	Params::DevilPerformanceComponent_C_BI_BeginRapidSummonAction Parms{};

	Parms.CurrentStatus = CurrentStatus;
	Parms.IsSymbol = IsSymbol;
	Parms.IsImmediately = IsImmediately;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Dead_CharaEffectDeactivate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Dead_CharaEffectDeactivate(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Dead_CharaEffectDeactivate");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Dead_CharaEffectDeactivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_TimeLine_Summon_EndOfSummon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_TimeLine_Summon_EndOfSummon(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_TimeLine_Summon_EndOfSummon");

	Params::DevilPerformanceComponent_C_BI_TimeLine_Summon_EndOfSummon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function DevilPerformanceComponent.DevilPerformanceComponent_C.BI_SetReturnPerformance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_DEVIL_PERFORMANCE_TYPE                Return                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDevilPerformanceComponent_C::BI_SetReturnPerformance(E_DEVIL_PERFORMANCE_TYPE Return, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilPerformanceComponent_C", "BI_SetReturnPerformance");

	Params::DevilPerformanceComponent_C_BI_SetReturnPerformance Parms{};

	Parms.Return = Return;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}

}

