#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaBodyComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Project_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CharaBodyComponent.CharaBodyComponent_C
// 0x0058 (0x0108 - 0x00B0)
class UCharaBodyComponent_C final : public UCustomComponent
{
public:
	class FName                                   ViewPointBone;                                     // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BodyRotationSpeed;                                 // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BodyRotationCurrent;                               // 0x00BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   PoseVerticalMin;                                   // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PoseVerticalMax;                                   // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PoseHorizontalMin;                                 // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PoseHorizontalMax;                                 // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleVerticalMin;                                  // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleVerticalMax;                                  // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleHorizontalMin;                                // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleHorizontalMax;                                // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BodyRootBone;                                      // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ImmediatelyIK;                                     // 0x0101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Update(float DeltaTime, class USkinnedMeshComponent* Mesh, class UCustomPoseWeightTable* PoseWeightTable, bool IKEnable, const struct FVector& GazePoint, bool GazePointEnable);
	void UpdateBodyRotation(float DeltaTime, class USkinnedMeshComponent* Mesh, class UCustomPoseWeightTable* PoseWeightTable, bool IKEnable, const struct FVector& GazePoint, bool GazePointEnable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharaBodyComponent_C">();
	}
	static class UCharaBodyComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharaBodyComponent_C>();
	}
};
static_assert(alignof(UCharaBodyComponent_C) == 0x000008, "Wrong alignment on UCharaBodyComponent_C");
static_assert(sizeof(UCharaBodyComponent_C) == 0x000108, "Wrong size on UCharaBodyComponent_C");
static_assert(offsetof(UCharaBodyComponent_C, ViewPointBone) == 0x0000B0, "Member 'UCharaBodyComponent_C::ViewPointBone' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, BodyRotationSpeed) == 0x0000B8, "Member 'UCharaBodyComponent_C::BodyRotationSpeed' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, BodyRotationCurrent) == 0x0000BC, "Member 'UCharaBodyComponent_C::BodyRotationCurrent' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, PoseVerticalMin) == 0x0000C8, "Member 'UCharaBodyComponent_C::PoseVerticalMin' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, PoseVerticalMax) == 0x0000D0, "Member 'UCharaBodyComponent_C::PoseVerticalMax' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, PoseHorizontalMin) == 0x0000D8, "Member 'UCharaBodyComponent_C::PoseHorizontalMin' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, PoseHorizontalMax) == 0x0000E0, "Member 'UCharaBodyComponent_C::PoseHorizontalMax' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, AngleVerticalMin) == 0x0000E8, "Member 'UCharaBodyComponent_C::AngleVerticalMin' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, AngleVerticalMax) == 0x0000EC, "Member 'UCharaBodyComponent_C::AngleVerticalMax' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, AngleHorizontalMin) == 0x0000F0, "Member 'UCharaBodyComponent_C::AngleHorizontalMin' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, AngleHorizontalMax) == 0x0000F4, "Member 'UCharaBodyComponent_C::AngleHorizontalMax' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, BodyRootBone) == 0x0000F8, "Member 'UCharaBodyComponent_C::BodyRootBone' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, Debug) == 0x000100, "Member 'UCharaBodyComponent_C::Debug' has a wrong offset!");
static_assert(offsetof(UCharaBodyComponent_C, ImmediatelyIK) == 0x000101, "Member 'UCharaBodyComponent_C::ImmediatelyIK' has a wrong offset!");

}

