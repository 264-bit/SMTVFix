#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapUICtrl

#include "Basic.hpp"

#include "BP_MapUICtrl_classes.hpp"
#include "BP_MapUICtrl_parameters.hpp"


namespace SDK
{

// Function BP_MapUICtrl.BP_MapUICtrl_C.EvtDis_MapCharaPanelUpdata__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::EvtDis_MapCharaPanelUpdata__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "EvtDis_MapCharaPanelUpdata__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.ExecuteUbergraph_BP_MapUICtrl
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::ExecuteUbergraph_BP_MapUICtrl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "ExecuteUbergraph_BP_MapUICtrl");

	Params::BP_MapUICtrl_C_ExecuteUbergraph_BP_MapUICtrl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "ReceiveEndPlay");

	Params::BP_MapUICtrl_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "ReceiveTick");

	Params::BP_MapUICtrl_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowAreaNameWithType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_LOCATION_WINDOW_TYPE                  LocationType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_ShowAreaNameWithType(E_LOCATION_WINDOW_TYPE LocationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowAreaNameWithType");

	Params::BP_MapUICtrl_C_BPI_ShowAreaNameWithType Parms{};

	Parms.LocationType = LocationType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_HideAreaName
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_HideAreaName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_HideAreaName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowAreaName
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_ShowAreaName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowAreaName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_RemoveAreaNameData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAreaNameData                    AreaNameData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_RemoveAreaNameData(const struct FAreaNameData& AreaNameData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_RemoveAreaNameData");

	Params::BP_MapUICtrl_C_BPI_RemoveAreaNameData Parms{};

	Parms.AreaNameData = std::move(AreaNameData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_AddAreaNameData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAreaNameData                    AreaNameData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_AddAreaNameData(const struct FAreaNameData& AreaNameData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_AddAreaNameData");

	Params::BP_MapUICtrl_C_BPI_AddAreaNameData Parms{};

	Parms.AreaNameData = std::move(AreaNameData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_EndSiegeAreaNameUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_EndSiegeAreaNameUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_EndSiegeAreaNameUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_BeginSiegeAreaNameUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_BeginSiegeAreaNameUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_BeginSiegeAreaNameUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowSiegeAreaNameUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_MapUICtrl_C::BPI_ShowSiegeAreaNameUI(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowSiegeAreaNameUI");

	Params::BP_MapUICtrl_C_BPI_ShowSiegeAreaNameUI Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_OpenMinimapMask
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MinimapMaskID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_OpenMinimapMask(int32 MinimapMaskID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_OpenMinimapMask");

	Params::BP_MapUICtrl_C_BPI_OpenMinimapMask Parms{};

	Parms.MinimapMaskID = MinimapMaskID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_RefreshMinimapMaskOpenFlag
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_RefreshMinimapMaskOpenFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_RefreshMinimapMaskOpenFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowMapMagatsuhiGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsManualGauge                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ManualGauge                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_ShowMapMagatsuhiGauge(bool Immediately, bool IsManualGauge, int32 ManualGauge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowMapMagatsuhiGauge");

	Params::BP_MapUICtrl_C_BPI_ShowMapMagatsuhiGauge Parms{};

	Parms.Immediately = Immediately;
	Parms.IsManualGauge = IsManualGauge;
	Parms.ManualGauge = ManualGauge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_HideMapMagatsuhiGauge
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_HideMapMagatsuhiGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_HideMapMagatsuhiGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_HideMap3DIcon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_HideMap3DIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_HideMap3DIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_MapUIPrintLog
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_MapUIPrintLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_MapUIPrintLog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_InitMapUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_InitMapUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_InitMapUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_CreateMapUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_CreateMapUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_CreateMapUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_HideMapUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_HideMapUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_HideMapUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowMapUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_ShowMapUI(bool Immediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowMapUI");

	Params::BP_MapUICtrl_C_BPI_ShowMapUI Parms{};

	Parms.Immediate = Immediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowMinimapInPause
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_ShowMinimapInPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowMinimapInPause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ChangeMinimapIdAsync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_MINIMAP_CHANGE_TYPE                   ChangeType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_ChangeMinimapIdAsync(int32 MapId, int32 AreaId, E_MINIMAP_CHANGE_TYPE ChangeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ChangeMinimapIdAsync");

	Params::BP_MapUICtrl_C_BPI_ChangeMinimapIdAsync Parms{};

	Parms.MapId = MapId;
	Parms.AreaId = AreaId;
	Parms.ChangeType = ChangeType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ChangeMinimapIdBlocking
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_MINIMAP_CHANGE_TYPE                   ChangeType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_ChangeMinimapIdBlocking(int32 MapId, int32 AreaId, E_MINIMAP_CHANGE_TYPE ChangeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ChangeMinimapIdBlocking");

	Params::BP_MapUICtrl_C_BPI_ChangeMinimapIdBlocking Parms{};

	Parms.MapId = MapId;
	Parms.AreaId = AreaId;
	Parms.ChangeType = ChangeType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowMap3DIcon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_ShowMap3DIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowMap3DIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_HideMinimap
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_HideMinimap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_HideMinimap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowMinimap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_ShowMinimap(bool Immediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowMinimap");

	Params::BP_MapUICtrl_C_BPI_ShowMinimap Parms{};

	Parms.Immediate = Immediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ResetFootprint
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_ResetFootprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ResetFootprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ChangeMinimapArea
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_ChangeMinimapArea(int32 AreaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ChangeMinimapArea");

	Params::BP_MapUICtrl_C_BPI_ChangeMinimapArea Parms{};

	Parms.AreaId = AreaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_HideMapCharaPanel
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::BPI_HideMapCharaPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_HideMapCharaPanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowMapCharaPanel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_ShowMapCharaPanel(bool Immediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowMapCharaPanel");

	Params::BP_MapUICtrl_C_BPI_ShowMapCharaPanel Parms{};

	Parms.Immediate = Immediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.OnLoaded_659BB4CA4CCD6D4BDB82349E048BD7A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_MapUICtrl_C::OnLoaded_659BB4CA4CCD6D4BDB82349E048BD7A5(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "OnLoaded_659BB4CA4CCD6D4BDB82349E048BD7A5");

	Params::BP_MapUICtrl_C_OnLoaded_659BB4CA4CCD6D4BDB82349E048BD7A5 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.OnLoaded_3AA5221C4F61EB400435F4B1E22A7773
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_MapUICtrl_C::OnLoaded_3AA5221C4F61EB400435F4B1E22A7773(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "OnLoaded_3AA5221C4F61EB400435F4B1E22A7773");

	Params::BP_MapUICtrl_C_OnLoaded_3AA5221C4F61EB400435F4B1E22A7773 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.OnLoaded_EAD983EE491AF3091A76AB86E6F98D92
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_MapUICtrl_C::OnLoaded_EAD983EE491AF3091A76AB86E6F98D92(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "OnLoaded_EAD983EE491AF3091A76AB86E6F98D92");

	Params::BP_MapUICtrl_C_OnLoaded_EAD983EE491AF3091A76AB86E6F98D92 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.FindAreaName_TopPrio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FAreaNameData                    AreaNameData                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::FindAreaName_TopPrio(struct FAreaNameData* AreaNameData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "FindAreaName_TopPrio");

	Params::BP_MapUICtrl_C_FindAreaName_TopPrio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AreaNameData != nullptr)
		*AreaNameData = std::move(Parms.AreaNameData);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.GetAreaName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)

void ABP_MapUICtrl_C::GetAreaName(class FName Label, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "GetAreaName");

	Params::BP_MapUICtrl_C_GetAreaName Parms{};

	Parms.Label = Label;

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.TickMoveAutoUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::TickMoveAutoUI(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "TickMoveAutoUI");

	Params::BP_MapUICtrl_C_TickMoveAutoUI Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.ResetMoveAutoUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::ResetMoveAutoUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "ResetMoveAutoUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.HideMoveAutoUIMinimap
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::HideMoveAutoUIMinimap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "HideMoveAutoUIMinimap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.HideMoveAutoUICharaPanel
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::HideMoveAutoUICharaPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "HideMoveAutoUICharaPanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.HideMoveAutoUIOther
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::HideMoveAutoUIOther()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "HideMoveAutoUIOther");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.HideMoveAutoUILocation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::HideMoveAutoUILocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "HideMoveAutoUILocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.ShowMoveAutoUIMinimap
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::ShowMoveAutoUIMinimap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "ShowMoveAutoUIMinimap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.ShowMoveAutoUICharaPanel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::ShowMoveAutoUICharaPanel(bool Immediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "ShowMoveAutoUICharaPanel");

	Params::BP_MapUICtrl_C_ShowMoveAutoUICharaPanel Parms{};

	Parms.Immediate = Immediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.ShowMoveAutoUIOther
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::ShowMoveAutoUIOther()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "ShowMoveAutoUIOther");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.ShowMoveAutoUILocation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::ShowMoveAutoUILocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "ShowMoveAutoUILocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.CheckLocationWindowForbidden
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Forbidden                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::CheckLocationWindowForbidden(bool* Forbidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "CheckLocationWindowForbidden");

	Params::BP_MapUICtrl_C_CheckLocationWindowForbidden Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Forbidden != nullptr)
		*Forbidden = Parms.Forbidden;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.MoveAutoUIIsPlayerStopped
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Stopped                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::MoveAutoUIIsPlayerStopped(bool* Stopped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "MoveAutoUIIsPlayerStopped");

	Params::BP_MapUICtrl_C_MoveAutoUIIsPlayerStopped Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stopped != nullptr)
		*Stopped = Parms.Stopped;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.DestroyMapCharaPanelNumbers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::DestroyMapCharaPanelNumbers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "DestroyMapCharaPanelNumbers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.ReleaseMinimapTexture
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::ReleaseMinimapTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "ReleaseMinimapTexture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.TickMoveAutoUIForceCharaPanel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::TickMoveAutoUIForceCharaPanel(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "TickMoveAutoUIForceCharaPanel");

	Params::BP_MapUICtrl_C_TickMoveAutoUIForceCharaPanel Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.MapUIAddToWidgetPrio
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::MapUIAddToWidgetPrio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "MapUIAddToWidgetPrio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.ShowMoveAutoUIMagatsuhi
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsManualGauge                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ManualGauge                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::ShowMoveAutoUIMagatsuhi(bool Immediately, bool IsManualGauge, int32 ManualGauge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "ShowMoveAutoUIMagatsuhi");

	Params::BP_MapUICtrl_C_ShowMoveAutoUIMagatsuhi Parms{};

	Parms.Immediately = Immediately;
	Parms.IsManualGauge = IsManualGauge;
	Parms.ManualGauge = ManualGauge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.HideMoveAutoUIMagatsuhi
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapUICtrl_C::HideMoveAutoUIMagatsuhi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "HideMoveAutoUIMagatsuhi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.TickMoveAutoUIForceMagatsuhiGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::TickMoveAutoUIForceMagatsuhiGauge(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "TickMoveAutoUIForceMagatsuhiGauge");

	Params::BP_MapUICtrl_C_TickMoveAutoUIForceMagatsuhiGauge Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_GetCurAreaName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             AreaName                                               (Parm, OutParm)

void ABP_MapUICtrl_C::BPI_GetCurAreaName(class FText* AreaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_GetCurAreaName");

	Params::BP_MapUICtrl_C_BPI_GetCurAreaName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AreaName != nullptr)
		*AreaName = std::move(Parms.AreaName);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.GetSavingWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_Saving_C*                     Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::GetSavingWidget(class UWB_Saving_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "GetSavingWidget");

	Params::BP_MapUICtrl_C_GetSavingWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_StartMinimapFocusAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseCustomZoom                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CustomZoom                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_Minimap_C*                    EventTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_StartMinimapFocusAction(const struct FVector& WorldLocation, float Time, bool UseCustomZoom, float CustomZoom, class UWB_Minimap_C** EventTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_StartMinimapFocusAction");

	Params::BP_MapUICtrl_C_BPI_StartMinimapFocusAction Parms{};

	Parms.WorldLocation = std::move(WorldLocation);
	Parms.Time = Time;
	Parms.UseCustomZoom = UseCustomZoom;
	Parms.CustomZoom = CustomZoom;

	UObject::ProcessEvent(Func, &Parms);

	if (EventTarget != nullptr)
		*EventTarget = Parms.EventTarget;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_EndMinimapFocusAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_EndMinimapFocusAction(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_EndMinimapFocusAction");

	Params::BP_MapUICtrl_C_BPI_EndMinimapFocusAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_GetMapInfoWinCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Ctrl                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_GetMapInfoWinCtrl(class AActor** Ctrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_GetMapInfoWinCtrl");

	Params::BP_MapUICtrl_C_BPI_GetMapInfoWinCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ctrl != nullptr)
		*Ctrl = Parms.Ctrl;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_GetMapMakkaWinCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Ctrl                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_GetMapMakkaWinCtrl(class AActor** Ctrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_GetMapMakkaWinCtrl");

	Params::BP_MapUICtrl_C_BPI_GetMapMakkaWinCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ctrl != nullptr)
		*Ctrl = Parms.Ctrl;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_GetCurAutomapName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             AreaName                                               (Parm, OutParm)

void ABP_MapUICtrl_C::BPI_GetCurAutomapName(class FText* AreaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_GetCurAutomapName");

	Params::BP_MapUICtrl_C_BPI_GetCurAutomapName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AreaName != nullptr)
		*AreaName = std::move(Parms.AreaName);
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_StartMinimapRyuketsu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_StartMinimapRyuketsu(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_StartMinimapRyuketsu");

	Params::BP_MapUICtrl_C_BPI_StartMinimapRyuketsu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_EndMinimapRyuketsu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_EndMinimapRyuketsu(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_EndMinimapRyuketsu");

	Params::BP_MapUICtrl_C_BPI_EndMinimapRyuketsu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_IsMinimapIdChanging
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsChanging                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_IsMinimapIdChanging(bool* IsChanging)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_IsMinimapIdChanging");

	Params::BP_MapUICtrl_C_BPI_IsMinimapIdChanging Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsChanging != nullptr)
		*IsChanging = Parms.IsChanging;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_SetMinimapIconSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_SetMinimapIconSize(float Size, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_SetMinimapIconSize");

	Params::BP_MapUICtrl_C_BPI_SetMinimapIconSize Parms{};

	Parms.Size = Size;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_AutoCheckShowMapCharaPanel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ShowDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_AutoCheckShowMapCharaPanel(float ShowDuration, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_AutoCheckShowMapCharaPanel");

	Params::BP_MapUICtrl_C_BPI_AutoCheckShowMapCharaPanel Parms{};

	Parms.ShowDuration = ShowDuration;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_SetMinimapHidden
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_SetMinimapHidden(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_SetMinimapHidden");

	Params::BP_MapUICtrl_C_BPI_SetMinimapHidden Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_SetFogGridOpenRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_SetFogGridOpenRadius(float Radius, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_SetFogGridOpenRadius");

	Params::BP_MapUICtrl_C_BPI_SetFogGridOpenRadius Parms{};

	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowFogGridTexture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsShow                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_ShowFogGridTexture(bool IsShow, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowFogGridTexture");

	Params::BP_MapUICtrl_C_BPI_ShowFogGridTexture Parms{};

	Parms.IsShow = IsShow;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_StartMinimapFocusActionLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseCustomZoom                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CustomZoom                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_Minimap_C*                    EventTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_StartMinimapFocusActionLocation(const struct FVector& StartLocation, const struct FVector& EndLocation, float Time, bool UseCustomZoom, float CustomZoom, class UWB_Minimap_C** EventTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_StartMinimapFocusActionLocation");

	Params::BP_MapUICtrl_C_BPI_StartMinimapFocusActionLocation Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.Time = Time;
	Parms.UseCustomZoom = UseCustomZoom;
	Parms.CustomZoom = CustomZoom;

	UObject::ProcessEvent(Func, &Parms);

	if (EventTarget != nullptr)
		*EventTarget = Parms.EventTarget;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ToTopCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_ToTopCamera(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ToTopCamera");

	Params::BP_MapUICtrl_C_BPI_ToTopCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_FromTopCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_FromTopCamera(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_FromTopCamera");

	Params::BP_MapUICtrl_C_BPI_FromTopCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_UpdateTopCameraIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CameraLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         CameraRotate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HeroLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         HeroRotate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_UpdateTopCameraIcon(const struct FVector& CameraLocation, const struct FRotator& CameraRotate, const struct FVector& HeroLocation, const struct FRotator& HeroRotate, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_UpdateTopCameraIcon");

	Params::BP_MapUICtrl_C_BPI_UpdateTopCameraIcon Parms{};

	Parms.CameraLocation = std::move(CameraLocation);
	Parms.CameraRotate = std::move(CameraRotate);
	Parms.HeroLocation = std::move(HeroLocation);
	Parms.HeroRotate = std::move(HeroRotate);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_ShowTopCameraIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_ShowTopCameraIcon(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_ShowTopCameraIcon");

	Params::BP_MapUICtrl_C_BPI_ShowTopCameraIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_HideTopCameraIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_HideTopCameraIcon(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_HideTopCameraIcon");

	Params::BP_MapUICtrl_C_BPI_HideTopCameraIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_StartMinimapFocusTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseCustomZoom                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CustomZoom                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_Minimap_C*                    EventTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_StartMinimapFocusTarget(int32 MapId, int32 AreaId, const struct FVector& StartLocation, const struct FVector& EndLocation, float Time, bool UseCustomZoom, float CustomZoom, class UWB_Minimap_C** EventTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_StartMinimapFocusTarget");

	Params::BP_MapUICtrl_C_BPI_StartMinimapFocusTarget Parms{};

	Parms.MapId = MapId;
	Parms.AreaId = AreaId;
	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.Time = Time;
	Parms.UseCustomZoom = UseCustomZoom;
	Parms.CustomZoom = CustomZoom;

	UObject::ProcessEvent(Func, &Parms);

	if (EventTarget != nullptr)
		*EventTarget = Parms.EventTarget;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_StartMinimapFocusMission
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MissionId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMessageWindow                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UWB_Minimap_C*                    EventTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_StartMinimapFocusMission(int32 MissionId, bool IsMessageWindow, class UWB_Minimap_C** EventTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_StartMinimapFocusMission");

	Params::BP_MapUICtrl_C_BPI_StartMinimapFocusMission Parms{};

	Parms.MissionId = MissionId;
	Parms.IsMessageWindow = IsMessageWindow;

	UObject::ProcessEvent(Func, &Parms);

	if (EventTarget != nullptr)
		*EventTarget = Parms.EventTarget;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_EndMinimapFocusMission
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_EndMinimapFocusMission(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_EndMinimapFocusMission");

	Params::BP_MapUICtrl_C_BPI_EndMinimapFocusMission Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_AllMapUpdateRender
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_AllMapUpdateRender(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_AllMapUpdateRender");

	Params::BP_MapUICtrl_C_BPI_AllMapUpdateRender Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_MinimapOnOffEffectIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MINIMAP_POI_ICON                      Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_MinimapOnOffEffectIcon(E_MINIMAP_POI_ICON Icon, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_MinimapOnOffEffectIcon");

	Params::BP_MapUICtrl_C_BPI_MinimapOnOffEffectIcon Parms{};

	Parms.Icon = Icon;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_MinimapOnOffEffectAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_MinimapOnOffEffectAll(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_MinimapOnOffEffectAll");

	Params::BP_MapUICtrl_C_BPI_MinimapOnOffEffectAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_AutoCheckShowMapMagatsuhiGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ShowDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsManualGauge                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ManualGauge                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_AutoCheckShowMapMagatsuhiGauge(float ShowDuration, bool Immediately, bool IsManualGauge, int32 ManualGauge, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_AutoCheckShowMapMagatsuhiGauge");

	Params::BP_MapUICtrl_C_BPI_AutoCheckShowMapMagatsuhiGauge Parms{};

	Parms.ShowDuration = ShowDuration;
	Parms.Immediately = Immediately;
	Parms.IsManualGauge = IsManualGauge;
	Parms.ManualGauge = ManualGauge;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_StartMinimapFocusMissionUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MissionId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_Minimap_C*                    EventTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_StartMinimapFocusMissionUI(int32 MissionId, class UWB_Minimap_C** EventTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_StartMinimapFocusMissionUI");

	Params::BP_MapUICtrl_C_BPI_StartMinimapFocusMissionUI Parms{};

	Parms.MissionId = MissionId;

	UObject::ProcessEvent(Func, &Parms);

	if (EventTarget != nullptr)
		*EventTarget = Parms.EventTarget;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_SetMinimapBGLocationCenter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BGCenter                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_SetMinimapBGLocationCenter(const struct FVector& BGCenter, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_SetMinimapBGLocationCenter");

	Params::BP_MapUICtrl_C_BPI_SetMinimapBGLocationCenter Parms{};

	Parms.BGCenter = std::move(BGCenter);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_GetCameraAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CameraAngle                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_GetCameraAngle(float* CameraAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_GetCameraAngle");

	Params::BP_MapUICtrl_C_BPI_GetCameraAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraAngle != nullptr)
		*CameraAngle = Parms.CameraAngle;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_GetCurAreaNameLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Label                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_GetCurAreaNameLabel(class FName* Label)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_GetCurAreaNameLabel");

	Params::BP_MapUICtrl_C_BPI_GetCurAreaNameLabel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Label != nullptr)
		*Label = Parms.Label;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_MinimapOnOffEffectRyuketsu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_MinimapOnOffEffectRyuketsu(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_MinimapOnOffEffectRyuketsu");

	Params::BP_MapUICtrl_C_BPI_MinimapOnOffEffectRyuketsu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_StartMinimapFocusMissionReport
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MissionId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWB_Minimap_C*                    EventTarget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapUICtrl_C::BPI_StartMinimapFocusMissionReport(int32 MissionId, class UWB_Minimap_C** EventTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_StartMinimapFocusMissionReport");

	Params::BP_MapUICtrl_C_BPI_StartMinimapFocusMissionReport Parms{};

	Parms.MissionId = MissionId;

	UObject::ProcessEvent(Func, &Parms);

	if (EventTarget != nullptr)
		*EventTarget = Parms.EventTarget;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_StartCoasterLineMinimap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MinimapDataId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_StartCoasterLineMinimap(int32 MinimapDataId, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_StartCoasterLineMinimap");

	Params::BP_MapUICtrl_C_BPI_StartCoasterLineMinimap Parms{};

	Parms.MinimapDataId = MinimapDataId;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_MapUICtrl.BP_MapUICtrl_C.BPI_FinishCoasterLineMinimap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapUICtrl_C::BPI_FinishCoasterLineMinimap(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapUICtrl_C", "BPI_FinishCoasterLineMinimap");

	Params::BP_MapUICtrl_C_BPI_FinishCoasterLineMinimap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}

}

