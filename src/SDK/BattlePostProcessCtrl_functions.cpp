#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePostProcessCtrl

#include "Basic.hpp"

#include "BattlePostProcessCtrl_classes.hpp"
#include "BattlePostProcessCtrl_parameters.hpp"


namespace SDK
{

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.ExecuteUbergraph_BattlePostProcessCtrl
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::ExecuteUbergraph_BattlePostProcessCtrl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "ExecuteUbergraph_BattlePostProcessCtrl");

	Params::BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBattlePostProcessCtrl_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "ReceiveTick");

	Params::BattlePostProcessCtrl_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.CounterBegin
// (BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::CounterBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "CounterBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.CounterActorStopEnd2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::CounterActorStopEnd2(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "CounterActorStopEnd2");

	Params::BattlePostProcessCtrl_C_CounterActorStopEnd2 Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.CounterActorStopEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::CounterActorStopEnd(int32 ActorIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "CounterActorStopEnd");

	Params::BattlePostProcessCtrl_C_CounterActorStopEnd Parms{};

	Parms.ActorIndex = ActorIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.CounterEnd
// (BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::CounterEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "CounterEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.Setup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         BattleMapDark                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::Setup(class UMaterialInstanceDynamic* BattleMapDark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "Setup");

	Params::BattlePostProcessCtrl_C_Setup Parms{};

	Parms.BattleMapDark = BattleMapDark;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.SwRadialBlur
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::SwRadialBlur(bool Sw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "SwRadialBlur");

	Params::BattlePostProcessCtrl_C_SwRadialBlur Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateCounterPostProcess
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::UpdateCounterPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "UpdateCounterPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateCounterTheta
// (Private, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::UpdateCounterTheta()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "UpdateCounterTheta");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateCounterTimeDilation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::UpdateCounterTimeDilation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "UpdateCounterTimeDilation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateCounter
// (Private, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::UpdateCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "UpdateCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeCounterDMI
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::InitializeCounterDMI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "InitializeCounterDMI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateBlur
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::UpdateBlur(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "UpdateBlur");

	Params::BattlePostProcessCtrl_C_UpdateBlur Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.GetPartyUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharaBase_C*                     Unit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::GetPartyUnit(int32 ActorIndex, class ACharaBase_C** Unit, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "GetPartyUnit");

	Params::BattlePostProcessCtrl_C_GetPartyUnit Parms{};

	Parms.ActorIndex = ActorIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Unit != nullptr)
		*Unit = Parms.Unit;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.IsExist
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class AActor*>                   Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AActor*                           Checker                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsExist                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::IsExist(TArray<class AActor*>& Source, class AActor* Checker, bool* Param_IsExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "IsExist");

	Params::BattlePostProcessCtrl_C_IsExist Parms{};

	Parms.Source = std::move(Source);
	Parms.Checker = Checker;

	UObject::ProcessEvent(Func, &Parms);

	Source = std::move(Parms.Source);

	if (Param_IsExist != nullptr)
		*Param_IsExist = Parms.Param_IsExist;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.CalcBlurUV
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BlurOrigin                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ValueU                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ValueV                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::CalcBlurUV(const struct FVector& BlurOrigin, float* ValueU, float* ValueV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "CalcBlurUV");

	Params::BattlePostProcessCtrl_C_CalcBlurUV Parms{};

	Parms.BlurOrigin = std::move(BlurOrigin);

	UObject::ProcessEvent(Func, &Parms);

	if (ValueU != nullptr)
		*ValueU = Parms.ValueU;

	if (ValueV != nullptr)
		*ValueV = Parms.ValueV;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeYugamiDMI
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::InitializeYugamiDMI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "InitializeYugamiDMI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateYugami
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     FogColor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::UpdateYugami(float Weight, const struct FLinearColor& FogColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "UpdateYugami");

	Params::BattlePostProcessCtrl_C_UpdateYugami Parms{};

	Parms.Weight = Weight;
	Parms.FogColor = std::move(FogColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeOomagatokiDMI
// (Private, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::InitializeOomagatokiDMI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "InitializeOomagatokiDMI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateOomagatoki
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::UpdateOomagatoki(float Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "UpdateOomagatoki");

	Params::BattlePostProcessCtrl_C_UpdateOomagatoki Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeWhiteOut
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::InitializeWhiteOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "InitializeWhiteOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateWhiteOut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::UpdateWhiteOut(float Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "UpdateWhiteOut");

	Params::BattlePostProcessCtrl_C_UpdateWhiteOut Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.SetMapDarkAlpha
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePostProcessCtrl_C::SetMapDarkAlpha(float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "SetMapDarkAlpha");

	Params::BattlePostProcessCtrl_C_SetMapDarkAlpha Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeCharaBlack
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::InitializeCharaBlack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "InitializeCharaBlack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateQuiz
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::UpdateQuiz()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "UpdateQuiz");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeBlur
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePostProcessCtrl_C::InitializeBlur()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "InitializeBlur");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_RadialBlurSetValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          BlurOrigin                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EndAmount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartKeepSec                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LeapSec                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_RadialBlurSetValue(bool Sw, const struct FVector& BlurOrigin, float Scale, float Damage, float StartAmount, float EndAmount, float StartKeepSec, float LeapSec, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_RadialBlurSetValue");

	Params::BattlePostProcessCtrl_C_BI_RadialBlurSetValue Parms{};

	Parms.Sw = Sw;
	Parms.BlurOrigin = std::move(BlurOrigin);
	Parms.Scale = Scale;
	Parms.Damage = Damage;
	Parms.StartAmount = StartAmount;
	Parms.EndAmount = EndAmount;
	Parms.StartKeepSec = StartKeepSec;
	Parms.LeapSec = LeapSec;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_AddOrUpdateBlendable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         PostProcessMaterial                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Waight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_AddOrUpdateBlendable(class UMaterialInstanceDynamic* PostProcessMaterial, float Waight, bool* RetVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_AddOrUpdateBlendable");

	Params::BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable Parms{};

	Parms.PostProcessMaterial = PostProcessMaterial;
	Parms.Waight = Waight;

	UObject::ProcessEvent(Func, &Parms);

	if (RetVal != nullptr)
		*RetVal = Parms.RetVal;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_CounterEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_CounterEnd(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_CounterEnd");

	Params::BattlePostProcessCtrl_C_BI_CounterEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_CounterBegin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_CounterBegin(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_CounterBegin");

	Params::BattlePostProcessCtrl_C_BI_CounterBegin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_CounterActorStopEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActorPartyIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_CounterActorStopEnd(int32 ActorPartyIndex, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_CounterActorStopEnd");

	Params::BattlePostProcessCtrl_C_BI_CounterActorStopEnd Parms{};

	Parms.ActorPartyIndex = ActorPartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_CounterActorStopEnd2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_CounterActorStopEnd2(class AActor* Actor, bool* RetVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_CounterActorStopEnd2");

	Params::BattlePostProcessCtrl_C_BI_CounterActorStopEnd2 Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (RetVal != nullptr)
		*RetVal = Parms.RetVal;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_MotionBlurEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_MotionBlurEnable(bool Enable, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_MotionBlurEnable");

	Params::BattlePostProcessCtrl_C_BI_MotionBlurEnable Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_YugamiUpdate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     FogColor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_YugamiUpdate(float Weight, const struct FLinearColor& FogColor, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_YugamiUpdate");

	Params::BattlePostProcessCtrl_C_BI_YugamiUpdate Parms{};

	Parms.Weight = Weight;
	Parms.FogColor = std::move(FogColor);

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_OomagatokiUpdate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_OomagatokiUpdate(float Weight, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_OomagatokiUpdate");

	Params::BattlePostProcessCtrl_C_BI_OomagatokiUpdate Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_WhiteOutUpdate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_WhiteOutUpdate(float Weight, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_WhiteOutUpdate");

	Params::BattlePostProcessCtrl_C_BI_WhiteOutUpdate Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetMapDarkAlpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetMapDarkAlpha(float Alpha, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetMapDarkAlpha");

	Params::BattlePostProcessCtrl_C_BI_SetMapDarkAlpha Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetCharaBlackWeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetCharaBlackWeight(float Weight, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetCharaBlackWeight");

	Params::BattlePostProcessCtrl_C_BI_SetCharaBlackWeight Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetCharaBlackScalar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetCharaBlackScalar(class FName ParameterName, float Value, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetCharaBlackScalar");

	Params::BattlePostProcessCtrl_C_BI_SetCharaBlackScalar Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetCharaBlackVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetCharaBlackVector(class FName ParameterName, const struct FLinearColor& Value, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetCharaBlackVector");

	Params::BattlePostProcessCtrl_C_BI_SetCharaBlackVector Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_RemovePostMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Mid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_RemovePostMaterial(class UMaterialInstanceDynamic* Mid, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_RemovePostMaterial");

	Params::BattlePostProcessCtrl_C_BI_RemovePostMaterial Parms{};

	Parms.Mid = Mid;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_InitializeQuiz
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       OriginTransform                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_InitializeQuiz(const struct FTransform& OriginTransform, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_InitializeQuiz");

	Params::BattlePostProcessCtrl_C_BI_InitializeQuiz Parms{};

	Parms.OriginTransform = std::move(OriginTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_FinalizeQuiz
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_FinalizeQuiz(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_FinalizeQuiz");

	Params::BattlePostProcessCtrl_C_BI_FinalizeQuiz Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWipeWeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetQuizWipeWeight(float Weight, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetQuizWipeWeight");

	Params::BattlePostProcessCtrl_C_BI_SetQuizWipeWeight Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWipeScalar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetQuizWipeScalar(class FName ParameterName, float Value, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetQuizWipeScalar");

	Params::BattlePostProcessCtrl_C_BI_SetQuizWipeScalar Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWipeVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetQuizWipeVector(class FName ParameterName, const struct FLinearColor& Value, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetQuizWipeVector");

	Params::BattlePostProcessCtrl_C_BI_SetQuizWipeVector Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizCorrectWeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetQuizCorrectWeight(float Weight, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetQuizCorrectWeight");

	Params::BattlePostProcessCtrl_C_BI_SetQuizCorrectWeight Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizCorrectScalar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetQuizCorrectScalar(class FName ParameterName, float Value, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetQuizCorrectScalar");

	Params::BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizCorrectVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetQuizCorrectVector(class FName ParameterName, const struct FLinearColor& Value, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetQuizCorrectVector");

	Params::BattlePostProcessCtrl_C_BI_SetQuizCorrectVector Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWrongWeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetQuizWrongWeight(float Weight, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetQuizWrongWeight");

	Params::BattlePostProcessCtrl_C_BI_SetQuizWrongWeight Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWrongScalar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetQuizWrongScalar(class FName ParameterName, float Value, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetQuizWrongScalar");

	Params::BattlePostProcessCtrl_C_BI_SetQuizWrongScalar Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWrongVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_SetQuizWrongVector(class FName ParameterName, const struct FLinearColor& Value, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_SetQuizWrongVector");

	Params::BattlePostProcessCtrl_C_BI_SetQuizWrongVector Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_RemoveYugami
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_RemoveYugami(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_RemoveYugami");

	Params::BattlePostProcessCtrl_C_BI_RemoveYugami Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_RemoveWhiteOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_RemoveWhiteOut(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_RemoveWhiteOut");

	Params::BattlePostProcessCtrl_C_BI_RemoveWhiteOut Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_AddQuizExposureCompensation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AddValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_AddQuizExposureCompensation(float AddValue, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_AddQuizExposureCompensation");

	Params::BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation Parms{};

	Parms.AddValue = AddValue;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_ResetQuizExposureCompensation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePostProcessCtrl_C::BI_ResetQuizExposureCompensation(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePostProcessCtrl_C", "BI_ResetQuizExposureCompensation");

	Params::BattlePostProcessCtrl_C_BI_ResetQuizExposureCompensation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}

}

