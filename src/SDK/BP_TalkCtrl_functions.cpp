#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TalkCtrl

#include "Basic.hpp"

#include "BP_TalkCtrl_classes.hpp"
#include "BP_TalkCtrl_parameters.hpp"


namespace SDK
{

// Function BP_TalkCtrl.BP_TalkCtrl_C.ExecuteUbergraph_BP_TalkCtrl
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::ExecuteUbergraph_BP_TalkCtrl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "ExecuteUbergraph_BP_TalkCtrl");

	Params::BP_TalkCtrl_C_ExecuteUbergraph_BP_TalkCtrl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_TalkEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_TalkEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_TalkEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_TalkStartBranch
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_TalkStartBranch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_TalkStartBranch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_InitScene
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_InitScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_InitScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "ReceiveEndPlay");

	Params::BP_TalkCtrl_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TalkCtrl_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_LotQuiz
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_LotQuiz()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_LotQuiz");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ApologyWaitFlag
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ApologyWaitFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ApologyWaitFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_YoroCameraCheck
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_YoroCameraCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_YoroCameraCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_HeroBadStatus
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_HeroBadStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_HeroBadStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_StockWaitFlag
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_StockWaitFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_StockWaitFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutSafetyWant
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutSafetyWant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutSafetyWant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutNkmUnconditional
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutNkmUnconditional()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutNkmUnconditional");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutSafetyQuestion
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutSafetyQuestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutSafetyQuestion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MoonTemperGood
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MoonTemperGood()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MoonTemperGood");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_LevelWaitFlag
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_LevelWaitFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_LevelWaitFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_FriendTalk
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_FriendTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_FriendTalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MoonTemperBranch
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MoonTemperBranch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MoonTemperBranch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutEnemyTurnAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutEnemyTurnAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutEnemyTurnAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutLeaveAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutLeaveAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutLeaveAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_QuestionReactionProc
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_QuestionReactionProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_QuestionReactionProc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_Cancel2
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_Cancel2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_Cancel2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_Cancel1
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_Cancel1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_Cancel1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_CancelTalk
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_CancelTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_CancelTalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_BeginChoice
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_BeginChoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_BeginChoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutFailAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutFailAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutFailAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_QuestionLotReaction
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_QuestionLotReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_QuestionLotReaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_QuestionBranch
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_QuestionBranch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_QuestionBranch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_EndScout
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_EndScout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_EndScout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutNothing
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutNothing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutNothing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutFail
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutFail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutSuccess
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_TalkQuestion
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_TalkQuestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_TalkQuestion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutMythBranch
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutMythBranch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutMythBranch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ScoutFirst
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_ScoutFirst()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ScoutFirst");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_UniqueSkillDevilDisappear
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_UniqueSkillDevilDisappear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_UniqueSkillDevilDisappear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_SetAddMoneyPanel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MoneyAdd                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::Evt_SetAddMoneyPanel(int32 MoneyAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_SetAddMoneyPanel");

	Params::BP_TalkCtrl_C_Evt_SetAddMoneyPanel Parms{};

	Parms.MoneyAdd = MoneyAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_DevilMove
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       StartTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform                       TargetTransform                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::Evt_DevilMove(const struct FTransform& StartTransform, const struct FTransform& TargetTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_DevilMove");

	Params::BP_TalkCtrl_C_Evt_DevilMove Parms{};

	Parms.StartTransform = std::move(StartTransform);
	Parms.TargetTransform = std::move(TargetTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_HeroMove
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       StartTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform                       TargetTransform                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::Evt_HeroMove(const struct FTransform& StartTransform, const struct FTransform& TargetTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_HeroMove");

	Params::BP_TalkCtrl_C_Evt_HeroMove Parms{};

	Parms.StartTransform = std::move(StartTransform);
	Parms.TargetTransform = std::move(TargetTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ShowMoneyPanel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MoneyAdd                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::Evt_ShowMoneyPanel(int32 MoneyAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ShowMoneyPanel");

	Params::BP_TalkCtrl_C_Evt_ShowMoneyPanel Parms{};

	Parms.MoneyAdd = MoneyAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ShowItemPanel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Add                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::Evt_ShowItemPanel(int32 ItemId, int32 Add)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ShowItemPanel");

	Params::BP_TalkCtrl_C_Evt_ShowItemPanel Parms{};

	Parms.ItemId = ItemId;
	Parms.Add = Add;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_DebugCmd_ChangeTone
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_DebugCmd_ChangeTone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_DebugCmd_ChangeTone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_ChangeMotionDelay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_CHARA_MOTION_ID                       MotionID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::Evt_ChangeMotionDelay(E_CHARA_MOTION_ID MotionID, float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_ChangeMotionDelay");

	Params::BP_TalkCtrl_C_Evt_ChangeMotionDelay Parms{};

	Parms.MotionID = MotionID;
	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_BeglifeIncense
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_BeglifeIncense()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_BeglifeIncense");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_BeglifeSoul
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_BeglifeSoul()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_BeglifeSoul");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_BeglifeSuccessEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_BeglifeSuccessEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_BeglifeSuccessEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_BeglifeMoneyLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_BeglifeMoneyLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_BeglifeMoneyLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_BeglifeNkm
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_BeglifeNkm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_BeglifeNkm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_BeglifeDie
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_BeglifeDie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_BeglifeDie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_BeglifeChoice
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_BeglifeChoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_BeglifeChoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_BeglifeMoney
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_BeglifeMoney()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_BeglifeMoney");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_BeglifeBegin
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_BeglifeBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_BeglifeBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MythEnemyTurn
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MythEnemyTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MythEnemyTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MythBegin
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MythBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MythBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MythEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MythEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MythEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MythMessage
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MythMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MythMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MythSpawnDevil
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::Evt_MythSpawnDevil(int32 DevilID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MythSpawnDevil");

	Params::BP_TalkCtrl_C_Evt_MythSpawnDevil Parms{};

	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MercyTalkEndNo
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MercyTalkEndNo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MercyTalkEndNo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MercyTalkNo
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MercyTalkNo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MercyTalkNo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MercyTalkEndMercy
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MercyTalkEndMercy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MercyTalkEndMercy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MercyTalkYes
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MercyTalkYes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MercyTalkYes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MercyTalkLoopStart
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MercyTalkLoopStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MercyTalkLoopStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_MercyTalkStart
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_MercyTalkStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_MercyTalkStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_TalkNG
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TALK_NG_TYPE                          NGType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::Evt_TalkNG(E_TALK_NG_TYPE NGType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_TalkNG");

	Params::BP_TalkCtrl_C_Evt_TalkNG Parms{};

	Parms.NGType = NGType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_QuizAnswer
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_QuizAnswer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_QuizAnswer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_QuizQuestion
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_QuizQuestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_QuizQuestion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_QuizSummon
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_QuizSummon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_QuizSummon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_QuizStart
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_QuizStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_QuizStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_WantReactionTutorial
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_WantReactionTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_WantReactionTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_WantReaction
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_WantReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_WantReaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_WantAcCard
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_WantAcCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_WantAcCard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_WantChoice
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_WantChoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_WantChoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Evt_WantPartStart
// (BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::Evt_WantPartStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Evt_WantPartStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.EvtOpenSysMsg
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_TalkCamera                            CameraType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::EvtOpenSysMsg(class FName Label, E_TalkCamera CameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "EvtOpenSysMsg");

	Params::BP_TalkCtrl_C_EvtOpenSysMsg Parms{};

	Parms.Label = Label;
	Parms.CameraType = CameraType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.EvtOpenToneMsgById
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MsgID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDevilSpeak                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_TalkCamera                            CameraType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::EvtOpenToneMsgById(int32 MsgID, bool IsDevilSpeak, E_TalkCamera CameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "EvtOpenToneMsgById");

	Params::BP_TalkCtrl_C_EvtOpenToneMsgById Parms{};

	Parms.MsgID = MsgID;
	Parms.IsDevilSpeak = IsDevilSpeak;
	Parms.CameraType = CameraType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.EvtOpenMsgbyLabel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDevil                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_TalkCamera                            CameraType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::EvtOpenMsgbyLabel(class FName Label, bool IsDevil, E_TalkCamera CameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "EvtOpenMsgbyLabel");

	Params::BP_TalkCtrl_C_EvtOpenMsgbyLabel Parms{};

	Parms.Label = Label;
	Parms.IsDevil = IsDevil;
	Parms.CameraType = CameraType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_8E5A00544AC4BCD3F46BB1B58EB058A6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_8E5A00544AC4BCD3F46BB1B58EB058A6(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_8E5A00544AC4BCD3F46BB1B58EB058A6");

	Params::BP_TalkCtrl_C_OnLoaded_8E5A00544AC4BCD3F46BB1B58EB058A6 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_956CDAE3404572E86E1930BBBCB3B75A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_956CDAE3404572E86E1930BBBCB3B75A(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_956CDAE3404572E86E1930BBBCB3B75A");

	Params::BP_TalkCtrl_C_OnLoaded_956CDAE3404572E86E1930BBBCB3B75A Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_853A0F8D4A75D88EE001D69CB60C398D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_853A0F8D4A75D88EE001D69CB60C398D(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_853A0F8D4A75D88EE001D69CB60C398D");

	Params::BP_TalkCtrl_C_OnLoaded_853A0F8D4A75D88EE001D69CB60C398D Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_E060ACA34EE950C8F482EFA05F326ED6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_E060ACA34EE950C8F482EFA05F326ED6(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_E060ACA34EE950C8F482EFA05F326ED6");

	Params::BP_TalkCtrl_C_OnLoaded_E060ACA34EE950C8F482EFA05F326ED6 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_33A06C84454230A0AF018496357EBD8F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_33A06C84454230A0AF018496357EBD8F(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_33A06C84454230A0AF018496357EBD8F");

	Params::BP_TalkCtrl_C_OnLoaded_33A06C84454230A0AF018496357EBD8F Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_8A43E0E34A09FF2BD22DEF97D37BA0EA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_8A43E0E34A09FF2BD22DEF97D37BA0EA(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_8A43E0E34A09FF2BD22DEF97D37BA0EA");

	Params::BP_TalkCtrl_C_OnLoaded_8A43E0E34A09FF2BD22DEF97D37BA0EA Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_58C4F3A344E087E21CF022AE0F7992D0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_58C4F3A344E087E21CF022AE0F7992D0(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_58C4F3A344E087E21CF022AE0F7992D0");

	Params::BP_TalkCtrl_C_OnLoaded_58C4F3A344E087E21CF022AE0F7992D0 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_B56F8E0A4087071A01A318948B471DC5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_B56F8E0A4087071A01A318948B471DC5(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_B56F8E0A4087071A01A318948B471DC5");

	Params::BP_TalkCtrl_C_OnLoaded_B56F8E0A4087071A01A318948B471DC5 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_18FAE4904585CCCFC8DBDA928F723BF6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_18FAE4904585CCCFC8DBDA928F723BF6(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_18FAE4904585CCCFC8DBDA928F723BF6");

	Params::BP_TalkCtrl_C_OnLoaded_18FAE4904585CCCFC8DBDA928F723BF6 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_761DA75E441C41587A9750B190BDBCA7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_761DA75E441C41587A9750B190BDBCA7(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_761DA75E441C41587A9750B190BDBCA7");

	Params::BP_TalkCtrl_C_OnLoaded_761DA75E441C41587A9750B190BDBCA7 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_741E43CC490ADF7DD89B53ABAA07768C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_741E43CC490ADF7DD89B53ABAA07768C(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_741E43CC490ADF7DD89B53ABAA07768C");

	Params::BP_TalkCtrl_C_OnLoaded_741E43CC490ADF7DD89B53ABAA07768C Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_761DA75E441C41587A9750B15C1C34BF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_761DA75E441C41587A9750B15C1C34BF(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_761DA75E441C41587A9750B15C1C34BF");

	Params::BP_TalkCtrl_C_OnLoaded_761DA75E441C41587A9750B15C1C34BF Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_741E43CC490ADF7DD89B53AB66A6FE94
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_741E43CC490ADF7DD89B53AB66A6FE94(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_741E43CC490ADF7DD89B53AB66A6FE94");

	Params::BP_TalkCtrl_C_OnLoaded_741E43CC490ADF7DD89B53AB66A6FE94 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_761DA75E441C41587A9750B165D8C8D5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_761DA75E441C41587A9750B165D8C8D5(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_761DA75E441C41587A9750B165D8C8D5");

	Params::BP_TalkCtrl_C_OnLoaded_761DA75E441C41587A9750B165D8C8D5 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_741E43CC490ADF7DD89B53AB5F6202FE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_741E43CC490ADF7DD89B53AB5F6202FE(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_741E43CC490ADF7DD89B53AB5F6202FE");

	Params::BP_TalkCtrl_C_OnLoaded_741E43CC490ADF7DD89B53AB5F6202FE Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_761DA75E441C41587A9750B1BED08BD6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_761DA75E441C41587A9750B1BED08BD6(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_761DA75E441C41587A9750B1BED08BD6");

	Params::BP_TalkCtrl_C_OnLoaded_761DA75E441C41587A9750B1BED08BD6 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_741E43CC490ADF7DD89B53AB846A41FD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_741E43CC490ADF7DD89B53AB846A41FD(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_741E43CC490ADF7DD89B53AB846A41FD");

	Params::BP_TalkCtrl_C_OnLoaded_741E43CC490ADF7DD89B53AB846A41FD Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_761DA75E441C41587A9750B15CA36354
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_761DA75E441C41587A9750B15CA36354(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_761DA75E441C41587A9750B15CA36354");

	Params::BP_TalkCtrl_C_OnLoaded_761DA75E441C41587A9750B15CA36354 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_741E43CC490ADF7DD89B53AB6619A97F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_741E43CC490ADF7DD89B53AB6619A97F(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_741E43CC490ADF7DD89B53AB6619A97F");

	Params::BP_TalkCtrl_C_OnLoaded_741E43CC490ADF7DD89B53AB6619A97F Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_761DA75E441C41587A9750B1D5F1C094
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_761DA75E441C41587A9750B1D5F1C094(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_761DA75E441C41587A9750B1D5F1C094");

	Params::BP_TalkCtrl_C_OnLoaded_761DA75E441C41587A9750B1D5F1C094 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnLoaded_741E43CC490ADF7DD89B53ABEF4B0ABF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_TalkCtrl_C::OnLoaded_741E43CC490ADF7DD89B53ABEF4B0ABF(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnLoaded_741E43CC490ADF7DD89B53ABEF4B0ABF");

	Params::BP_TalkCtrl_C_OnLoaded_741E43CC490ADF7DD89B53ABEF4B0ABF Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Timeline_DevilMove__UpdateFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::Timeline_DevilMove__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Timeline_DevilMove__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Timeline_DevilMove__FinishedFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::Timeline_DevilMove__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Timeline_DevilMove__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Timeline_HeroMove__UpdateFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::Timeline_HeroMove__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Timeline_HeroMove__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.Timeline_HeroMove__FinishedFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::Timeline_HeroMove__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "Timeline_HeroMove__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizWipeScaleUp2__UpdateFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizWipeScaleUp2__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizWipeScaleUp2__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizWipeScaleUp2__FinishedFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizWipeScaleUp2__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizWipeScaleUp2__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizWipeScaleDown2__UpdateFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizWipeScaleDown2__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizWipeScaleDown2__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizWipeScaleDown2__FinishedFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizWipeScaleDown2__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizWipeScaleDown2__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizWipeScaleDown1__UpdateFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizWipeScaleDown1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizWipeScaleDown1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizWipeScaleDown1__FinishedFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizWipeScaleDown1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizWipeScaleDown1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizWipeScaleUp1__UpdateFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizWipeScaleUp1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizWipeScaleUp1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizWipeScaleUp1__FinishedFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizWipeScaleUp1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizWipeScaleUp1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizCharaBlackenEnd__Switch__EventFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizCharaBlackenEnd__Switch__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizCharaBlackenEnd__Switch__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizCharaBlackenEnd__UpdateFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizCharaBlackenEnd__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizCharaBlackenEnd__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.QuizCharaBlackenEnd__FinishedFunc
// (BlueprintEvent)

void ABP_TalkCtrl_C::QuizCharaBlackenEnd__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "QuizCharaBlackenEnd__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.CheckTalkEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::CheckTalkEnd(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "CheckTalkEnd");

	Params::BP_TalkCtrl_C_CheckTalkEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.MakeUpToneTable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::MakeUpToneTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "MakeUpToneTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetText_ByLabel
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Item                                                   (Parm, OutParm)

void ABP_TalkCtrl_C::GetText_ByLabel(class FName B, class FText* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetText_ByLabel");

	Params::BP_TalkCtrl_C_GetText_ByLabel Parms{};

	Parms.B = B;

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.ChangeMotion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_CHARA_MOTION_ID                       MotionID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::ChangeMotion(E_CHARA_MOTION_ID MotionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "ChangeMotion");

	Params::BP_TalkCtrl_C_ChangeMotion Parms{};

	Parms.MotionID = MotionID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.CheckMotion
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_CHARA_MOTION_ID                       MotionType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Check                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::CheckMotion(E_CHARA_MOTION_ID* MotionType, bool* Check)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "CheckMotion");

	Params::BP_TalkCtrl_C_CheckMotion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MotionType != nullptr)
		*MotionType = Parms.MotionType;

	if (Check != nullptr)
		*Check = Parms.Check;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.OnlyModelView
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::OnlyModelView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "OnlyModelView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.BackModelView
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::BackModelView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "BackModelView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.DebugCmd_ChangeTone
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::DebugCmd_ChangeTone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "DebugCmd_ChangeTone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.CheckPadAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::CheckPadAction(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "CheckPadAction");

	Params::BP_TalkCtrl_C_CheckPadAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetDefaultTone
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_TALK_TONE_TYPE                        Tone                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetDefaultTone(E_TALK_TONE_TYPE* Tone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetDefaultTone");

	Params::BP_TalkCtrl_C_GetDefaultTone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Tone != nullptr)
		*Tone = Parms.Tone;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetMsgTextList_ByIdList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<int32>                           IdList                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsDevil                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class FText>                     TextList                                               (Parm, OutParm)

void ABP_TalkCtrl_C::GetMsgTextList_ByIdList(TArray<int32>& IdList, bool IsDevil, TArray<class FText>* TextList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetMsgTextList_ByIdList");

	Params::BP_TalkCtrl_C_GetMsgTextList_ByIdList Parms{};

	Parms.IdList = std::move(IdList);
	Parms.IsDevil = IsDevil;

	UObject::ProcessEvent(Func, &Parms);

	IdList = std::move(Parms.IdList);

	if (TextList != nullptr)
		*TextList = std::move(Parms.TextList);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetMsgText_ById
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MsgID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDevil                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Text                                                   (Parm, OutParm)

void ABP_TalkCtrl_C::GetMsgText_ById(int32 MsgID, bool IsDevil, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetMsgText_ById");

	Params::BP_TalkCtrl_C_GetMsgText_ById Parms{};

	Parms.MsgID = MsgID;
	Parms.IsDevil = IsDevil;

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetMsgText_ByLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Label                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDevil                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Text                                                   (Parm, OutParm)

void ABP_TalkCtrl_C::GetMsgText_ByLabel(class FName Label, bool IsDevil, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetMsgText_ByLabel");

	Params::BP_TalkCtrl_C_GetMsgText_ByLabel Parms{};

	Parms.Label = Label;
	Parms.IsDevil = IsDevil;

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetHeroTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::GetHeroTransform(struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetHeroTransform");

	Params::BP_TalkCtrl_C_GetHeroTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.MoveHero
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTalk                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsMoving                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::MoveHero(bool IsTalk, bool IsMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "MoveHero");

	Params::BP_TalkCtrl_C_MoveHero Parms{};

	Parms.IsTalk = IsTalk;
	Parms.IsMoving = IsMoving;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.InitChara
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::InitChara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "InitChara");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetDevilTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::GetDevilTransform(struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetDevilTransform");

	Params::BP_TalkCtrl_C_GetDevilTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.ChangeBtlCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::ChangeBtlCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "ChangeBtlCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.ChangeTalkCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::ChangeTalkCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "ChangeTalkCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.ShowBtlUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::ShowBtlUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "ShowBtlUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.HideBtlUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::HideBtlUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "HideBtlUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.ShowHero
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsShow                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::ShowHero(bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "ShowHero");

	Params::BP_TalkCtrl_C_ShowHero Parms{};

	Parms.IsShow = IsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetDevilMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetDevilMesh(class USkeletalMeshComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetDevilMesh");

	Params::BP_TalkCtrl_C_GetDevilMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetBIMainWork
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleMain_C>BPI                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::GetBIMainWork(TScriptInterface<class IBPI_BattleMain_C>* BPI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetBIMainWork");

	Params::BP_TalkCtrl_C_GetBIMainWork Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BPI != nullptr)
		*BPI = Parms.BPI;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetBIPartySystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleParty_C>Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::GetBIPartySystem(TScriptInterface<class IBPI_BattleParty_C>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetBIPartySystem");

	Params::BP_TalkCtrl_C_GetBIPartySystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.FindLookAtRotation_Daath
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ZOnly                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_TalkCtrl_C::FindLookAtRotation_Daath(const struct FVector& Start, const struct FVector& Target, bool ZOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "FindLookAtRotation_Daath");

	Params::BP_TalkCtrl_C_FindLookAtRotation_Daath Parms{};

	Parms.Start = std::move(Start);
	Parms.Target = std::move(Target);
	Parms.ZOnly = ZOnly;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetDevilBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ADevilBase_C*                     DevilBase                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetDevilBase(class ADevilBase_C** DevilBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetDevilBase");

	Params::BP_TalkCtrl_C_GetDevilBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DevilBase != nullptr)
		*DevilBase = Parms.DevilBase;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.LotQuestionEx
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::LotQuestionEx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "LotQuestionEx");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.PlayReactionVoice
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::PlayReactionVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "PlayReactionVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetToneTable_Soft
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_TALK_TONE_TYPE                        Tone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UObject>           Asset                                                  (Parm, OutParm, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetToneTable_Soft(E_TALK_TONE_TYPE Tone, TSoftObjectPtr<class UObject>* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetToneTable_Soft");

	Params::BP_TalkCtrl_C_GetToneTable_Soft Parms{};

	Parms.Tone = Tone;

	UObject::ProcessEvent(Func, &Parms);

	if (Asset != nullptr)
		*Asset = Parms.Asset;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetToneMsgAsset_Soft
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_TALK_TONE_TYPE                        Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UScriptMessageAsset>ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)

TSoftObjectPtr<class UScriptMessageAsset> ABP_TalkCtrl_C::GetToneMsgAsset_Soft(E_TALK_TONE_TYPE Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetToneMsgAsset_Soft");

	Params::BP_TalkCtrl_C_GetToneMsgAsset_Soft Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetTalkAssetInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_TALK_TONE_TYPE                        Tone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTalkAssetInfo                   AssetInfo                                              (Parm, OutParm, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetTalkAssetInfo(E_TALK_TONE_TYPE Tone, struct FTalkAssetInfo* AssetInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetTalkAssetInfo");

	Params::BP_TalkCtrl_C_GetTalkAssetInfo Parms{};

	Parms.Tone = Tone;

	UObject::ProcessEvent(Func, &Parms);

	if (AssetInfo != nullptr)
		*AssetInfo = std::move(Parms.AssetInfo);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.PlaySE
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::PlaySE(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "PlaySE");

	Params::BP_TalkCtrl_C_PlaySE Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetBISoundManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleSoundManager_C>Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::GetBISoundManager(TScriptInterface<class IBPI_BattleSoundManager_C>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetBISoundManager");

	Params::BP_TalkCtrl_C_GetBISoundManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.SetTagValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ValueIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::SetTagValue(int32 ValueIndex, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "SetTagValue");

	Params::BP_TalkCtrl_C_SetTagValue Parms{};

	Parms.ValueIndex = ValueIndex;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.FindHeroUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase_C*                     Unit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::FindHeroUnit(class ACharaBase_C** Unit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "FindHeroUnit");

	Params::BP_TalkCtrl_C_FindHeroUnit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Unit != nullptr)
		*Unit = Parms.Unit;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.FindDevilUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase_C*                     Unit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::FindDevilUnit(class ACharaBase_C** Unit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "FindDevilUnit");

	Params::BP_TalkCtrl_C_FindDevilUnit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Unit != nullptr)
		*Unit = Parms.Unit;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetHeroCharaBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharaBase_C*                     CharaBase                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetHeroCharaBase(class ACharaBase_C** CharaBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetHeroCharaBase");

	Params::BP_TalkCtrl_C_GetHeroCharaBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharaBase != nullptr)
		*CharaBase = Parms.CharaBase;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetDevilCharaBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharaBase_C*                     CharaBase                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetDevilCharaBase(class ACharaBase_C** CharaBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetDevilCharaBase");

	Params::BP_TalkCtrl_C_GetDevilCharaBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharaBase != nullptr)
		*CharaBase = Parms.CharaBase;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.IsMoveCameraForMsg
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Move                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::IsMoveCameraForMsg(bool* Move)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "IsMoveCameraForMsg");

	Params::BP_TalkCtrl_C_IsMoveCameraForMsg Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Move != nullptr)
		*Move = Parms.Move;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.SetBattleTransform
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::SetBattleTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "SetBattleTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.PlayVoice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDevilTalkVoice                         TalkVoice                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontAttachToTalker                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::PlayVoice(EDevilTalkVoice TalkVoice, bool DontAttachToTalker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "PlayVoice");

	Params::BP_TalkCtrl_C_PlayVoice Parms{};

	Parms.TalkVoice = TalkVoice;
	Parms.DontAttachToTalker = DontAttachToTalker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.IsMythMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsMythMode                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::IsMythMode(bool* Param_IsMythMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "IsMythMode");

	Params::BP_TalkCtrl_C_IsMythMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsMythMode != nullptr)
		*Param_IsMythMode = Parms.Param_IsMythMode;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetHeroCamTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       CamTarget                                              (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::GetHeroCamTarget(struct FTransform* CamTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetHeroCamTarget");

	Params::BP_TalkCtrl_C_GetHeroCamTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CamTarget != nullptr)
		*CamTarget = std::move(Parms.CamTarget);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.SetSword
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::SetSword(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "SetSword");

	Params::BP_TalkCtrl_C_SetSword Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.SaveStartTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::SaveStartTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "SaveStartTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.ApplyDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::ApplyDistance(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "ApplyDistance");

	Params::BP_TalkCtrl_C_ApplyDistance Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.ResetPlayerGaze
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::ResetPlayerGaze()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "ResetPlayerGaze");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.StartGaze
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::StartGaze()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "StartGaze");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.DebugStartInfo
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::DebugStartInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "DebugStartInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.PrintCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::PrintCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "PrintCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.PrintCameraTable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::PrintCameraTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "PrintCameraTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.IsMagatsukaEncount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsMagatsuka                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::IsMagatsukaEncount(bool* IsMagatsuka)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "IsMagatsukaEncount");

	Params::BP_TalkCtrl_C_IsMagatsukaEncount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsMagatsuka != nullptr)
		*IsMagatsuka = Parms.IsMagatsuka;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetShortcutLabel
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Label                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetShortcutLabel(class FName* Label)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetShortcutLabel");

	Params::BP_TalkCtrl_C_GetShortcutLabel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Label != nullptr)
		*Label = Parms.Label;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.IsBGMChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Changed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::IsBGMChanged(bool* Changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "IsBGMChanged");

	Params::BP_TalkCtrl_C_IsBGMChanged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Changed != nullptr)
		*Changed = Parms.Changed;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.IsModelVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharaBase_C*                     Chara                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsVisible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TalkCtrl_C::IsModelVisible(class ACharaBase_C* Chara, bool* IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "IsModelVisible");

	Params::BP_TalkCtrl_C_IsModelVisible Parms{};

	Parms.Chara = Chara;

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible != nullptr)
		*IsVisible = Parms.IsVisible;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.DebugCameraOff
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TalkCtrl_C::DebugCameraOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "DebugCameraOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetTalkCameraOffsetTable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_TalkCameraOffset             Param_CameraOffset                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetTalkCameraOffsetTable(int32 DevilID, struct FST_TalkCameraOffset* Param_CameraOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetTalkCameraOffsetTable");

	Params::BP_TalkCtrl_C_GetTalkCameraOffsetTable Parms{};

	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CameraOffset != nullptr)
		*Param_CameraOffset = std::move(Parms.Param_CameraOffset);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetWantReacCardLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CardLabel                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetWantReacCardLabel(class FName* CardLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetWantReacCardLabel");

	Params::BP_TalkCtrl_C_GetWantReacCardLabel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CardLabel != nullptr)
		*CardLabel = Parms.CardLabel;
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.SetupQuizChara
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADevilBase_C*                     Param_QuizChara                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::SetupQuizChara(class ADevilBase_C* Param_QuizChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "SetupQuizChara");

	Params::BP_TalkCtrl_C_SetupQuizChara Parms{};

	Parms.Param_QuizChara = Param_QuizChara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TalkCtrl.BP_TalkCtrl_C.GetQuizGlowRadiusModify
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Modify                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TalkCtrl_C::GetQuizGlowRadiusModify(float* Modify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TalkCtrl_C", "GetQuizGlowRadiusModify");

	Params::BP_TalkCtrl_C_GetQuizGlowRadiusModify Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Modify != nullptr)
		*Modify = Parms.Modify;
}

}

