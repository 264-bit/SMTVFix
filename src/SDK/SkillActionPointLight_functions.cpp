#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkillActionPointLight

#include "Basic.hpp"

#include "SkillActionPointLight_classes.hpp"
#include "SkillActionPointLight_parameters.hpp"


namespace SDK
{

// Function SkillActionPointLight.SkillActionPointLight_C.ExecuteUbergraph_SkillActionPointLight
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASkillActionPointLight_C::ExecuteUbergraph_SkillActionPointLight(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "ExecuteUbergraph_SkillActionPointLight");

	Params::SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SkillActionPointLight.SkillActionPointLight_C.ActivateUpdateTimeline
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveLinearColor*                Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     OverrideColor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OverrideIntensity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OverrideRadius                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      FalloffExponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OverrideFalloffExponent                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASkillActionPointLight_C::ActivateUpdateTimeline(class UCurveLinearColor* Color, const struct FLinearColor& OverrideColor, class UCurveFloat* Intensity, float OverrideIntensity, class UCurveFloat* Radius, float OverrideRadius, class UCurveFloat* FalloffExponent, float OverrideFalloffExponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "ActivateUpdateTimeline");

	Params::SkillActionPointLight_C_ActivateUpdateTimeline Parms{};

	Parms.Color = Color;
	Parms.OverrideColor = std::move(OverrideColor);
	Parms.Intensity = Intensity;
	Parms.OverrideIntensity = OverrideIntensity;
	Parms.Radius = Radius;
	Parms.OverrideRadius = OverrideRadius;
	Parms.FalloffExponent = FalloffExponent;
	Parms.OverrideFalloffExponent = OverrideFalloffExponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SkillActionPointLight.SkillActionPointLight_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASkillActionPointLight_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "ReceiveTick");

	Params::SkillActionPointLight_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SkillActionPointLight.SkillActionPointLight_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASkillActionPointLight_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SkillActionPointLight.SkillActionPointLight_C.Update__UpdateFunc
// (BlueprintEvent)

void ASkillActionPointLight_C::Update__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "Update__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SkillActionPointLight.SkillActionPointLight_C.Update__FinishedFunc
// (BlueprintEvent)

void ASkillActionPointLight_C::Update__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "Update__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SkillActionPointLight.SkillActionPointLight_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ASkillActionPointLight_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SkillActionPointLight.SkillActionPointLight_C.UpdateLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASkillActionPointLight_C::UpdateLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "UpdateLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SkillActionPointLight.SkillActionPointLight_C.GetGroupID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_GroupID                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASkillActionPointLight_C::GetGroupID(int32* Param_GroupID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "GetGroupID");

	Params::SkillActionPointLight_C_GetGroupID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_GroupID != nullptr)
		*Param_GroupID = Parms.Param_GroupID;
}


// Function SkillActionPointLight.SkillActionPointLight_C.CalcLightScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASkillActionPointLight_C::CalcLightScale(float* RetVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "CalcLightScale");

	Params::SkillActionPointLight_C_CalcLightScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetVal != nullptr)
		*RetVal = Parms.RetVal;
}


// Function SkillActionPointLight.SkillActionPointLight_C.SetLightParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FalloffExponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASkillActionPointLight_C::SetLightParam(const struct FLinearColor& Color, float Intensity, float Radius, float FalloffExponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "SetLightParam");

	Params::SkillActionPointLight_C_SetLightParam Parms{};

	Parms.Color = std::move(Color);
	Parms.Intensity = Intensity;
	Parms.Radius = Radius;
	Parms.FalloffExponent = FalloffExponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SkillActionPointLight.SkillActionPointLight_C.SetFollowSocket
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_CharaBaseAccessor_C>Param_FollowActor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Param_FollowSocketName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASkillActionPointLight_C::SetFollowSocket(TScriptInterface<class IBPI_CharaBaseAccessor_C> Param_FollowActor, class FName Param_FollowSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "SetFollowSocket");

	Params::SkillActionPointLight_C_SetFollowSocket Parms{};

	Parms.Param_FollowActor = Param_FollowActor;
	Parms.Param_FollowSocketName = Param_FollowSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SkillActionPointLight.SkillActionPointLight_C.SetPlayRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASkillActionPointLight_C::SetPlayRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillActionPointLight_C", "SetPlayRate");

	Params::SkillActionPointLight_C_SetPlayRate Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}

}

