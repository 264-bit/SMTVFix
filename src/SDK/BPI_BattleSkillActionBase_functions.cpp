#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BattleSkillActionBase

#include "Basic.hpp"

#include "BPI_BattleSkillActionBase_classes.hpp"
#include "BPI_BattleSkillActionBase_parameters.hpp"


namespace SDK
{

// Function BPI_BattleSkillActionBase.BPI_BattleSkillActionBase_C.BI_Com_ActorSetMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WaitCommandIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CHARA_MOTION_ID                       MotionID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WaitMotionFinished                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Com_Index                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleSkillActionBase_C::BI_Com_ActorSetMotion(int32 WaitCommandIndex, E_CHARA_MOTION_ID MotionID, bool WaitMotionFinished, int32* Com_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleSkillActionBase_C", "BI_Com_ActorSetMotion");

	Params::BPI_BattleSkillActionBase_C_BI_Com_ActorSetMotion Parms{};

	Parms.WaitCommandIndex = WaitCommandIndex;
	Parms.MotionID = MotionID;
	Parms.WaitMotionFinished = WaitMotionFinished;

	UObject::ProcessEvent(Func, &Parms);

	if (Com_Index != nullptr)
		*Com_Index = Parms.Com_Index;
}


// Function BPI_BattleSkillActionBase.BPI_BattleSkillActionBase_C.BI_Com_AttackMoveActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WaitCommandIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Com_Index                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleSkillActionBase_C::BI_Com_AttackMoveActor(int32 WaitCommandIndex, int32* Com_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleSkillActionBase_C", "BI_Com_AttackMoveActor");

	Params::BPI_BattleSkillActionBase_C_BI_Com_AttackMoveActor Parms{};

	Parms.WaitCommandIndex = WaitCommandIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Com_Index != nullptr)
		*Com_Index = Parms.Com_Index;
}


// Function BPI_BattleSkillActionBase.BPI_BattleSkillActionBase_C.BI_CallEvt_SkillPerformance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Step                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleSkillActionBase_C::BI_CallEvt_SkillPerformance(int32 Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleSkillActionBase_C", "BI_CallEvt_SkillPerformance");

	Params::BPI_BattleSkillActionBase_C_BI_CallEvt_SkillPerformance Parms{};

	Parms.Step = Step;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_BattleSkillActionBase.BPI_BattleSkillActionBase_C.BI_BlinkHitLight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleSkillActionBase_C::BI_BlinkHitLight(int32 PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleSkillActionBase_C", "BI_BlinkHitLight");

	Params::BPI_BattleSkillActionBase_C_BI_BlinkHitLight Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_BattleSkillActionBase.BPI_BattleSkillActionBase_C.BI_AddPointLight_Auto
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBTL_ADD_SKILL_LIGHT_TASK_DATA   SkillLightData                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_BattleSkillActionBase_C::BI_AddPointLight_Auto(const struct FBTL_ADD_SKILL_LIGHT_TASK_DATA& SkillLightData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleSkillActionBase_C", "BI_AddPointLight_Auto");

	Params::BPI_BattleSkillActionBase_C_BI_AddPointLight_Auto Parms{};

	Parms.SkillLightData = std::move(SkillLightData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_BattleSkillActionBase.BPI_BattleSkillActionBase_C.BI_BeginHitStop
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_BattleSkillActionBase_C::BI_BeginHitStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleSkillActionBase_C", "BI_BeginHitStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_BattleSkillActionBase.BPI_BattleSkillActionBase_C.BI_FirstSetting
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_BattleSkillActionBase_C::BI_FirstSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleSkillActionBase_C", "BI_FirstSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_BattleSkillActionBase.BPI_BattleSkillActionBase_C.BI_RegisterDecal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADevilSpawnDecal_C*               Decal                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleSkillActionBase_C::BI_RegisterDecal(class ADevilSpawnDecal_C* Decal, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleSkillActionBase_C", "BI_RegisterDecal");

	Params::BPI_BattleSkillActionBase_C_BI_RegisterDecal Parms{};

	Parms.Decal = Decal;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleSkillActionBase.BPI_BattleSkillActionBase_C.BI_RegisterDecalComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialAnimDecalComponent_C*    Decal                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleSkillActionBase_C::BI_RegisterDecalComponent(class UMaterialAnimDecalComponent_C* Decal, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleSkillActionBase_C", "BI_RegisterDecalComponent");

	Params::BPI_BattleSkillActionBase_C_BI_RegisterDecalComponent Parms{};

	Parms.Decal = Decal;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}

}

