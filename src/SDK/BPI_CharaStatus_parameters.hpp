#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CharaStatus

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_CharaStatus.BPI_CharaStatus_C.EndSwap
// 0x0008 (0x0008 - 0x0000)
struct BPI_CharaStatus_C_EndSwap final
{
public:
	int32                                         TopIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaStatus_C_EndSwap) == 0x000004, "Wrong alignment on BPI_CharaStatus_C_EndSwap");
static_assert(sizeof(BPI_CharaStatus_C_EndSwap) == 0x000008, "Wrong size on BPI_CharaStatus_C_EndSwap");
static_assert(offsetof(BPI_CharaStatus_C_EndSwap, TopIndex) == 0x000000, "Member 'BPI_CharaStatus_C_EndSwap::TopIndex' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_EndSwap, Dummy) == 0x000004, "Member 'BPI_CharaStatus_C_EndSwap::Dummy' has a wrong offset!");

// Function BPI_CharaStatus.BPI_CharaStatus_C.IsEndSwapSlide
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharaStatus_C_IsEndSwapSlide final
{
public:
	bool                                          End;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaStatus_C_IsEndSwapSlide) == 0x000001, "Wrong alignment on BPI_CharaStatus_C_IsEndSwapSlide");
static_assert(sizeof(BPI_CharaStatus_C_IsEndSwapSlide) == 0x000001, "Wrong size on BPI_CharaStatus_C_IsEndSwapSlide");
static_assert(offsetof(BPI_CharaStatus_C_IsEndSwapSlide, End) == 0x000000, "Member 'BPI_CharaStatus_C_IsEndSwapSlide::End' has a wrong offset!");

// Function BPI_CharaStatus.BPI_CharaStatus_C.SwapRightSlot
// 0x000C (0x000C - 0x0000)
struct BPI_CharaStatus_C_SwapRightSlot final
{
public:
	int32                                         HoldSlot;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorSlot;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaStatus_C_SwapRightSlot) == 0x000004, "Wrong alignment on BPI_CharaStatus_C_SwapRightSlot");
static_assert(sizeof(BPI_CharaStatus_C_SwapRightSlot) == 0x00000C, "Wrong size on BPI_CharaStatus_C_SwapRightSlot");
static_assert(offsetof(BPI_CharaStatus_C_SwapRightSlot, HoldSlot) == 0x000000, "Member 'BPI_CharaStatus_C_SwapRightSlot::HoldSlot' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_SwapRightSlot, CursorSlot) == 0x000004, "Member 'BPI_CharaStatus_C_SwapRightSlot::CursorSlot' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_SwapRightSlot, Dummy) == 0x000008, "Member 'BPI_CharaStatus_C_SwapRightSlot::Dummy' has a wrong offset!");

// Function BPI_CharaStatus.BPI_CharaStatus_C.UpdateBiography
// 0x0008 (0x0008 - 0x0000)
struct BPI_CharaStatus_C_UpdateBiography final
{
public:
	int32                                         Offset;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewOffset;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CharaStatus_C_UpdateBiography) == 0x000004, "Wrong alignment on BPI_CharaStatus_C_UpdateBiography");
static_assert(sizeof(BPI_CharaStatus_C_UpdateBiography) == 0x000008, "Wrong size on BPI_CharaStatus_C_UpdateBiography");
static_assert(offsetof(BPI_CharaStatus_C_UpdateBiography, Offset) == 0x000000, "Member 'BPI_CharaStatus_C_UpdateBiography::Offset' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_UpdateBiography, NewOffset) == 0x000004, "Member 'BPI_CharaStatus_C_UpdateBiography::NewOffset' has a wrong offset!");

// Function BPI_CharaStatus.BPI_CharaStatus_C.UpdateConditionCursor
// 0x0008 (0x0008 - 0x0000)
struct BPI_CharaStatus_C_UpdateConditionCursor final
{
public:
	int32                                         TopIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaStatus_C_UpdateConditionCursor) == 0x000004, "Wrong alignment on BPI_CharaStatus_C_UpdateConditionCursor");
static_assert(sizeof(BPI_CharaStatus_C_UpdateConditionCursor) == 0x000008, "Wrong size on BPI_CharaStatus_C_UpdateConditionCursor");
static_assert(offsetof(BPI_CharaStatus_C_UpdateConditionCursor, TopIndex) == 0x000000, "Member 'BPI_CharaStatus_C_UpdateConditionCursor::TopIndex' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_UpdateConditionCursor, Dummy) == 0x000004, "Member 'BPI_CharaStatus_C_UpdateConditionCursor::Dummy' has a wrong offset!");

// Function BPI_CharaStatus.BPI_CharaStatus_C.UpdateSkillSwap
// 0x0008 (0x0008 - 0x0000)
struct BPI_CharaStatus_C_UpdateSkillSwap final
{
public:
	int32                                         TopIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHolding;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaStatus_C_UpdateSkillSwap) == 0x000004, "Wrong alignment on BPI_CharaStatus_C_UpdateSkillSwap");
static_assert(sizeof(BPI_CharaStatus_C_UpdateSkillSwap) == 0x000008, "Wrong size on BPI_CharaStatus_C_UpdateSkillSwap");
static_assert(offsetof(BPI_CharaStatus_C_UpdateSkillSwap, TopIndex) == 0x000000, "Member 'BPI_CharaStatus_C_UpdateSkillSwap::TopIndex' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_UpdateSkillSwap, IsHolding) == 0x000004, "Member 'BPI_CharaStatus_C_UpdateSkillSwap::IsHolding' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_UpdateSkillSwap, Dummy) == 0x000005, "Member 'BPI_CharaStatus_C_UpdateSkillSwap::Dummy' has a wrong offset!");

// Function BPI_CharaStatus.BPI_CharaStatus_C.ChangePage
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharaStatus_C_ChangePage final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaStatus_C_ChangePage) == 0x000001, "Wrong alignment on BPI_CharaStatus_C_ChangePage");
static_assert(sizeof(BPI_CharaStatus_C_ChangePage) == 0x000001, "Wrong size on BPI_CharaStatus_C_ChangePage");
static_assert(offsetof(BPI_CharaStatus_C_ChangePage, Dummy) == 0x000000, "Member 'BPI_CharaStatus_C_ChangePage::Dummy' has a wrong offset!");

// Function BPI_CharaStatus.BPI_CharaStatus_C.CloseStatus_Common
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharaStatus_C_CloseStatus_Common final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaStatus_C_CloseStatus_Common) == 0x000001, "Wrong alignment on BPI_CharaStatus_C_CloseStatus_Common");
static_assert(sizeof(BPI_CharaStatus_C_CloseStatus_Common) == 0x000001, "Wrong size on BPI_CharaStatus_C_CloseStatus_Common");
static_assert(offsetof(BPI_CharaStatus_C_CloseStatus_Common, Dummy) == 0x000000, "Member 'BPI_CharaStatus_C_CloseStatus_Common::Dummy' has a wrong offset!");

// Function BPI_CharaStatus.BPI_CharaStatus_C.HideUI_Common
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharaStatus_C_HideUI_Common final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaStatus_C_HideUI_Common) == 0x000001, "Wrong alignment on BPI_CharaStatus_C_HideUI_Common");
static_assert(sizeof(BPI_CharaStatus_C_HideUI_Common) == 0x000001, "Wrong size on BPI_CharaStatus_C_HideUI_Common");
static_assert(offsetof(BPI_CharaStatus_C_HideUI_Common, Dummy) == 0x000000, "Member 'BPI_CharaStatus_C_HideUI_Common::Dummy' has a wrong offset!");

// Function BPI_CharaStatus.BPI_CharaStatus_C.ChangeChara_Common
// 0x0008 (0x0008 - 0x0000)
struct BPI_CharaStatus_C_ChangeChara_Common final
{
public:
	int32                                         MoveLR;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLRAnim;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaStatus_C_ChangeChara_Common) == 0x000004, "Wrong alignment on BPI_CharaStatus_C_ChangeChara_Common");
static_assert(sizeof(BPI_CharaStatus_C_ChangeChara_Common) == 0x000008, "Wrong size on BPI_CharaStatus_C_ChangeChara_Common");
static_assert(offsetof(BPI_CharaStatus_C_ChangeChara_Common, MoveLR) == 0x000000, "Member 'BPI_CharaStatus_C_ChangeChara_Common::MoveLR' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_ChangeChara_Common, UseLRAnim) == 0x000004, "Member 'BPI_CharaStatus_C_ChangeChara_Common::UseLRAnim' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_ChangeChara_Common, Dummy) == 0x000005, "Member 'BPI_CharaStatus_C_ChangeChara_Common::Dummy' has a wrong offset!");

// Function BPI_CharaStatus.BPI_CharaStatus_C.OpenStatus_Common
// 0x0010 (0x0010 - 0x0000)
struct BPI_CharaStatus_C_OpenStatus_Common final
{
public:
	const class UUIStatusCtrlDataObjBase*         StatusCtrlObj;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithTitle;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharaStatus_C_OpenStatus_Common) == 0x000008, "Wrong alignment on BPI_CharaStatus_C_OpenStatus_Common");
static_assert(sizeof(BPI_CharaStatus_C_OpenStatus_Common) == 0x000010, "Wrong size on BPI_CharaStatus_C_OpenStatus_Common");
static_assert(offsetof(BPI_CharaStatus_C_OpenStatus_Common, StatusCtrlObj) == 0x000000, "Member 'BPI_CharaStatus_C_OpenStatus_Common::StatusCtrlObj' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_OpenStatus_Common, WithTitle) == 0x000008, "Member 'BPI_CharaStatus_C_OpenStatus_Common::WithTitle' has a wrong offset!");
static_assert(offsetof(BPI_CharaStatus_C_OpenStatus_Common, Dummy) == 0x000009, "Member 'BPI_CharaStatus_C_OpenStatus_Common::Dummy' has a wrong offset!");

}

