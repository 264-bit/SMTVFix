#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BattleMain

#include "Basic.hpp"

#include "BPI_BattleMain_classes.hpp"
#include "BPI_BattleMain_parameters.hpp"


namespace SDK
{

// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetPartySystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleParty_C>Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetPartySystem(TScriptInterface<class IBPI_BattleParty_C>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetPartySystem");

	Params::BPI_BattleMain_C_BI_GetPartySystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_BattleLog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_BattleLog(const class FString& String, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_BattleLog");

	Params::BPI_BattleMain_C_BI_BattleLog Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_IsBattleLogOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_IsBattleLogOn(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_IsBattleLogOn");

	Params::BPI_BattleMain_C_BI_IsBattleLogOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetTurnActValidNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetTurnActValidNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetTurnActValidNum");

	Params::BPI_BattleMain_C_BI_GetTurnActValidNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetBattleCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetBattleCamera(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetBattleCamera");

	Params::BPI_BattleMain_C_BI_SetBattleCamera Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetBattleCameraTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetBattleCameraTransform(struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetBattleCameraTransform");

	Params::BPI_BattleMain_C_BI_GetBattleCameraTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetBattleCameraFieldOfView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetBattleCameraFieldOfView(float* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetBattleCameraFieldOfView");

	Params::BPI_BattleMain_C_BI_GetBattleCameraFieldOfView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TurnDrawWidgetSetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_TurnDrawWidgetSetVisibility(ESlateVisibility Value, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TurnDrawWidgetSetVisibility");

	Params::BPI_BattleMain_C_BI_TurnDrawWidgetSetVisibility Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_PartyPanelSetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_PartyPanelSetVisibility(ESlateVisibility Value, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_PartyPanelSetVisibility");

	Params::BPI_BattleMain_C_BI_PartyPanelSetVisibility Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UICommandStartSeq
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCounterActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_BTL_UI_COMM_STEP                      Step                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TopIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_WIDGET_PRIO                           Prio                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCameraNoMove                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FSkillCriticalValueOne>   SettleCriticalInfo                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UICommandStartSeq(int32 PartyIndex, bool IsCounterActor, E_BTL_UI_COMM_STEP Step, int32 CallIndex, int32 TopIndex, E_WIDGET_PRIO Prio, bool IsCameraNoMove, TArray<struct FSkillCriticalValueOne>& SettleCriticalInfo, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UICommandStartSeq");

	Params::BPI_BattleMain_C_BI_UICommandStartSeq Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.IsCounterActor = IsCounterActor;
	Parms.Step = Step;
	Parms.CallIndex = CallIndex;
	Parms.TopIndex = TopIndex;
	Parms.Prio = Prio;
	Parms.IsCameraNoMove = IsCameraNoMove;
	Parms.SettleCriticalInfo = std::move(SettleCriticalInfo);

	UObject::ProcessEvent(Func, &Parms);

	SettleCriticalInfo = std::move(Parms.SettleCriticalInfo);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UICommandIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UICommandIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UICommandIsFinished");

	Params::BPI_BattleMain_C_BI_UICommandIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UICommandGetResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlCommand                      RetValue                                               (Parm, OutParm)

void IBPI_BattleMain_C::BI_UICommandGetResult(struct FBtlCommand* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UICommandGetResult");

	Params::BPI_BattleMain_C_BI_UICommandGetResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UICommandEndSeq
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UICommandEndSeq(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UICommandEndSeq");

	Params::BPI_BattleMain_C_BI_UICommandEndSeq Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UICommandRemove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UICommandRemove(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UICommandRemove");

	Params::BPI_BattleMain_C_BI_UICommandRemove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UICommandGetSkillMenuCursor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CursorIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TopIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_UICommandGetSkillMenuCursor(int32* CursorIndex, int32* TopIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UICommandGetSkillMenuCursor");

	Params::BPI_BattleMain_C_BI_UICommandGetSkillMenuCursor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CursorIndex != nullptr)
		*CursorIndex = Parms.CursorIndex;

	if (TopIndex != nullptr)
		*TopIndex = Parms.TopIndex;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UICommandGetItemMenuCursor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CursorIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TopIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_UICommandGetItemMenuCursor(int32* CursorIndex, int32* TopIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UICommandGetItemMenuCursor");

	Params::BPI_BattleMain_C_BI_UICommandGetItemMenuCursor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CursorIndex != nullptr)
		*CursorIndex = Parms.CursorIndex;

	if (TopIndex != nullptr)
		*TopIndex = Parms.TopIndex;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetCalcMakeBstArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InBst                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<E_BAD_STATUS>                    RetValue                                               (Parm, OutParm)

void IBPI_BattleMain_C::BI_GetCalcMakeBstArray(int32 InBst, TArray<E_BAD_STATUS>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetCalcMakeBstArray");

	Params::BPI_BattleMain_C_BI_GetCalcMakeBstArray Parms{};

	Parms.InBst = InBst;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetBattleCameraHome
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetBattleCameraHome(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetBattleCameraHome");

	Params::BPI_BattleMain_C_BI_SetBattleCameraHome Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetBattleCameraSkillCam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetBattleCameraSkillCam(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetBattleCameraSkillCam");

	Params::BPI_BattleMain_C_BI_SetBattleCameraSkillCam Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetPartyPanelEmpty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetPartyPanelEmpty(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetPartyPanelEmpty");

	Params::BPI_BattleMain_C_BI_SetPartyPanelEmpty Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UIInfomationShow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UIInfomationShow(int32 SkillId, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UIInfomationShow");

	Params::BPI_BattleMain_C_BI_UIInfomationShow Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UIInfomationHide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UIInfomationHide(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UIInfomationHide");

	Params::BPI_BattleMain_C_BI_UIInfomationHide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UIInfomationEndSeq
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UIInfomationEndSeq(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UIInfomationEndSeq");

	Params::BPI_BattleMain_C_BI_UIInfomationEndSeq Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UIInfomationIsAnimationExcuting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UIInfomationIsAnimationExcuting(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UIInfomationIsAnimationExcuting");

	Params::BPI_BattleMain_C_BI_UIInfomationIsAnimationExcuting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_CamFactorySpawnRailActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_CAM_TYPE                          CamType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_RailActor_C*                  RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_CamFactorySpawnRailActor(E_BTL_CAM_TYPE CamType, int32 PartyIndex, class ABP_RailActor_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_CamFactorySpawnRailActor");

	Params::BPI_BattleMain_C_BI_CamFactorySpawnRailActor Parms{};

	Parms.CamType = CamType;
	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_IsBattleCameraInterp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_IsBattleCameraInterp(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_IsBattleCameraInterp");

	Params::BPI_BattleMain_C_BI_IsBattleCameraInterp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_IsBattleCameraRailArrived
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_IsBattleCameraRailArrived(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_IsBattleCameraRailArrived");

	Params::BPI_BattleMain_C_BI_IsBattleCameraRailArrived Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetBattleCameraTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   blendSpeed                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetBattleCameraTarget(const struct FVector& Target, float blendSpeed, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetBattleCameraTarget");

	Params::BPI_BattleMain_C_BI_SetBattleCameraTarget Parms{};

	Parms.Target = std::move(Target);
	Parms.blendSpeed = blendSpeed;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UITurnDrawIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UITurnDrawIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UITurnDrawIsFinished");

	Params::BPI_BattleMain_C_BI_UITurnDrawIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetBattleCameraFovy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Fovy                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Blend                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetBattleCameraFovy(float Fovy, float Blend, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetBattleCameraFovy");

	Params::BPI_BattleMain_C_BI_SetBattleCameraFovy Parms{};

	Parms.Fovy = Fovy;
	Parms.Blend = Blend;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_CamFactorySpawnRailActorSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TargetPartyIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_SKILL_CAM_TYPE                    Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   ActorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsConsiderActorLocation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsOverrideHokanSpeed                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHokanSpeedMax                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DoNotResetUnitAveLocation                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_CamFactorySpawnRailActorSkill(int32 TargetPartyIndex, E_BTL_SKILL_CAM_TYPE Type, const class FString& Param_Name, int32 ActorIndex, bool IsConsiderActorLocation, bool IsOverrideHokanSpeed, bool IsHokanSpeedMax, bool DoNotResetUnitAveLocation, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_CamFactorySpawnRailActorSkill");

	Params::BPI_BattleMain_C_BI_CamFactorySpawnRailActorSkill Parms{};

	Parms.TargetPartyIndex = TargetPartyIndex;
	Parms.Type = Type;
	Parms.Param_Name = std::move(Param_Name);
	Parms.ActorIndex = ActorIndex;
	Parms.IsConsiderActorLocation = IsConsiderActorLocation;
	Parms.IsOverrideHokanSpeed = IsOverrideHokanSpeed;
	Parms.IsHokanSpeedMax = IsHokanSpeedMax;
	Parms.DoNotResetUnitAveLocation = DoNotResetUnitAveLocation;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetBattleCameraShake
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           InShakeClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetBattleCameraShake(class UClass* InShakeClass, bool Sw, float Scale, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetBattleCameraShake");

	Params::BPI_BattleMain_C_BI_SetBattleCameraShake Parms{};

	Parms.InShakeClass = InShakeClass;
	Parms.Sw = Sw;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_PartyPanelCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_PANEL_CTRL                        Ctrl                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Value2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_PartyPanelCtrl(int32 PartyIndex, E_BTL_PANEL_CTRL Ctrl, int32 Value, bool Value2, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_PartyPanelCtrl");

	Params::BPI_BattleMain_C_BI_PartyPanelCtrl Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Ctrl = Ctrl;
	Parms.Value = Value;
	Parms.Value2 = Value2;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_InfoMessShowBySkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SrcActorName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           DstActorName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsMaster                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   OverwriteID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_InfoMessShowBySkill(int32 SkillId, const class FString& SrcActorName, const class FString& DstActorName, bool IsMaster, int32 OverwriteID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_InfoMessShowBySkill");

	Params::BPI_BattleMain_C_BI_InfoMessShowBySkill Parms{};

	Parms.SkillId = SkillId;
	Parms.SrcActorName = std::move(SrcActorName);
	Parms.DstActorName = std::move(DstActorName);
	Parms.IsMaster = IsMaster;
	Parms.OverwriteID = OverwriteID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_InfoMessExtAct
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_EXTRA_ACTION                      MessageIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   ProgramStr                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_InfoMessExtAct(E_BTL_EXTRA_ACTION MessageIndex, TArray<class FString>& ProgramStr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_InfoMessExtAct");

	Params::BPI_BattleMain_C_BI_InfoMessExtAct Parms{};

	Parms.MessageIndex = MessageIndex;
	Parms.ProgramStr = std::move(ProgramStr);

	UObject::ProcessEvent(Func, &Parms);

	ProgramStr = std::move(Parms.ProgramStr);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_InfoMessHide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_InfoMessHide(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_InfoMessHide");

	Params::BPI_BattleMain_C_BI_InfoMessHide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_PartyPanelUpDataChara_BtlPartyData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlParty                        PartyData                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    InOptionCheck                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_PartyPanelUpDataChara_BtlPartyData(const struct FBtlParty& PartyData, bool InOptionCheck, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_PartyPanelUpDataChara_BtlPartyData");

	Params::BPI_BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData Parms{};

	Parms.PartyData = std::move(PartyData);
	Parms.InOptionCheck = InOptionCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetOriginTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetOriginTransform(struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetOriginTransform");

	Params::BPI_BattleMain_C_BI_GetOriginTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TaskFactoryMakeTalkPartyInTask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           ParentName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_TaskFactoryMakeTalkPartyInTask(TArray<int32>& WaitTaskList, const class FString& ParentName, int32 PartyIndex, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TaskFactoryMakeTalkPartyInTask");

	Params::BPI_BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask Parms{};

	Parms.WaitTaskList = std::move(WaitTaskList);
	Parms.ParentName = std::move(ParentName);
	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskList = std::move(Parms.WaitTaskList);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetTaskFactoryParentNameTaskCnt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ParentName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetTaskFactoryParentNameTaskCnt(const class FString& ParentName, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetTaskFactoryParentNameTaskCnt");

	Params::BPI_BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt Parms{};

	Parms.ParentName = std::move(ParentName);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.DestroyBattle
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_BattleMain_C::DestroyBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "DestroyBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_StockSelectSeqStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_PTYPNL_TYPE                       Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_StockSelectSeqStart(E_BTL_PTYPNL_TYPE Type, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_StockSelectSeqStart");

	Params::BPI_BattleMain_C_BI_StockSelectSeqStart Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_StockSelectIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_StockSelectIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_StockSelectIsFinished");

	Params::BPI_BattleMain_C_BI_StockSelectIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_StockSelectIsCancel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_StockSelectIsCancel(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_StockSelectIsCancel");

	Params::BPI_BattleMain_C_BI_StockSelectIsCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_StockSelectGetResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_StockSelectGetResult(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_StockSelectGetResult");

	Params::BPI_BattleMain_C_BI_StockSelectGetResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetPaticleManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleParticleManager_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetPaticleManager(TScriptInterface<class IBPI_BattleParticleManager_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetPaticleManager");

	Params::BPI_BattleMain_C_BI_GetPaticleManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TaskUnitModelAdd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TaskIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_CharaBaseAccessor_C>InUnit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_TaskUnitModelAdd(int32 TaskIndex, TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TaskUnitModelAdd");

	Params::BPI_BattleMain_C_BI_TaskUnitModelAdd Parms{};

	Parms.TaskIndex = TaskIndex;
	Parms.InUnit = InUnit;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TaskUnitModelIsExist
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TaskIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_TaskUnitModelIsExist(int32 TaskIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TaskUnitModelIsExist");

	Params::BPI_BattleMain_C_BI_TaskUnitModelIsExist Parms{};

	Parms.TaskIndex = TaskIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TaskUnitModelGet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TaskIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_CharaBaseAccessor_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_TaskUnitModelGet(int32 TaskIndex, TScriptInterface<class IBPI_CharaBaseAccessor_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TaskUnitModelGet");

	Params::BPI_BattleMain_C_BI_TaskUnitModelGet Parms{};

	Parms.TaskIndex = TaskIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TaskUnitModelDelete
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PecID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_TaskUnitModelDelete(int32 PecID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TaskUnitModelDelete");

	Params::BPI_BattleMain_C_BI_TaskUnitModelDelete Parms{};

	Parms.PecID = PecID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SummonSelectSeqStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SummonSelectSeqStart(int32 PartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SummonSelectSeqStart");

	Params::BPI_BattleMain_C_BI_SummonSelectSeqStart Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SummonSelectIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SummonSelectIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SummonSelectIsFinished");

	Params::BPI_BattleMain_C_BI_SummonSelectIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SummonSelectIsCancel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SummonSelectIsCancel(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SummonSelectIsCancel");

	Params::BPI_BattleMain_C_BI_SummonSelectIsCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SummonSelectGetResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           SrcList                                                (Parm, OutParm)
// TArray<int32>                           DstList                                                (Parm, OutParm)

void IBPI_BattleMain_C::BI_SummonSelectGetResult(TArray<int32>* SrcList, TArray<int32>* DstList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SummonSelectGetResult");

	Params::BPI_BattleMain_C_BI_SummonSelectGetResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SrcList != nullptr)
		*SrcList = std::move(Parms.SrcList);

	if (DstList != nullptr)
		*DstList = std::move(Parms.DstList);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SummonSelectClose
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SummonSelectClose(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SummonSelectClose");

	Params::BPI_BattleMain_C_BI_SummonSelectClose Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_StockSelectClose
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_StockSelectClose(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_StockSelectClose");

	Params::BPI_BattleMain_C_BI_StockSelectClose Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TaskFactoryAddCamRailTask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WiatTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           ParentName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_CAM_TYPE                          Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InterpWait                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           ManualName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    StopWait                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DeltaWait                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_TaskFactoryAddCamRailTask(TArray<int32>& WiatTaskList, const class FString& ParentName, int32 PartyIndex, E_BTL_CAM_TYPE Type, bool InterpWait, const class FString& ManualName, bool StopWait, float DeltaWait, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TaskFactoryAddCamRailTask");

	Params::BPI_BattleMain_C_BI_TaskFactoryAddCamRailTask Parms{};

	Parms.WiatTaskList = std::move(WiatTaskList);
	Parms.ParentName = std::move(ParentName);
	Parms.PartyIndex = PartyIndex;
	Parms.Type = Type;
	Parms.InterpWait = InterpWait;
	Parms.ManualName = std::move(ManualName);
	Parms.StopWait = StopWait;
	Parms.DeltaWait = DeltaWait;

	UObject::ProcessEvent(Func, &Parms);

	WiatTaskList = std::move(Parms.WiatTaskList);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_BattleIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_BattleIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_BattleIsFinished");

	Params::BPI_BattleMain_C_BI_BattleIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TaskUnitManagerAddReserveDestroy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_CharaBaseAccessor_C>InUnit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_TaskUnitManagerAddReserveDestroy(TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TaskUnitManagerAddReserveDestroy");

	Params::BPI_BattleMain_C_BI_TaskUnitManagerAddReserveDestroy Parms{};

	Parms.InUnit = InUnit;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetTaskFactory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleTaskFactory_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetTaskFactory(TScriptInterface<class IBPI_BattleTaskFactory_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetTaskFactory");

	Params::BPI_BattleMain_C_BI_GetTaskFactory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetRadialForce
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URadialForceComponent*            RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetRadialForce(class URadialForceComponent** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetRadialForce");

	Params::BPI_BattleMain_C_BI_GetRadialForce Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_EffectManagerGetResidentAssetByName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_EffectManagerGetResidentAssetByName(class FName Param_Name, class UParticleSystem** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_EffectManagerGetResidentAssetByName");

	Params::BPI_BattleMain_C_BI_EffectManagerGetResidentAssetByName Parms{};

	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetPostProcessCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattlePostProcessCtrl_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetPostProcessCtrl(TScriptInterface<class IBPI_BattlePostProcessCtrl_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetPostProcessCtrl");

	Params::BPI_BattleMain_C_BI_GetPostProcessCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetRandom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetRandom(int32 Max, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetRandom");

	Params::BPI_BattleMain_C_BI_GetRandom Parms{};

	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetRandom2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetRandom2(int32 Min, int32 Max, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetRandom2");

	Params::BPI_BattleMain_C_BI_GetRandom2 Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetRandomF
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetRandomF(float Max, float* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetRandomF");

	Params::BPI_BattleMain_C_BI_GetRandomF Parms{};

	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetRandomF2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetRandomF2(float Min, float Max, float* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetRandomF2");

	Params::BPI_BattleMain_C_BI_GetRandomF2 Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_BattleCameraIsNoMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_BattleCameraIsNoMove(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_BattleCameraIsNoMove");

	Params::BPI_BattleMain_C_BI_BattleCameraIsNoMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_AddResultDataForTalk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlParty                        Party                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_AddResultDataForTalk(const struct FBtlParty& Party, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_AddResultDataForTalk");

	Params::BPI_BattleMain_C_BI_AddResultDataForTalk Parms{};

	Parms.Party = std::move(Party);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetBattleSoundManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleSoundManager_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetBattleSoundManager(TScriptInterface<class IBPI_BattleSoundManager_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetBattleSoundManager");

	Params::BPI_BattleMain_C_BI_GetBattleSoundManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetBattleEventUnitList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>>RetValue                                               (Parm, OutParm)

void IBPI_BattleMain_C::BI_GetBattleEventUnitList(TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetBattleEventUnitList");

	Params::BPI_BattleMain_C_BI_GetBattleEventUnitList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_BattleCameraCurrentForce
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_BattleCameraCurrentForce(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_BattleCameraCurrentForce");

	Params::BPI_BattleMain_C_BI_BattleCameraCurrentForce Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI EffectManagerGetResidentSkillActionEffectByName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSkillActionEffect               RetVal                                                 (Parm, OutParm)

void IBPI_BattleMain_C::BI_EffectManagerGetResidentSkillActionEffectByName(class FName Param_Name, struct FSkillActionEffect* RetVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI EffectManagerGetResidentSkillActionEffectByName");

	Params::BPI_BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName Parms{};

	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);

	if (RetVal != nullptr)
		*RetVal = std::move(Parms.RetVal);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetSaveCommandPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_UI_COMM_STEP                      Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetSaveCommandPage(E_BTL_UI_COMM_STEP Command, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetSaveCommandPage");

	Params::BPI_BattleMain_C_BI_SetSaveCommandPage Parms{};

	Parms.Command = Command;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetSaveCommandPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_UI_COMM_STEP                      RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetSaveCommandPage(E_BTL_UI_COMM_STEP* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetSaveCommandPage");

	Params::BPI_BattleMain_C_BI_GetSaveCommandPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_ClearSaveCommandPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_ClearSaveCommandPage(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_ClearSaveCommandPage");

	Params::BPI_BattleMain_C_BI_ClearSaveCommandPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_InfoMessShowByCommonMess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MessID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_InfoMessShowByCommonMess(int32 MessID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_InfoMessShowByCommonMess");

	Params::BPI_BattleMain_C_BI_InfoMessShowByCommonMess Parms{};

	Parms.MessID = MessID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_IsHugeBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   DevID                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_IsHugeBattle(bool* RetValue, int32* DevID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_IsHugeBattle");

	Params::BPI_BattleMain_C_BI_IsHugeBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;

	if (DevID != nullptr)
		*DevID = Parms.DevID;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_EncountIsNoDeadEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_EncountIsNoDeadEffect(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_EncountIsNoDeadEffect");

	Params::BPI_BattleMain_C_BI_EncountIsNoDeadEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetMapOutChara
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<E_BTL_CHAR_TYPE, TScriptInterface<class IBPI_CharaBaseAccessor_C>>RetValue                                               (Parm, OutParm)

void IBPI_BattleMain_C::BI_GetMapOutChara(TMap<E_BTL_CHAR_TYPE, TScriptInterface<class IBPI_CharaBaseAccessor_C>>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetMapOutChara");

	Params::BPI_BattleMain_C_BI_GetMapOutChara Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetBattlePlayRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetBattlePlayRate(float PlayRate, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetBattlePlayRate");

	Params::BPI_BattleMain_C_BI_SetBattlePlayRate Parms{};

	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetBattlePlayRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetBattlePlayRate(float* PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetBattlePlayRate");

	Params::BPI_BattleMain_C_BI_GetBattlePlayRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayRate != nullptr)
		*PlayRate = Parms.PlayRate;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_DestroyBattleCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_DestroyBattleCamera(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_DestroyBattleCamera");

	Params::BPI_BattleMain_C_BI_DestroyBattleCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UICommandGetMenuStep
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_UI_COMM_STEP                      RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_UICommandGetMenuStep(E_BTL_UI_COMM_STEP* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UICommandGetMenuStep");

	Params::BPI_BattleMain_C_BI_UICommandGetMenuStep Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetApplyResultData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlApllyResultData              RetValue                                               (Parm, OutParm)

void IBPI_BattleMain_C::BI_GetApplyResultData(struct FBtlApllyResultData* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetApplyResultData");

	Params::BPI_BattleMain_C_BI_GetApplyResultData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetFinishedState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_FINISHED_STATE                    State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SaveSlot                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetFinishedState(E_BTL_FINISHED_STATE* State, int32* SaveSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetFinishedState");

	Params::BPI_BattleMain_C_BI_GetFinishedState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;

	if (SaveSlot != nullptr)
		*SaveSlot = Parms.SaveSlot;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI EffectManagerGetResidentBstEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CHARA_BAD_STATUS_APPEAR               Apper                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBattleResidentEffect            RetValue                                               (Parm, OutParm, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_EffectManagerGetResidentBstEffect(E_BAD_STATUS bst, E_CHARA_BAD_STATUS_APPEAR Apper, struct FBattleResidentEffect* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI EffectManagerGetResidentBstEffect");

	Params::BPI_BattleMain_C_BI_EffectManagerGetResidentBstEffect Parms{};

	Parms.bst = bst;
	Parms.Apper = Apper;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TaskUnitManagerAddKeepRefUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_CharaBaseAccessor_C>InUnit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_TaskUnitManagerAddKeepRefUnit(TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TaskUnitManagerAddKeepRefUnit");

	Params::BPI_BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit Parms{};

	Parms.InUnit = InUnit;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_DebugTimeStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_DebugTimeStart(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_DebugTimeStart");

	Params::BPI_BattleMain_C_BI_DebugTimeStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_DebugTimeEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_DebugTimeEnd(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_DebugTimeEnd");

	Params::BPI_BattleMain_C_BI_DebugTimeEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_AutoSeqPause
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pause                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_AutoSeqPause(bool Pause, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_AutoSeqPause");

	Params::BPI_BattleMain_C_BI_AutoSeqPause Parms{};

	Parms.Pause = Pause;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_DebugJsonLogTalkSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_DebugJsonLogTalkSuccess(int32 DevilID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_DebugJsonLogTalkSuccess");

	Params::BPI_BattleMain_C_BI_DebugJsonLogTalkSuccess Parms{};

	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TargetSelectPause
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPause                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_TargetSelectPause(bool IsPause, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TargetSelectPause");

	Params::BPI_BattleMain_C_BI_TargetSelectPause Parms{};

	Parms.IsPause = IsPause;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetPartyUtilInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_PTUtilInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetPartyUtilInterface(TScriptInterface<class IBPI_PTUtilInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetPartyUtilInterface");

	Params::BPI_BattleMain_C_BI_GetPartyUtilInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetPartyMemInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_PTMemDataInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetPartyMemInterface(TScriptInterface<class IBPI_PTMemDataInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetPartyMemInterface");

	Params::BPI_BattleMain_C_BI_GetPartyMemInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetMainInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_MainInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetMainInterface(TScriptInterface<class IBPI_MainInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetMainInterface");

	Params::BPI_BattleMain_C_BI_GetMainInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetPartyFlagInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_PTFlagInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetPartyFlagInterface(TScriptInterface<class IBPI_PTFlagInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetPartyFlagInterface");

	Params::BPI_BattleMain_C_BI_GetPartyFlagInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_StartBlendOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_StartBlendOverride(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_StartBlendOverride");

	Params::BPI_BattleMain_C_BI_StartBlendOverride Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_EndBlendOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_EndBlendOverride(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_EndBlendOverride");

	Params::BPI_BattleMain_C_BI_EndBlendOverride Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_StartFovyOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_StartFovyOverride(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_StartFovyOverride");

	Params::BPI_BattleMain_C_BI_StartFovyOverride Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_EndFovyOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_EndFovyOverride(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_EndFovyOverride");

	Params::BPI_BattleMain_C_BI_EndFovyOverride Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetRailCam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_RailActor_C*                  SplineActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EyeTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EnableCharaDitherCtrl                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetRailCam(class ABP_RailActor_C* SplineActor, const struct FVector& EyeTarget, class AActor* TargetActor, bool EnableCharaDitherCtrl, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetRailCam");

	Params::BPI_BattleMain_C_BI_SetRailCam Parms{};

	Parms.SplineActor = SplineActor;
	Parms.EyeTarget = std::move(EyeTarget);
	Parms.TargetActor = TargetActor;
	Parms.EnableCharaDitherCtrl = EnableCharaDitherCtrl;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TargetSelectGetCurrentTargetType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SKILL_TARGET                          NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_TargetSelectGetCurrentTargetType(E_SKILL_TARGET* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TargetSelectGetCurrentTargetType");

	Params::BPI_BattleMain_C_BI_TargetSelectGetCurrentTargetType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetBattleTargetSelect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleTargetSelect_C>BPI                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetBattleTargetSelect(TScriptInterface<class IBPI_BattleTargetSelect_C>* BPI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetBattleTargetSelect");

	Params::BPI_BattleMain_C_BI_GetBattleTargetSelect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BPI != nullptr)
		*BPI = Parms.BPI;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TargetSelectStartSelect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPartyIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCounter                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsInvTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCursorEnable                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_TargetSelectStartSelect(int32 InPartyIndex, bool IsCounter, bool IsInvTarget, bool IsCursorEnable, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TargetSelectStartSelect");

	Params::BPI_BattleMain_C_BI_TargetSelectStartSelect Parms{};

	Parms.InPartyIndex = InPartyIndex;
	Parms.IsCounter = IsCounter;
	Parms.IsInvTarget = IsInvTarget;
	Parms.IsCursorEnable = IsCursorEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_TargetSelectSetTargetAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Inside                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_TargetSelectSetTargetAll(E_BTL_SIDE Inside, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_TargetSelectSetTargetAll");

	Params::BPI_BattleMain_C_BI_TargetSelectSetTargetAll Parms{};

	Parms.Inside = Inside;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetPTUnitIniterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_PTBPInterface_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetPTUnitIniterface(TScriptInterface<class IBPI_PTBPInterface_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetPTUnitIniterface");

	Params::BPI_BattleMain_C_BI_GetPTUnitIniterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetPartyBadStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_PTBadStatusInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetPartyBadStatus(TScriptInterface<class IBPI_PTBadStatusInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetPartyBadStatus");

	Params::BPI_BattleMain_C_BI_GetPartyBadStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_InfoMessSetProgramStr
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_InfoMessSetProgramStr(int32 Param_Index, const class FString& String, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_InfoMessSetProgramStr");

	Params::BPI_BattleMain_C_BI_InfoMessSetProgramStr Parms{};

	Parms.Param_Index = Param_Index;
	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetBossCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleBossCtrl_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetBossCtrl(TScriptInterface<class IBPI_BattleBossCtrl_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetBossCtrl");

	Params::BPI_BattleMain_C_BI_GetBossCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_OverrideCameraTargetSocket
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OverrideSocket                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_OverrideCameraTargetSocket(class FName OverrideSocket, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_OverrideCameraTargetSocket");

	Params::BPI_BattleMain_C_BI_OverrideCameraTargetSocket Parms{};

	Parms.OverrideSocket = OverrideSocket;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_FieldPlayerReplace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           InDevilList                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_FieldPlayerReplace(const TArray<int32>& InDevilList, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_FieldPlayerReplace");

	Params::BPI_BattleMain_C_BI_FieldPlayerReplace Parms{};

	Parms.InDevilList = std::move(InDevilList);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_FieldPlayerReplaceFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_FieldPlayerReplaceFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_FieldPlayerReplaceFinished");

	Params::BPI_BattleMain_C_BI_FieldPlayerReplaceFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_FieldPlayerReplaceResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<int32, struct FTransform>          RetValue                                               (Parm, OutParm)

void IBPI_BattleMain_C::BI_FieldPlayerReplaceResult(TMap<int32, struct FTransform>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_FieldPlayerReplaceResult");

	Params::BPI_BattleMain_C_BI_FieldPlayerReplaceResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_FieldEnemyAddSpawnPost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_FieldEnemyAddSpawnPost(int32 Param_Index, struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_FieldEnemyAddSpawnPost");

	Params::BPI_BattleMain_C_BI_FieldEnemyAddSpawnPost Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetMapCameraActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetMapCameraActor(class AActor** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetMapCameraActor");

	Params::BPI_BattleMain_C_BI_GetMapCameraActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_FieldGetComandBoxTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_FieldGetComandBoxTransform(struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_FieldGetComandBoxTransform");

	Params::BPI_BattleMain_C_BI_FieldGetComandBoxTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetCharAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class IBPI_BattleCharAction_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetCharAction(bool* Success, TScriptInterface<class IBPI_BattleCharAction_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetCharAction");

	Params::BPI_BattleMain_C_BI_GetCharAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_AddAIFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_AddAIFlag(uint8 Flag, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_AddAIFlag");

	Params::BPI_BattleMain_C_BI_AddAIFlag Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_DelAIFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_DelAIFlag(uint8 Flag, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_DelAIFlag");

	Params::BPI_BattleMain_C_BI_DelAIFlag Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_CheckAIFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_CheckAIFlag(uint8 Flag, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_CheckAIFlag");

	Params::BPI_BattleMain_C_BI_CheckAIFlag Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_ClearAIFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_ClearAIFlag(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_ClearAIFlag");

	Params::BPI_BattleMain_C_BI_ClearAIFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetAIValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_SetAIValue(int32 Value, int32 Param_Index, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetAIValue");

	Params::BPI_BattleMain_C_BI_SetAIValue Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetAIValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetAIValue(int32 Param_Index, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetAIValue");

	Params::BPI_BattleMain_C_BI_GetAIValue Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_DelAIValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_DelAIValue(int32 Param_Index, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_DelAIValue");

	Params::BPI_BattleMain_C_BI_DelAIValue Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_ClearAIValueAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_ClearAIValueAll(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_ClearAIValueAll");

	Params::BPI_BattleMain_C_BI_ClearAIValueAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetSummonList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBtlSummonData>           List                                                   (Parm, OutParm)

void IBPI_BattleMain_C::BI_GetSummonList(TArray<struct FBtlSummonData>* List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetSummonList");

	Params::BPI_BattleMain_C_BI_GetSummonList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (List != nullptr)
		*List = std::move(Parms.List);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetSummonList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBtlSummonData>           SummonData                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_SetSummonList(TArray<struct FBtlSummonData>& SummonData, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetSummonList");

	Params::BPI_BattleMain_C_BI_SetSummonList Parms{};

	Parms.SummonData = std::move(SummonData);

	UObject::ProcessEvent(Func, &Parms);

	SummonData = std::move(Parms.SummonData);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_ClearSummonList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_ClearSummonList(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_ClearSummonList");

	Params::BPI_BattleMain_C_BI_ClearSummonList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetSummonDevilID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SummonPosID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_SetSummonDevilID(int32 DevilID, int32 SummonPosID, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetSummonDevilID");

	Params::BPI_BattleMain_C_BI_SetSummonDevilID Parms{};

	Parms.DevilID = DevilID;
	Parms.SummonPosID = SummonPosID;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_AddDrawPressIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_AddDrawPressIcon(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_AddDrawPressIcon");

	Params::BPI_BattleMain_C_BI_AddDrawPressIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetAITurnNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TurnNum                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetAITurnNum(int32* TurnNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetAITurnNum");

	Params::BPI_BattleMain_C_BI_GetAITurnNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TurnNum != nullptr)
		*TurnNum = Parms.TurnNum;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_CommonInfoMessReserveTagParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_CommonInfoMessReserveTagParam(int32 Param_Index, const class FString& String, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_CommonInfoMessReserveTagParam");

	Params::BPI_BattleMain_C_BI_CommonInfoMessReserveTagParam Parms{};

	Parms.Param_Index = Param_Index;
	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetCurrentBGMID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetCurrentBGMID(int32* ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetCurrentBGMID");

	Params::BPI_BattleMain_C_BI_GetCurrentBGMID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_ToCommandBox
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_ToCommandBox(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_ToCommandBox");

	Params::BPI_BattleMain_C_BI_ToCommandBox Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_DrawPlayerUpliftingGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNowUplifting                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    SpendGaugeOnly                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_DrawPlayerUpliftingGauge(bool IsNowUplifting, bool SpendGaugeOnly, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_DrawPlayerUpliftingGauge");

	Params::BPI_BattleMain_C_BI_DrawPlayerUpliftingGauge Parms{};

	Parms.IsNowUplifting = IsNowUplifting;
	Parms.SpendGaugeOnly = SpendGaugeOnly;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetBattleUIManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleUIManager_C>Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetBattleUIManager(TScriptInterface<class IBPI_BattleUIManager_C>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetBattleUIManager");

	Params::BPI_BattleMain_C_BI_GetBattleUIManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_BeginAutoBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_BeginAutoBattle(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_BeginAutoBattle");

	Params::BPI_BattleMain_C_BI_BeginAutoBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.GI_GetUIMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleMessage_C>ActionPanel                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::GI_GetUIMessage(TScriptInterface<class IBPI_BattleMessage_C>* ActionPanel, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "GI_GetUIMessage");

	Params::BPI_BattleMain_C_GI_GetUIMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActionPanel != nullptr)
		*ActionPanel = Parms.ActionPanel;

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_BattleStatusCreatePanel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StartPartyIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_BattleStatusCreatePanel(int32 StartPartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_BattleStatusCreatePanel");

	Params::BPI_BattleMain_C_BI_BattleStatusCreatePanel Parms{};

	Parms.StartPartyIndex = StartPartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_BattleStatusIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_BattleStatusIsFinished(bool* OutFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_BattleStatusIsFinished");

	Params::BPI_BattleMain_C_BI_BattleStatusIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFinished != nullptr)
		*OutFinished = Parms.OutFinished;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_BattleStatusGetSelectedPartyIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OutPartyIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_BattleStatusGetSelectedPartyIndex(int32* OutPartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_BattleStatusGetSelectedPartyIndex");

	Params::BPI_BattleMain_C_BI_BattleStatusGetSelectedPartyIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutPartyIndex != nullptr)
		*OutPartyIndex = Parms.OutPartyIndex;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_BattleStatusIsCanseled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutCanseled                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_BattleStatusIsCanseled(bool* OutCanseled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_BattleStatusIsCanseled");

	Params::BPI_BattleMain_C_BI_BattleStatusIsCanseled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutCanseled != nullptr)
		*OutCanseled = Parms.OutCanseled;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_InfoMessShowByCommonMessLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MessLabel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SelectSkillScriptMessage                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_InfoMessShowByCommonMessLabel(class FName MessLabel, bool SelectSkillScriptMessage, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_InfoMessShowByCommonMessLabel");

	Params::BPI_BattleMain_C_BI_InfoMessShowByCommonMessLabel Parms{};

	Parms.MessLabel = MessLabel;
	Parms.SelectSkillScriptMessage = SelectSkillScriptMessage;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetPlayerUpliftingGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetPlayerUpliftingGauge(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetPlayerUpliftingGauge");

	Params::BPI_BattleMain_C_BI_GetPlayerUpliftingGauge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_ChkEnemySurpriseTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnemySurpriseTurn                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_ChkEnemySurpriseTurn(bool* EnemySurpriseTurn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_ChkEnemySurpriseTurn");

	Params::BPI_BattleMain_C_BI_ChkEnemySurpriseTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EnemySurpriseTurn != nullptr)
		*EnemySurpriseTurn = Parms.EnemySurpriseTurn;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetCurrentBGMID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BGM_ID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    No_Use                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetCurrentBGMID(int32 BGM_ID, bool* No_Use)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetCurrentBGMID");

	Params::BPI_BattleMain_C_BI_SetCurrentBGMID Parms{};

	Parms.BGM_ID = BGM_ID;

	UObject::ProcessEvent(Func, &Parms);

	if (No_Use != nullptr)
		*No_Use = Parms.No_Use;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_AddResultDataFujimi
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_AddResultDataFujimi(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_AddResultDataFujimi");

	Params::BPI_BattleMain_C_BI_AddResultDataFujimi Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_PrepareSkip
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_PrepareSkip(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_PrepareSkip");

	Params::BPI_BattleMain_C_BI_PrepareSkip Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_ReadyDebugMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_ReadyDebugMenu(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_ReadyDebugMenu");

	Params::BPI_BattleMain_C_BI_ReadyDebugMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetCamActorFactory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleCamActorFactory_C>CamActorFactory                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetCamActorFactory(TScriptInterface<class IBPI_BattleCamActorFactory_C>* CamActorFactory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetCamActorFactory");

	Params::BPI_BattleMain_C_BI_GetCamActorFactory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CamActorFactory != nullptr)
		*CamActorFactory = Parms.CamActorFactory;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SummonSelectSetSummonParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SummonSelectSetSummonParameter(bool* OutParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SummonSelectSetSummonParameter");

	Params::BPI_BattleMain_C_BI_SummonSelectSetSummonParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutParam != nullptr)
		*OutParam = Parms.OutParam;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetAnalyzeItemStatusCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          AnalyzeItemStatusCtrl                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetAnalyzeItemStatusCtrl(class UObject** AnalyzeItemStatusCtrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetAnalyzeItemStatusCtrl");

	Params::BPI_BattleMain_C_BI_GetAnalyzeItemStatusCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnalyzeItemStatusCtrl != nullptr)
		*AnalyzeItemStatusCtrl = Parms.AnalyzeItemStatusCtrl;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_BattleUISwitch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IncludeMonnAge                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_BattleUISwitch(bool Sw, bool IncludeMonnAge, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_BattleUISwitch");

	Params::BPI_BattleMain_C_BI_BattleUISwitch Parms{};

	Parms.Sw = Sw;
	Parms.IncludeMonnAge = IncludeMonnAge;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetBattleCommand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleCommand_C>BattleCommand                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetBattleCommand(TScriptInterface<class IBPI_BattleCommand_C>* BattleCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetBattleCommand");

	Params::BPI_BattleMain_C_BI_GetBattleCommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BattleCommand != nullptr)
		*BattleCommand = Parms.BattleCommand;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_IsFinishedBattleCharaPanelFadeIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFinished                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_IsFinishedBattleCharaPanelFadeIn(bool* IsFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_IsFinishedBattleCharaPanelFadeIn");

	Params::BPI_BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFinished != nullptr)
		*IsFinished = Parms.IsFinished;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetPartyPanelFadeOutStack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InStartTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InOptionCheck                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InVisibleCheck                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OutParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetPartyPanelFadeOutStack(int32 InIndex, float InStartTime, bool InOptionCheck, bool InVisibleCheck, bool* OutParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetPartyPanelFadeOutStack");

	Params::BPI_BattleMain_C_BI_SetPartyPanelFadeOutStack Parms{};

	Parms.InIndex = InIndex;
	Parms.InStartTime = InStartTime;
	Parms.InOptionCheck = InOptionCheck;
	Parms.InVisibleCheck = InVisibleCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (OutParam != nullptr)
		*OutParam = Parms.OutParam;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetPartyPanelEmptyStack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InStartTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InOptionCheck                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InVisibleCheck                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetPartyPanelEmptyStack(int32 InIndex, float InStartTime, bool InOptionCheck, bool InVisibleCheck, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetPartyPanelEmptyStack");

	Params::BPI_BattleMain_C_BI_SetPartyPanelEmptyStack Parms{};

	Parms.InIndex = InIndex;
	Parms.InStartTime = InStartTime;
	Parms.InOptionCheck = InOptionCheck;
	Parms.InVisibleCheck = InVisibleCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetPartyPanelSummonStack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBtlParty                        InPartyData                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   InStartTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InOptionCheck                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetPartyPanelSummonStack(int32 InIndex, const struct FBtlParty& InPartyData, float InStartTime, bool InOptionCheck, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetPartyPanelSummonStack");

	Params::BPI_BattleMain_C_BI_SetPartyPanelSummonStack Parms{};

	Parms.InIndex = InIndex;
	Parms.InPartyData = std::move(InPartyData);
	Parms.InStartTime = InStartTime;
	Parms.InOptionCheck = InOptionCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_IsFinishedPanelFadeOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_IsFinishedPanelFadeOut(int32 InIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_IsFinishedPanelFadeOut");

	Params::BPI_BattleMain_C_BI_IsFinishedPanelFadeOut Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_HideActionName_forCommand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_HideActionName_forCommand(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_HideActionName_forCommand");

	Params::BPI_BattleMain_C_BI_HideActionName_forCommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_HideActionName_forSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_HideActionName_forSkill(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_HideActionName_forSkill");

	Params::BPI_BattleMain_C_BI_HideActionName_forSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_ShowActionName_forCommand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_ShowActionName_forCommand(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_ShowActionName_forCommand");

	Params::BPI_BattleMain_C_BI_ShowActionName_forCommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_ShowActionName_forSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_ShowActionName_forSkill(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_ShowActionName_forSkill");

	Params::BPI_BattleMain_C_BI_ShowActionName_forSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetSkillCureHPForUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InActorIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InTargetIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InSkillId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetHP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetSkillCureHPForUI(int32 InActorIndex, int32 InTargetIndex, int32 InSkillId, int32* RetHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetSkillCureHPForUI");

	Params::BPI_BattleMain_C_BI_GetSkillCureHPForUI Parms{};

	Parms.InActorIndex = InActorIndex;
	Parms.InTargetIndex = InTargetIndex;
	Parms.InSkillId = InSkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetHP != nullptr)
		*RetHP = Parms.RetHP;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetSkillCureMPForUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InActorIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InTargetIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InSkillId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetMP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetSkillCureMPForUI(int32 InActorIndex, int32 InTargetIndex, int32 InSkillId, int32* RetMP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetSkillCureMPForUI");

	Params::BPI_BattleMain_C_BI_GetSkillCureMPForUI Parms{};

	Parms.InActorIndex = InActorIndex;
	Parms.InTargetIndex = InTargetIndex;
	Parms.InSkillId = InSkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetMP != nullptr)
		*RetMP = Parms.RetMP;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetItemCureHPForUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InActorIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InTargetIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InItemId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetHP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetItemCureHPForUI(int32 InActorIndex, int32 InTargetIndex, int32 InItemId, int32* RetHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetItemCureHPForUI");

	Params::BPI_BattleMain_C_BI_GetItemCureHPForUI Parms{};

	Parms.InActorIndex = InActorIndex;
	Parms.InTargetIndex = InTargetIndex;
	Parms.InItemId = InItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetHP != nullptr)
		*RetHP = Parms.RetHP;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetItemCureMPForUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InActorIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InTargetIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InItemId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetMP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_GetItemCureMPForUI(int32 InActorIndex, int32 InTargetIndex, int32 InItemId, int32* RetMP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetItemCureMPForUI");

	Params::BPI_BattleMain_C_BI_GetItemCureMPForUI Parms{};

	Parms.InActorIndex = InActorIndex;
	Parms.InTargetIndex = InTargetIndex;
	Parms.InItemId = InItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetMP != nullptr)
		*RetMP = Parms.RetMP;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_CheckBattleEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_END                               EndType                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_CheckBattleEnd(E_BTL_END* EndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_CheckBattleEnd");

	Params::BPI_BattleMain_C_BI_CheckBattleEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EndType != nullptr)
		*EndType = Parms.EndType;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI Get Camera Accessor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABattleCamera_C*                  Camera                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_Get_Camera_Accessor(class ABattleCamera_C** Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI Get Camera Accessor");

	Params::BPI_BattleMain_C_BI_Get_Camera_Accessor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Camera != nullptr)
		*Camera = Parms.Camera;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_CalcStatusListEnemyOrder
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           PartyIndex                                             (Parm, OutParm)

void IBPI_BattleMain_C::BI_CalcStatusListEnemyOrder(TArray<int32>* PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_CalcStatusListEnemyOrder");

	Params::BPI_BattleMain_C_BI_CalcStatusListEnemyOrder Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PartyIndex != nullptr)
		*PartyIndex = std::move(Parms.PartyIndex);
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetVoiceProtection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetVoiceProtection(bool Enable, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetVoiceProtection");

	Params::BPI_BattleMain_C_BI_SetVoiceProtection Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UpdateBattleTempo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UpdateBattleTempo(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UpdateBattleTempo");

	Params::BPI_BattleMain_C_BI_UpdateBattleTempo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_CheckContinuousBGMBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsContinuous                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_CheckContinuousBGMBattle(bool* IsContinuous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_CheckContinuousBGMBattle");

	Params::BPI_BattleMain_C_BI_CheckContinuousBGMBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsContinuous != nullptr)
		*IsContinuous = Parms.IsContinuous;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_EndAutoBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_EndAutoBattle(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_EndAutoBattle");

	Params::BPI_BattleMain_C_BI_EndAutoBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UniqueSkill_CureMPMagatsuhiGaugeMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleMain_C::BI_UniqueSkill_CureMPMagatsuhiGaugeMax(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UniqueSkill_CureMPMagatsuhiGaugeMax");

	Params::BPI_BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_PartyPanelGetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_PartyPanelGetVisibility(bool* IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_PartyPanelGetVisibility");

	Params::BPI_BattleMain_C_BI_PartyPanelGetVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible != nullptr)
		*IsVisible = Parms.IsVisible;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_CheckBossRushChallengeMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_CheckBossRushChallengeMode(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_CheckBossRushChallengeMode");

	Params::BPI_BattleMain_C_BI_CheckBossRushChallengeMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UniqueSkill_ActionEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAllAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsDeadOnly                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ReserveDeadPartyIndex                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UniqueSkill_ActionEnd(bool IsAllAction, bool IsDeadOnly, int32 ReserveDeadPartyIndex, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UniqueSkill_ActionEnd");

	Params::BPI_BattleMain_C_BI_UniqueSkill_ActionEnd Parms{};

	Parms.IsAllAction = IsAllAction;
	Parms.IsDeadOnly = IsDeadOnly;
	Parms.ReserveDeadPartyIndex = ReserveDeadPartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_UniqueSkill_BstDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_UniqueSkill_BstDead(int32 PartyIndex, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_UniqueSkill_BstDead");

	Params::BPI_BattleMain_C_BI_UniqueSkill_BstDead Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_CheckBossRush
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBossRush                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_CheckBossRush(bool* IsBossRush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_CheckBossRush");

	Params::BPI_BattleMain_C_BI_CheckBossRush Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsBossRush != nullptr)
		*IsBossRush = Parms.IsBossRush;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetEncountID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncountID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEvent                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetEncountID(int32* EncountID, bool* IsEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetEncountID");

	Params::BPI_BattleMain_C_BI_GetEncountID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EncountID != nullptr)
		*EncountID = Parms.EncountID;

	if (IsEvent != nullptr)
		*IsEvent = Parms.IsEvent;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetEventSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleEventSystem_C>EventSystem                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetEventSystem(TScriptInterface<class IBPI_BattleEventSystem_C>* EventSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetEventSystem");

	Params::BPI_BattleMain_C_BI_GetEventSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EventSystem != nullptr)
		*EventSystem = Parms.EventSystem;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetEffectManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleEffectManager_C>Manager                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetEffectManager(TScriptInterface<class IBPI_BattleEffectManager_C>* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetEffectManager");

	Params::BPI_BattleMain_C_BI_GetEffectManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Manager != nullptr)
		*Manager = Parms.Manager;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_InfoMessIsDispOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDispOn                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_InfoMessIsDispOn(bool* IsDispOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_InfoMessIsDispOn");

	Params::BPI_BattleMain_C_BI_InfoMessIsDispOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDispOn != nullptr)
		*IsDispOn = Parms.IsDispOn;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetTaskModelManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleTaskModelManager_C>Manager                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetTaskModelManager(TScriptInterface<class IBPI_BattleTaskModelManager_C>* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetTaskModelManager");

	Params::BPI_BattleMain_C_BI_GetTaskModelManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Manager != nullptr)
		*Manager = Parms.Manager;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_SetPrevBattleBGM
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundAtomCue*                    PrevBattleBGM                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_SetPrevBattleBGM(class USoundAtomCue* PrevBattleBGM, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_SetPrevBattleBGM");

	Params::BPI_BattleMain_C_BI_SetPrevBattleBGM Parms{};

	Parms.PrevBattleBGM = PrevBattleBGM;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetWindowActivation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetWindowActivation(bool* Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetWindowActivation");

	Params::BPI_BattleMain_C_BI_GetWindowActivation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;
}


// Function BPI_BattleMain.BPI_BattleMain_C.BI_GetAICommand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TScriptInterface<class IBPI_AICommand_C>Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleMain_C::BI_GetAICommand(TScriptInterface<class IBPI_AICommand_C>* Ret) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleMain_C", "BI_GetAICommand");

	Params::BPI_BattleMain_C_BI_GetAICommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}

}

