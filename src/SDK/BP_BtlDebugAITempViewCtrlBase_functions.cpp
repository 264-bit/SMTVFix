#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtlDebugAITempViewCtrlBase

#include "Basic.hpp"

#include "BP_BtlDebugAITempViewCtrlBase_classes.hpp"
#include "BP_BtlDebugAITempViewCtrlBase_parameters.hpp"


namespace SDK
{

// Function BP_BtlDebugAITempViewCtrlBase.BP_BtlDebugAITempViewCtrlBase_C.ExecuteUbergraph_BP_BtlDebugAITempViewCtrlBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BtlDebugAITempViewCtrlBase_C::ExecuteUbergraph_BP_BtlDebugAITempViewCtrlBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlDebugAITempViewCtrlBase_C", "ExecuteUbergraph_BP_BtlDebugAITempViewCtrlBase");

	Params::BP_BtlDebugAITempViewCtrlBase_C_ExecuteUbergraph_BP_BtlDebugAITempViewCtrlBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BtlDebugAITempViewCtrlBase.BP_BtlDebugAITempViewCtrlBase_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_BtlDebugAITempViewCtrlBase_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlDebugAITempViewCtrlBase_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlDebugAITempViewCtrlBase.BP_BtlDebugAITempViewCtrlBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BtlDebugAITempViewCtrlBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlDebugAITempViewCtrlBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BtlDebugAITempViewCtrlBase.BP_BtlDebugAITempViewCtrlBase_C.Init
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlDebugAITempViewCtrlBase_C::Init(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlDebugAITempViewCtrlBase_C", "Init");

	Params::BP_BtlDebugAITempViewCtrlBase_C_Init Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BP_BtlDebugAITempViewCtrlBase.BP_BtlDebugAITempViewCtrlBase_C.BPI_ChangeViewUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlDebugAITempViewCtrlBase_C::BPI_ChangeViewUI(bool IsOn, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlDebugAITempViewCtrlBase_C", "BPI_ChangeViewUI");

	Params::BP_BtlDebugAITempViewCtrlBase_C_BPI_ChangeViewUI Parms{};

	Parms.IsOn = IsOn;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BP_BtlDebugAITempViewCtrlBase.BP_BtlDebugAITempViewCtrlBase_C.BPI_RegisterDebugFlagData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           DispName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Comment                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlDebugAITempViewCtrlBase_C::BPI_RegisterDebugFlagData(int32 Param_Index, const class FString& DispName, const class FString& Comment, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlDebugAITempViewCtrlBase_C", "BPI_RegisterDebugFlagData");

	Params::BP_BtlDebugAITempViewCtrlBase_C_BPI_RegisterDebugFlagData Parms{};

	Parms.Param_Index = Param_Index;
	Parms.DispName = std::move(DispName);
	Parms.Comment = std::move(Comment);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BP_BtlDebugAITempViewCtrlBase.BP_BtlDebugAITempViewCtrlBase_C.BPI_RegisterDebugValueData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           DispName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Comment                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlDebugAITempViewCtrlBase_C::BPI_RegisterDebugValueData(int32 Param_Index, const class FString& DispName, const class FString& Comment, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlDebugAITempViewCtrlBase_C", "BPI_RegisterDebugValueData");

	Params::BP_BtlDebugAITempViewCtrlBase_C_BPI_RegisterDebugValueData Parms{};

	Parms.Param_Index = Param_Index;
	Parms.DispName = std::move(DispName);
	Parms.Comment = std::move(Comment);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BP_BtlDebugAITempViewCtrlBase.BP_BtlDebugAITempViewCtrlBase_C.BPI_ChangeCommentView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlDebugAITempViewCtrlBase_C::BPI_ChangeCommentView(bool IsOn, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlDebugAITempViewCtrlBase_C", "BPI_ChangeCommentView");

	Params::BP_BtlDebugAITempViewCtrlBase_C_BPI_ChangeCommentView Parms{};

	Parms.IsOn = IsOn;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BP_BtlDebugAITempViewCtrlBase.BP_BtlDebugAITempViewCtrlBase_C.BPI_ChangeViewType_RegisterOnly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlDebugAITempViewCtrlBase_C::BPI_ChangeViewType_RegisterOnly(bool IsOn, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlDebugAITempViewCtrlBase_C", "BPI_ChangeViewType_RegisterOnly");

	Params::BP_BtlDebugAITempViewCtrlBase_C_BPI_ChangeViewType_RegisterOnly Parms{};

	Parms.IsOn = IsOn;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BP_BtlDebugAITempViewCtrlBase.BP_BtlDebugAITempViewCtrlBase_C.BPI_SetUIPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PosX                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PosY                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BtlDebugAITempViewCtrlBase_C::BPI_SetUIPosition(int32 PosX, int32 PosY, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BtlDebugAITempViewCtrlBase_C", "BPI_SetUIPosition");

	Params::BP_BtlDebugAITempViewCtrlBase_C_BPI_SetUIPosition Parms{};

	Parms.PosX = PosX;
	Parms.PosY = PosY;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}

}

