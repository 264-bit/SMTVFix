#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_PlayerManager

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "E_PLAYER_MANAGER_TYPE_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_PlayerManager.BPL_PlayerManager_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_PlayerManager_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetPlayer(E_PLAYER_MANAGER_TYPE Selection, class UObject* __WorldContext, class APlayerBase_C** AsPlayer_Base);
	static void PlayerCharaActive(E_PLAYER_MANAGER_TYPE Selection, const struct FTransform& NewTransform, class UObject* __WorldContext, class APawn** Ret);
	static void PlayerCharaDeactive(E_PLAYER_MANAGER_TYPE Selection, class UObject* __WorldContext, class APawn** Ret);
	static void PlayerChange(E_PLAYER_MANAGER_TYPE Select, bool IsBattle, class UObject* __WorldContext);
	static void SetController(E_PLAYER_MANAGER_TYPE Type, class UObject* __WorldContext);
	static void PlayerCharaReActive(E_PLAYER_MANAGER_TYPE PlayerType, class UObject* __WorldContext);
	static void IsActive(E_PLAYER_MANAGER_TYPE PlayerType, class UObject* __WorldContext, bool* Param_IsActive);
	static void GetActivePlayer(class UObject* __WorldContext, class APlayerBase_C** Player, E_PLAYER_MANAGER_TYPE* E_Type);
	static void TokyoPlayerCh(E_PLAYER_MANAGER_TYPE Select, bool TokyoReturn, bool IsBtl, class UObject* __WorldContext);
	static void SaveTokyoPlayer(class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_PlayerManager_C">();
	}
	static class UBPL_PlayerManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_PlayerManager_C>();
	}
};
static_assert(alignof(UBPL_PlayerManager_C) == 0x000008, "Wrong alignment on UBPL_PlayerManager_C");
static_assert(sizeof(UBPL_PlayerManager_C) == 0x000028, "Wrong size on UBPL_PlayerManager_C");

}

