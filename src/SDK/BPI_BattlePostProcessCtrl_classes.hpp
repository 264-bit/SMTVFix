#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BattlePostProcessCtrl

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_BattlePostProcessCtrl.BPI_BattlePostProcessCtrl_C
// 0x0000 (0x0028 - 0x0028)
class IBPI_BattlePostProcessCtrl_C final : public IInterface
{
public:
	void BI_RadialBlurSetValue(bool Sw, const struct FVector& BlurOrigin, float Scale, float Damage, float StartAmount, float EndAmount, float StartKeepSec, float LeapSec, bool* RetValue);
	void BI_AddOrUpdateBlendable(class UMaterialInstanceDynamic* PostProcessMaterial, float Waight, bool* RetVal);
	void BI_CounterEnd(bool* NoUse);
	void BI_CounterBegin(bool* NoUse);
	void BI_CounterActorStopEnd(int32 ActorPartyIndex, bool* NoUse);
	void BI_CounterActorStopEnd2(class AActor* Actor, bool* RetVal);
	void BI_MotionBlurEnable(bool Enable, bool* NoUse);
	void BI_YugamiUpdate(float Weight, const struct FLinearColor& FogColor, bool* NoUse);
	void BI_OomagatokiUpdate(float Weight, bool* NoUse);
	void BI_WhiteOutUpdate(float Weight, bool* NoUse);
	void BI_SetMapDarkAlpha(float Alpha, bool* NoUse);
	void BI_SetCharaBlackWeight(float Weight, bool* Dummy);
	void BI_SetCharaBlackScalar(class FName ParameterName, float Value, bool* Dummy);
	void BI_SetCharaBlackVector(class FName ParameterName, const struct FLinearColor& Value, bool* Dummy);
	void BI_RemovePostMaterial(class UMaterialInstanceDynamic* Mid, bool* NoUse);
	void BI_InitializeQuiz(const struct FTransform& OriginTransform, bool* Dummy);
	void BI_FinalizeQuiz(bool* Dummy);
	void BI_SetQuizWipeWeight(float Weight, bool* Dummy);
	void BI_SetQuizWipeScalar(class FName ParameterName, float Value, bool* Dummy);
	void BI_SetQuizWipeVector(class FName ParameterName, const struct FLinearColor& Value, bool* Dummy);
	void BI_SetQuizCorrectWeight(float Weight, bool* Dummy);
	void BI_SetQuizCorrectScalar(class FName ParameterName, float Value, bool* Dummy);
	void BI_SetQuizCorrectVector(class FName ParameterName, const struct FLinearColor& Value, bool* Dummy);
	void BI_SetQuizWrongWeight(float Weight, bool* Dummy);
	void BI_SetQuizWrongScalar(class FName ParameterName, float Value, bool* Dummy);
	void BI_SetQuizWrongVector(class FName ParameterName, const struct FLinearColor& Value, bool* Dummy);
	void BI_RemoveYugami(bool* NoUse);
	void BI_RemoveWhiteOut(bool* NoUse);
	void BI_AddQuizExposureCompensation(float AddValue, bool* Dummy);
	void BI_ResetQuizExposureCompensation(bool* Dummy);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_BattlePostProcessCtrl_C">();
	}
	static class IBPI_BattlePostProcessCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_BattlePostProcessCtrl_C>();
	}
};
static_assert(alignof(IBPI_BattlePostProcessCtrl_C) == 0x000008, "Wrong alignment on IBPI_BattlePostProcessCtrl_C");
static_assert(sizeof(IBPI_BattlePostProcessCtrl_C) == 0x000028, "Wrong size on IBPI_BattlePostProcessCtrl_C");

}

