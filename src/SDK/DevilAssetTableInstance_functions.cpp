#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DevilAssetTableInstance

#include "Basic.hpp"

#include "DevilAssetTableInstance_classes.hpp"
#include "DevilAssetTableInstance_parameters.hpp"


namespace SDK
{

// Function DevilAssetTableInstance.DevilAssetTableInstance_C.ExecuteUbergraph_DevilAssetTableInstance
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADevilAssetTableInstance_C::ExecuteUbergraph_DevilAssetTableInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilAssetTableInstance_C", "ExecuteUbergraph_DevilAssetTableInstance");

	Params::DevilAssetTableInstance_C_ExecuteUbergraph_DevilAssetTableInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DevilAssetTableInstance.DevilAssetTableInstance_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADevilAssetTableInstance_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilAssetTableInstance_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilAssetTableInstance.DevilAssetTableInstance_C.Load_DevilAsset
// (Public, BlueprintCallable, BlueprintEvent)

void ADevilAssetTableInstance_C::Load_DevilAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilAssetTableInstance_C", "Load_DevilAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DevilAssetTableInstance.DevilAssetTableInstance_C.Get_DevilAssetRaw
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilAssetID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDevilAssetTable_Raw             AssetData                                              (Parm, OutParm)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADevilAssetTableInstance_C::Get_DevilAssetRaw(int32 DevilAssetID, struct FDevilAssetTable_Raw* AssetData, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilAssetTableInstance_C", "Get_DevilAssetRaw");

	Params::DevilAssetTableInstance_C_Get_DevilAssetRaw Parms{};

	Parms.DevilAssetID = DevilAssetID;

	UObject::ProcessEvent(Func, &Parms);

	if (AssetData != nullptr)
		*AssetData = std::move(Parms.AssetData);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function DevilAssetTableInstance.DevilAssetTableInstance_C.BI_GetDevilAsset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilAssetID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDevilAssetTable_Raw             AssetData                                              (Parm, OutParm)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADevilAssetTableInstance_C::BI_GetDevilAsset(int32 DevilAssetID, struct FDevilAssetTable_Raw* AssetData, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilAssetTableInstance_C", "BI_GetDevilAsset");

	Params::DevilAssetTableInstance_C_BI_GetDevilAsset Parms{};

	Parms.DevilAssetID = DevilAssetID;

	UObject::ProcessEvent(Func, &Parms);

	if (AssetData != nullptr)
		*AssetData = std::move(Parms.AssetData);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function DevilAssetTableInstance.DevilAssetTableInstance_C.BI_GetDevilAssetMapValue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDevilAssetTable_Raw>     Value                                                  (Parm, OutParm)

void ADevilAssetTableInstance_C::BI_GetDevilAssetMapValue(TArray<struct FDevilAssetTable_Raw>* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DevilAssetTableInstance_C", "BI_GetDevilAssetMapValue");

	Params::DevilAssetTableInstance_C_BI_GetDevilAssetMapValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}

}

