#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerInputReceiver

#include "Basic.hpp"

#include "BPI_PlayerInputReceiver_classes.hpp"
#include "BPI_PlayerInputReceiver_parameters.hpp"


namespace SDK
{

// Function BPI_PlayerInputReceiver.BPI_PlayerInputReceiver_C.Input_Jump
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerInputReceiver_C::Input_Jump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInputReceiver_C", "Input_Jump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerInputReceiver.BPI_PlayerInputReceiver_C.Input_Attack
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerInputReceiver_C::Input_Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInputReceiver_C", "Input_Attack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerInputReceiver.BPI_PlayerInputReceiver_C.Input_DownViewStart
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerInputReceiver_C::Input_DownViewStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInputReceiver_C", "Input_DownViewStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerInputReceiver.BPI_PlayerInputReceiver_C.Input_DownViewCancel
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerInputReceiver_C::Input_DownViewCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInputReceiver_C", "Input_DownViewCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerInputReceiver.BPI_PlayerInputReceiver_C.Input_BeginDash
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerInputReceiver_C::Input_BeginDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInputReceiver_C", "Input_BeginDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerInputReceiver.BPI_PlayerInputReceiver_C.Input_EndDash
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerInputReceiver_C::Input_EndDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInputReceiver_C", "Input_EndDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerInputReceiver.BPI_PlayerInputReceiver_C.Input_ToggleAutoRun
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerInputReceiver_C::Input_ToggleAutoRun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInputReceiver_C", "Input_ToggleAutoRun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerInputReceiver.BPI_PlayerInputReceiver_C.IsAutoRunning
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAutoRunning                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PlayerInputReceiver_C::IsAutoRunning(bool* bAutoRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInputReceiver_C", "IsAutoRunning");

	Params::BPI_PlayerInputReceiver_C_IsAutoRunning Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAutoRunning != nullptr)
		*bAutoRunning = Parms.bAutoRunning;
}


// Function BPI_PlayerInputReceiver.BPI_PlayerInputReceiver_C.IsDashing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bDashing                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PlayerInputReceiver_C::IsDashing(bool* bDashing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInputReceiver_C", "IsDashing");

	Params::BPI_PlayerInputReceiver_C_IsDashing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDashing != nullptr)
		*bDashing = Parms.bDashing;
}

}

