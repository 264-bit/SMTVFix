#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EncountAreaDaath_Spline

#include "Basic.hpp"

#include "BP_EncountAreaDaath_Spline_classes.hpp"
#include "BP_EncountAreaDaath_Spline_parameters.hpp"


namespace SDK
{

// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.ExecuteUbergraph_BP_EncountAreaDaath_Spline
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EncountAreaDaath_Spline_C::ExecuteUbergraph_BP_EncountAreaDaath_Spline(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "ExecuteUbergraph_BP_EncountAreaDaath_Spline");

	Params::BP_EncountAreaDaath_Spline_C_ExecuteUbergraph_BP_EncountAreaDaath_Spline Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.CalcBoxPosSize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EncountAreaDaath_Spline_C::CalcBoxPosSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "CalcBoxPosSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EncountAreaDaath_Spline_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_EncountAreaDaath_Spline_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.CalcSpawnPointList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LineTrace                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FTransform>               Param_SpawnPointList                                   (Parm, OutParm)

void ABP_EncountAreaDaath_Spline_C::CalcSpawnPointList(bool LineTrace, TArray<struct FTransform>* Param_SpawnPointList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "CalcSpawnPointList");

	Params::BP_EncountAreaDaath_Spline_C_CalcSpawnPointList Parms{};

	Parms.LineTrace = LineTrace;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SpawnPointList != nullptr)
		*Param_SpawnPointList = std::move(Parms.Param_SpawnPointList);
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.SetView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsView                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EncountAreaDaath_Spline_C::SetView(bool IsView, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "SetView");

	Params::BP_EncountAreaDaath_Spline_C_SetView Parms{};

	Parms.IsView = IsView;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.CheckFly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsFly                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EncountAreaDaath_Spline_C::CheckFly(bool* Param_IsFly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "CheckFly");

	Params::BP_EncountAreaDaath_Spline_C_CheckFly Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsFly != nullptr)
		*Param_IsFly = Parms.Param_IsFly;
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.GetSpawnSplinePoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<int32>                           SplinePoints                                           (Parm, OutParm)

void ABP_EncountAreaDaath_Spline_C::GetSpawnSplinePoint(TArray<int32>* SplinePoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "GetSpawnSplinePoint");

	Params::BP_EncountAreaDaath_Spline_C_GetSpawnSplinePoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SplinePoints != nullptr)
		*SplinePoints = std::move(Parms.SplinePoints);
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.GetSpline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USplineComponent*                 Param_Spline                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EncountAreaDaath_Spline_C::GetSpline(class USplineComponent** Param_Spline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "GetSpline");

	Params::BP_EncountAreaDaath_Spline_C_GetSpline Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Spline != nullptr)
		*Param_Spline = Parms.Param_Spline;
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.CheckSplineReverse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Reverse                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EncountAreaDaath_Spline_C::CheckSplineReverse(bool* Reverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "CheckSplineReverse");

	Params::BP_EncountAreaDaath_Spline_C_CheckSplineReverse Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Reverse != nullptr)
		*Reverse = Parms.Reverse;
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.GetOptionSplines
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_EncountArea_OptionSpline_C*>Param_OptionSplines                                    (Parm, OutParm)

void ABP_EncountAreaDaath_Spline_C::GetOptionSplines(TArray<class ABP_EncountArea_OptionSpline_C*>* Param_OptionSplines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "GetOptionSplines");

	Params::BP_EncountAreaDaath_Spline_C_GetOptionSplines Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_OptionSplines != nullptr)
		*Param_OptionSplines = std::move(Parms.Param_OptionSplines);
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.ChangeOptionSpline
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EncountAreaDaath_Spline_C::ChangeOptionSpline(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "ChangeOptionSpline");

	Params::BP_EncountAreaDaath_Spline_C_ChangeOptionSpline Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.GetBaseSpline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USplineComponent*                 Param_Spline                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EncountAreaDaath_Spline_C::GetBaseSpline(class USplineComponent** Param_Spline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "GetBaseSpline");

	Params::BP_EncountAreaDaath_Spline_C_GetBaseSpline Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Spline != nullptr)
		*Param_Spline = Parms.Param_Spline;
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.GetOptionSplineIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EncountAreaDaath_Spline_C::GetOptionSplineIndex(int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "GetOptionSplineIndex");

	Params::BP_EncountAreaDaath_Spline_C_GetOptionSplineIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.SetSplineReverse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reverse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EncountAreaDaath_Spline_C::SetSplineReverse(bool Reverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "SetSplineReverse");

	Params::BP_EncountAreaDaath_Spline_C_SetSplineReverse Parms{};

	Parms.Reverse = Reverse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EncountAreaDaath_Spline.BP_EncountAreaDaath_Spline_C.BPI_GetSymbolSpline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineComponent*                 Param_Spline                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EncountAreaDaath_Spline_C::BPI_GetSymbolSpline(class USplineComponent** Param_Spline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EncountAreaDaath_Spline_C", "BPI_GetSymbolSpline");

	Params::BP_EncountAreaDaath_Spline_C_BPI_GetSymbolSpline Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Spline != nullptr)
		*Param_Spline = Parms.Param_Spline;
}

}

