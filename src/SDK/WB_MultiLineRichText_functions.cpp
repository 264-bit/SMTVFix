#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MultiLineRichText

#include "Basic.hpp"

#include "WB_MultiLineRichText_classes.hpp"
#include "WB_MultiLineRichText_parameters.hpp"


namespace SDK
{

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.ExecuteUbergraph_WB_MultiLineRichText
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::ExecuteUbergraph_WB_MultiLineRichText(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "ExecuteUbergraph_WB_MultiLineRichText");

	Params::WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_MultiLineRichText_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_MultiLineRichText_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "PreConstruct");

	Params::WB_MultiLineRichText_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "Tick");

	Params::WB_MultiLineRichText_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.Init
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_MultiLineRichText_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.PrintDebugText
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_MultiLineRichText_C::PrintDebugText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "PrintDebugText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetNewMsg_byID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              MsgAsset                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MsgID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::SetNewMsg_byID(const class UScriptMessageAsset* MsgAsset, int32 MsgID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "SetNewMsg_byID");

	Params::WB_MultiLineRichText_C_SetNewMsg_byID Parms{};

	Parms.MsgAsset = MsgAsset;
	Parms.MsgID = MsgID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetNewMsg_byLabel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              MsgAsset                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             MsgLabel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::SetNewMsg_byLabel(const class UScriptMessageAsset* MsgAsset, class FName MsgLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "SetNewMsg_byLabel");

	Params::WB_MultiLineRichText_C_SetNewMsg_byLabel Parms{};

	Parms.MsgAsset = MsgAsset;
	Parms.MsgLabel = MsgLabel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetQuestSummaryMsg_byID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              MsgAsset                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MsgID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::SetQuestSummaryMsg_byID(const class UScriptMessageAsset* MsgAsset, int32 MsgID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "SetQuestSummaryMsg_byID");

	Params::WB_MultiLineRichText_C_SetQuestSummaryMsg_byID Parms{};

	Parms.MsgAsset = MsgAsset;
	Parms.MsgID = MsgID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetQuestSummaryMsg_byLabel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              MsgAsset                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             MsgLabel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::SetQuestSummaryMsg_byLabel(const class UScriptMessageAsset* MsgAsset, class FName MsgLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "SetQuestSummaryMsg_byLabel");

	Params::WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel Parms{};

	Parms.MsgAsset = MsgAsset;
	Parms.MsgLabel = MsgLabel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetDispMsgPos
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MsgTopLine                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::SetDispMsgPos(int32 MsgTopLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "SetDispMsgPos");

	Params::WB_MultiLineRichText_C_SetDispMsgPos Parms{};

	Parms.MsgTopLine = MsgTopLine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.AddMsgLine
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewLineMsg                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::AddMsgLine(const class FString& NewLineMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "AddMsgLine");

	Params::WB_MultiLineRichText_C_AddMsgLine Parms{};

	Parms.NewLineMsg = std::move(NewLineMsg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.ClearMsg
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_MultiLineRichText_C::ClearMsg()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "ClearMsg");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.CreateLineString
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FString>                   ReturnString                                           (Parm, OutParm)

void UWB_MultiLineRichText_C::CreateLineString(const class FString& InString, TArray<class FString>* ReturnString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "CreateLineString");

	Params::WB_MultiLineRichText_C_CreateLineString Parms{};

	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnString != nullptr)
		*ReturnString = std::move(Parms.ReturnString);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.scrollUp
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_MultiLineRichText_C::ScrollUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "scrollUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.scrollDown
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_MultiLineRichText_C::ScrollDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "scrollDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.PageUp
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_MultiLineRichText_C::PageUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "PageUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.PageDown
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_MultiLineRichText_C::PageDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "PageDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.MoveTop
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_MultiLineRichText_C::MoveTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "MoveTop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.MoveBottom
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_MultiLineRichText_C::MoveBottom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "MoveBottom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.ReloadText
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_MultiLineRichText_C::ReloadText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "ReloadText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.IsRequiredScroll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RequiredScroll                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_MultiLineRichText_C::IsRequiredScroll(bool* RequiredScroll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "IsRequiredScroll");

	Params::WB_MultiLineRichText_C_IsRequiredScroll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RequiredScroll != nullptr)
		*RequiredScroll = Parms.RequiredScroll;
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.GetScrollPosRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UWB_MultiLineRichText_C::GetScrollPosRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "GetScrollPosRate");

	Params::WB_MultiLineRichText_C_GetScrollPosRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.ApplyGrayOutLine
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LineIdx                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsGrayOut                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_MultiLineRichText_C::ApplyGrayOutLine(int32 LineIdx, bool IsGrayOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "ApplyGrayOutLine");

	Params::WB_MultiLineRichText_C_ApplyGrayOutLine Parms{};

	Parms.LineIdx = LineIdx;
	Parms.IsGrayOut = IsGrayOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetGrayOutLine
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           GrayOutLine                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_MultiLineRichText_C::SetGrayOutLine(TArray<int32>& GrayOutLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "SetGrayOutLine");

	Params::WB_MultiLineRichText_C_SetGrayOutLine Parms{};

	Parms.GrayOutLine = std::move(GrayOutLine);

	UObject::ProcessEvent(Func, &Parms);

	GrayOutLine = std::move(Parms.GrayOutLine);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetTextJustification
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETextJustify                            InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::SetTextJustification(ETextJustify InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "SetTextJustification");

	Params::WB_MultiLineRichText_C_SetTextJustification Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.GetMaxScrollOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MaxOffset                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::GetMaxScrollOffset(int32* MaxOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "GetMaxScrollOffset");

	Params::WB_MultiLineRichText_C_GetMaxScrollOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxOffset != nullptr)
		*MaxOffset = Parms.MaxOffset;
}


// Function WB_MultiLineRichText.WB_MultiLineRichText_C.GetScrollOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ScrollOffset                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MultiLineRichText_C::GetScrollOffset(int32* ScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MultiLineRichText_C", "GetScrollOffset");

	Params::WB_MultiLineRichText_C_GetScrollOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ScrollOffset != nullptr)
		*ScrollOffset = Parms.ScrollOffset;
}

}

