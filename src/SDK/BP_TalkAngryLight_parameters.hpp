#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TalkAngryLight

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_TalkAngryLight.BP_TalkAngryLight_C.ExecuteUbergraph_BP_TalkAngryLight
// 0x0114 (0x0114 - 0x0000)
struct BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0004(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight) == 0x000004, "Wrong alignment on BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight");
static_assert(sizeof(BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight) == 0x000114, "Wrong size on BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight");
static_assert(offsetof(BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight, EntryPoint) == 0x000000, "Member 'BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000004, "Member 'BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x00008C, "Member 'BP_TalkAngryLight_C_ExecuteUbergraph_BP_TalkAngryLight::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");

}

