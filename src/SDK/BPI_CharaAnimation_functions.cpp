#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CharaAnimation

#include "Basic.hpp"

#include "BPI_CharaAnimation_classes.hpp"
#include "BPI_CharaAnimation_parameters.hpp"


namespace SDK
{

// Function BPI_CharaAnimation.BPI_CharaAnimation_C.InitializeAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharaAnimation_C::InitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaAnimation_C", "InitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharaAnimation.BPI_CharaAnimation_C.UpdateAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharaAnimation_C::UpdateAnimation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaAnimation_C", "UpdateAnimation");

	Params::BPI_CharaAnimation_C_UpdateAnimation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharaAnimation.BPI_CharaAnimation_C.PostEvaluateAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharaAnimation_C::PostEvaluateAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaAnimation_C", "PostEvaluateAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharaAnimation.BPI_CharaAnimation_C.SetIsUpdateAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Update                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharaAnimation_C::SetIsUpdateAnimation(bool Update, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaAnimation_C", "SetIsUpdateAnimation");

	Params::BPI_CharaAnimation_C_SetIsUpdateAnimation Parms{};

	Parms.Update = Update;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_CharaAnimation.BPI_CharaAnimation_C.SetAlwaysAutoTransitionAnimationMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Check                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharaAnimation_C::SetAlwaysAutoTransitionAnimationMode(bool Check, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaAnimation_C", "SetAlwaysAutoTransitionAnimationMode");

	Params::BPI_CharaAnimation_C_SetAlwaysAutoTransitionAnimationMode Parms{};

	Parms.Check = Check;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BPI_CharaAnimation.BPI_CharaAnimation_C.SetIsUpdateIK
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Update                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharaAnimation_C::SetIsUpdateIK(bool Update, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaAnimation_C", "SetIsUpdateIK");

	Params::BPI_CharaAnimation_C_SetIsUpdateIK Parms{};

	Parms.Update = Update;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}

}

