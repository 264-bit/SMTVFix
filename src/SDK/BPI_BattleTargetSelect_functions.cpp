#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BattleTargetSelect

#include "Basic.hpp"

#include "BPI_BattleTargetSelect_classes.hpp"
#include "BPI_BattleTargetSelect_parameters.hpp"


namespace SDK
{

// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_GetCurrentTargetType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SKILL_TARGET                          TargetType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleTargetSelect_C::BI_GetCurrentTargetType(E_SKILL_TARGET* TargetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_GetCurrentTargetType");

	Params::BPI_BattleTargetSelect_C_BI_GetCurrentTargetType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetType != nullptr)
		*TargetType = Parms.TargetType;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_CalcLookAtGlobalPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SKILL_TARGET                          TargetType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GlobalPos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_CalcLookAtGlobalPos(E_SKILL_TARGET TargetType, class FName SocketName, struct FVector* GlobalPos, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_CalcLookAtGlobalPos");

	Params::BPI_BattleTargetSelect_C_BI_CalcLookAtGlobalPos Parms{};

	Parms.TargetType = TargetType;
	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);

	if (GlobalPos != nullptr)
		*GlobalPos = std::move(Parms.GlobalPos);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_GetInvTargetIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TargetIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleTargetSelect_C::BI_GetInvTargetIndex(int32* TargetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_GetInvTargetIndex");

	Params::BPI_BattleTargetSelect_C_BI_GetInvTargetIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetIndex != nullptr)
		*TargetIndex = Parms.TargetIndex;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_DrawClearAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_DrawClearAll(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_DrawClearAll");

	Params::BPI_BattleTargetSelect_C_BI_DrawClearAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_SetInvTargetIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TargetIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_SetInvTargetIndex(int32 TargetIndex, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_SetInvTargetIndex");

	Params::BPI_BattleTargetSelect_C_BI_SetInvTargetIndex Parms{};

	Parms.TargetIndex = TargetIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_SetOverrideCommandCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOverride                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_SetOverrideCommandCamera(bool IsOverride, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_SetOverrideCommandCamera");

	Params::BPI_BattleTargetSelect_C_BI_SetOverrideCommandCamera Parms{};

	Parms.IsOverride = IsOverride;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_IsOverrideCommandCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOverride                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_IsOverrideCommandCamera(bool* IsOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_IsOverrideCommandCamera");

	Params::BPI_BattleTargetSelect_C_BI_IsOverrideCommandCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOverride != nullptr)
		*IsOverride = Parms.IsOverride;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_SetPlayerTargetIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_SetPlayerTargetIndex(int32 PartyIndex, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_SetPlayerTargetIndex");

	Params::BPI_BattleTargetSelect_C_BI_SetPlayerTargetIndex Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_SetTargetType_Item
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_SetTargetType_Item(int32 ItemId, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_SetTargetType_Item");

	Params::BPI_BattleTargetSelect_C_BI_SetTargetType_Item Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_SetTargetType_Skill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_SetTargetType_Skill(int32 SkillId, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_SetTargetType_Skill");

	Params::BPI_BattleTargetSelect_C_BI_SetTargetType_Skill Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_GetCurrentTargetIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleTargetSelect_C::BI_GetCurrentTargetIndex(int32* PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_GetCurrentTargetIndex");

	Params::BPI_BattleTargetSelect_C_BI_GetCurrentTargetIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PartyIndex != nullptr)
		*PartyIndex = Parms.PartyIndex;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_SetCureHPExpection_Item
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UserIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_SetCureHPExpection_Item(int32 ItemId, int32 UserIndex, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_SetCureHPExpection_Item");

	Params::BPI_BattleTargetSelect_C_BI_SetCureHPExpection_Item Parms{};

	Parms.ItemId = ItemId;
	Parms.UserIndex = UserIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_SetCureHPExpection_Skill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UserIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_SetCureHPExpection_Skill(int32 SkillId, int32 UserIndex, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_SetCureHPExpection_Skill");

	Params::BPI_BattleTargetSelect_C_BI_SetCureHPExpection_Skill Parms{};

	Parms.SkillId = SkillId;
	Parms.UserIndex = UserIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_DirectSelectTargetIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleTargetSelect_C::BI_DirectSelectTargetIndex(int32 PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_DirectSelectTargetIndex");

	Params::BPI_BattleTargetSelect_C_BI_DirectSelectTargetIndex Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_DirectDecideTargetIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleTargetSelect_C::BI_DirectDecideTargetIndex(int32 PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_DirectDecideTargetIndex");

	Params::BPI_BattleTargetSelect_C_BI_DirectDecideTargetIndex Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_IsDirectDicided
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDecided                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleTargetSelect_C::BI_IsDirectDicided(bool* IsDecided)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_IsDirectDicided");

	Params::BPI_BattleTargetSelect_C_BI_IsDirectDicided Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDecided != nullptr)
		*IsDecided = Parms.IsDecided;
}


// Function BPI_BattleTargetSelect.BPI_BattleTargetSelect_C.BI_ResetDirectDicided
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_BattleTargetSelect_C::BI_ResetDirectDicided()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleTargetSelect_C", "BI_ResetDirectDicided");

	UObject::ProcessEvent(Func, nullptr);
}

}

