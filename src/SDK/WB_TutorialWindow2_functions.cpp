#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TutorialWindow2

#include "Basic.hpp"

#include "WB_TutorialWindow2_classes.hpp"
#include "WB_TutorialWindow2_parameters.hpp"


namespace SDK
{

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.MouseEvent_MovedScrollBar__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ScrollRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::MouseEvent_MovedScrollBar__DelegateSignature(float ScrollRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "MouseEvent_MovedScrollBar__DelegateSignature");

	Params::WB_TutorialWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature Parms{};

	Parms.ScrollRate = ScrollRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.ExecuteUbergraph_WB_TutorialWindow2
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::ExecuteUbergraph_WB_TutorialWindow2(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "ExecuteUbergraph_WB_TutorialWindow2");

	Params::WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_TutorialWindow2_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Tick");

	Params::WB_TutorialWindow2_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "PreConstruct");

	Params::WB_TutorialWindow2_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_TutorialWindow2_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.GetAnimState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_TutorialWindow_WidgetState            Param_AnimState                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::GetAnimState(E_TutorialWindow_WidgetState* Param_AnimState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "GetAnimState");

	Params::WB_TutorialWindow2_C_GetAnimState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimState != nullptr)
		*Param_AnimState = Parms.Param_AnimState;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetAnimState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TutorialWindow_WidgetState            InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::SetAnimState(E_TutorialWindow_WidgetState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetAnimState");

	Params::WB_TutorialWindow2_C_SetAnimState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Tick_Base
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TutorialWindow2_C::Tick_Base()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Tick_Base");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Tick_FrameIn
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TutorialWindow2_C::Tick_FrameIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Tick_FrameIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Tick_FrameOut
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TutorialWindow2_C::Tick_FrameOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Tick_FrameOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.GetScrollState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsRequiredScroll                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ScrollPosRate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ScrollOffset                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::GetScrollState(bool* IsRequiredScroll, float* ScrollPosRate, int32* ScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "GetScrollState");

	Params::WB_TutorialWindow2_C_GetScrollState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsRequiredScroll != nullptr)
		*IsRequiredScroll = Parms.IsRequiredScroll;

	if (ScrollPosRate != nullptr)
		*ScrollPosRate = Parms.ScrollPosRate;

	if (ScrollOffset != nullptr)
		*ScrollOffset = Parms.ScrollOffset;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.GetMaxScrollOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MaxOffset                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::GetMaxScrollOffset(int32* MaxOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "GetMaxScrollOffset");

	Params::WB_TutorialWindow2_C_GetMaxScrollOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxOffset != nullptr)
		*MaxOffset = Parms.MaxOffset;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetScrollOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InScrollOffset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsScrolled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::SetScrollOffset(int32 InScrollOffset, bool* IsScrolled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetScrollOffset");

	Params::WB_TutorialWindow2_C_SetScrollOffset Parms{};

	Parms.InScrollOffset = InScrollOffset;

	UObject::ProcessEvent(Func, &Parms);

	if (IsScrolled != nullptr)
		*IsScrolled = Parms.IsScrolled;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Scroll_Up
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsScrolled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::Scroll_Up(bool* IsScrolled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Scroll_Up");

	Params::WB_TutorialWindow2_C_Scroll_Up Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsScrolled != nullptr)
		*IsScrolled = Parms.IsScrolled;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Scroll_Down
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsScrolled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::Scroll_Down(bool* IsScrolled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Scroll_Down");

	Params::WB_TutorialWindow2_C_Scroll_Down Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsScrolled != nullptr)
		*IsScrolled = Parms.IsScrolled;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Page_Up
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsScrolled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::Page_Up(bool* IsScrolled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Page_Up");

	Params::WB_TutorialWindow2_C_Page_Up Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsScrolled != nullptr)
		*IsScrolled = Parms.IsScrolled;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Page_Down
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsScrolled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::Page_Down(bool* IsScrolled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Page_Down");

	Params::WB_TutorialWindow2_C_Page_Down Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsScrolled != nullptr)
		*IsScrolled = Parms.IsScrolled;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetTitle_byID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              InMessageAsset                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMessageId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::SetTitle_byID(const class UScriptMessageAsset*& InMessageAsset, int32 InMessageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetTitle_byID");

	Params::WB_TutorialWindow2_C_SetTitle_byID Parms{};

	Parms.InMessageAsset = InMessageAsset;
	Parms.InMessageId = InMessageId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetTitle_byLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              InMessageAsset                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InMessageLabel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::SetTitle_byLabel(const class UScriptMessageAsset*& InMessageAsset, class FName InMessageLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetTitle_byLabel");

	Params::WB_TutorialWindow2_C_SetTitle_byLabel Parms{};

	Parms.InMessageAsset = InMessageAsset;
	Parms.InMessageLabel = InMessageLabel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetJustification
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETextJustify                            InJustification                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::SetJustification(ETextJustify InJustification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetJustification");

	Params::WB_TutorialWindow2_C_SetJustification Parms{};

	Parms.InJustification = InJustification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetMainText_byID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              InMessageAsset                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMessageId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::SetMainText_byID(const class UScriptMessageAsset*& InMessageAsset, int32 InMessageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetMainText_byID");

	Params::WB_TutorialWindow2_C_SetMainText_byID Parms{};

	Parms.InMessageAsset = InMessageAsset;
	Parms.InMessageId = InMessageId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetMainText_byLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              InMessageAsset                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InMessageLabel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::SetMainText_byLabel(const class UScriptMessageAsset*& InMessageAsset, class FName InMessageLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetMainText_byLabel");

	Params::WB_TutorialWindow2_C_SetMainText_byLabel Parms{};

	Parms.InMessageAsset = InMessageAsset;
	Parms.InMessageLabel = InMessageLabel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_ReleasedKamui
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOpenedByEvent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             InEventMsgLabel                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           InOpenedKamuiID                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_TutorialWindow2_C::SetText_ReleasedKamui(bool IsOpenedByEvent, class FName InEventMsgLabel, TArray<int32>& InOpenedKamuiID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetText_ReleasedKamui");

	Params::WB_TutorialWindow2_C_SetText_ReleasedKamui Parms{};

	Parms.IsOpenedByEvent = IsOpenedByEvent;
	Parms.InEventMsgLabel = InEventMsgLabel;
	Parms.InOpenedKamuiID = std::move(InOpenedKamuiID);

	UObject::ProcessEvent(Func, &Parms);

	InOpenedKamuiID = std::move(Parms.InOpenedKamuiID);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_MimanReward
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_TutorialWindow2_C::SetText_MimanReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetText_MimanReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_AmuletMsg
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AmuletTutorial_MsgType                InAmuletType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::SetText_AmuletMsg(E_AmuletTutorial_MsgType InAmuletType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetText_AmuletMsg");

	Params::WB_TutorialWindow2_C_SetText_AmuletMsg Parms{};

	Parms.InAmuletType = InAmuletType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_IconHelp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_TutorialWindow2_C::SetText_IconHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetText_IconHelp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_ApplyDLC
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     InContentsMsgLabel                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_TutorialWindow2_C::SetText_ApplyDLC(TArray<class FName>& InContentsMsgLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetText_ApplyDLC");

	Params::WB_TutorialWindow2_C_SetText_ApplyDLC Parms{};

	Parms.InContentsMsgLabel = std::move(InContentsMsgLabel);

	UObject::ProcessEvent(Func, &Parms);

	InContentsMsgLabel = std::move(Parms.InContentsMsgLabel);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetVisibility_BlackCurtain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVivible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::SetVisibility_BlackCurtain(bool IsVivible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetVisibility_BlackCurtain");

	Params::WB_TutorialWindow2_C_SetVisibility_BlackCurtain Parms{};

	Parms.IsVivible = IsVivible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_InvalidDLC
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     InContentsMsgLabel                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_TutorialWindow2_C::SetText_InvalidDLC(TArray<class FName>& InContentsMsgLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetText_InvalidDLC");

	Params::WB_TutorialWindow2_C_SetText_InvalidDLC Parms{};

	Parms.InContentsMsgLabel = std::move(InContentsMsgLabel);

	UObject::ProcessEvent(Func, &Parms);

	InContentsMsgLabel = std::move(Parms.InContentsMsgLabel);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_byEnum
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TUTORIAL_WINDOW_MESSAGE_TYPE          InEnumPattern                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::SetText_byEnum(E_TUTORIAL_WINDOW_MESSAGE_TYPE InEnumPattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetText_byEnum");

	Params::WB_TutorialWindow2_C_SetText_byEnum Parms{};

	Parms.InEnumPattern = InEnumPattern;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Move_Top
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsScrolled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::Move_Top(bool* IsScrolled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Move_Top");

	Params::WB_TutorialWindow2_C_Move_Top Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsScrolled != nullptr)
		*IsScrolled = Parms.IsScrolled;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Move_Bottom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsScrolled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::Move_Bottom(bool* IsScrolled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "Move_Bottom");

	Params::WB_TutorialWindow2_C_Move_Bottom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsScrolled != nullptr)
		*IsScrolled = Parms.IsScrolled;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.IsEnableMouseWheel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEnableScroll                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::IsEnableMouseWheel(bool* IsEnableScroll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "IsEnableMouseWheel");

	Params::WB_TutorialWindow2_C_IsEnableMouseWheel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnableScroll != nullptr)
		*IsEnableScroll = Parms.IsEnableScroll;
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.OnMovedScrollBar_ByMouse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InScrollRate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialWindow2_C::OnMovedScrollBar_ByMouse(float InScrollRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "OnMovedScrollBar_ByMouse");

	Params::WB_TutorialWindow2_C_OnMovedScrollBar_ByMouse Parms{};

	Parms.InScrollRate = InScrollRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetBtnHelpMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamePad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::SetBtnHelpMode(bool IsGamePad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetBtnHelpMode");

	Params::WB_TutorialWindow2_C_SetBtnHelpMode Parms{};

	Parms.IsGamePad = IsGamePad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.UpdateBtnHelpInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_TutorialWindow2_C::UpdateBtnHelpInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "UpdateBtnHelpInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_BenefitItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InTitleLabel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBenefitItemMsgDataList          InItemMsgList                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_TutorialWindow2_C::SetText_BenefitItem(class FName InTitleLabel, struct FBenefitItemMsgDataList& InItemMsgList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetText_BenefitItem");

	Params::WB_TutorialWindow2_C_SetText_BenefitItem Parms{};

	Parms.InTitleLabel = InTitleLabel;
	Parms.InItemMsgList = std::move(InItemMsgList);

	UObject::ProcessEvent(Func, &Parms);

	InItemMsgList = std::move(Parms.InItemMsgList);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_BenefitDevil
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InTitleLabel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBenefitDevilMsgDataList         InDevilMsgList                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_TutorialWindow2_C::SetText_BenefitDevil(class FName InTitleLabel, struct FBenefitDevilMsgDataList& InDevilMsgList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetText_BenefitDevil");

	Params::WB_TutorialWindow2_C_SetText_BenefitDevil Parms{};

	Parms.InTitleLabel = InTitleLabel;
	Parms.InDevilMsgList = std::move(InDevilMsgList);

	UObject::ProcessEvent(Func, &Parms);

	InDevilMsgList = std::move(Parms.InDevilMsgList);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetCloseIconType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsEscClose                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_TutorialWindow2_C::SetCloseIconType(bool Param_IsEscClose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "SetCloseIconType");

	Params::WB_TutorialWindow2_C_SetCloseIconType Parms{};

	Parms.Param_IsEscClose = Param_IsEscClose;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.ReloadMainText
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TutorialWindow2_C::ReloadMainText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "ReloadMainText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialWindow2.WB_TutorialWindow2_C.ReloadKeyboardHelpText
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_TutorialWindow2_C::ReloadKeyboardHelpText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialWindow2_C", "ReloadKeyboardHelpText");

	UObject::ProcessEvent(Func, nullptr);
}

}

