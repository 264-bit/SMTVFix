#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Dev117

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DevilBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Dev117.Dev117_C
// 0x0058 (0x0AA8 - 0x0A50)
class ADev117_C final : public ADevilBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Dev117_C;                           // 0x0A50(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpringArmComponent*                    SpringArm_Up;                                      // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ParentRotationScene_C*              BP_ParentRotationScene;                            // 0x0A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaStepSmootherComponent_C*          StepSmoother;                                      // 0x0A68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaEyeComponent_C*                   RightEye;                                          // 0x0A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaEyeComponent_C*                   LeftEye;                                           // 0x0A78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaHeadComponent_C*                  Head;                                              // 0x0A80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaLegComponent_C*                   HindRightLeg;                                      // 0x0A88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaLegComponent_C*                   HindLeftLeg;                                       // 0x0A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaLegComponent_C*                   ForeRightLeg;                                      // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaLegComponent_C*                   ForeLeftLeg;                                       // 0x0AA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Dev117(int32 EntryPoint);
	void BndEvt__DevilMovement_K2Node_ComponentBoundEvent_0_CharaMovementUpdatedSignature__DelegateSignature();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Dev117_C">();
	}
	static class ADev117_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADev117_C>();
	}
};
static_assert(alignof(ADev117_C) == 0x000008, "Wrong alignment on ADev117_C");
static_assert(sizeof(ADev117_C) == 0x000AA8, "Wrong size on ADev117_C");
static_assert(offsetof(ADev117_C, UberGraphFrame_Dev117_C) == 0x000A50, "Member 'ADev117_C::UberGraphFrame_Dev117_C' has a wrong offset!");
static_assert(offsetof(ADev117_C, SpringArm_Up) == 0x000A58, "Member 'ADev117_C::SpringArm_Up' has a wrong offset!");
static_assert(offsetof(ADev117_C, BP_ParentRotationScene) == 0x000A60, "Member 'ADev117_C::BP_ParentRotationScene' has a wrong offset!");
static_assert(offsetof(ADev117_C, StepSmoother) == 0x000A68, "Member 'ADev117_C::StepSmoother' has a wrong offset!");
static_assert(offsetof(ADev117_C, RightEye) == 0x000A70, "Member 'ADev117_C::RightEye' has a wrong offset!");
static_assert(offsetof(ADev117_C, LeftEye) == 0x000A78, "Member 'ADev117_C::LeftEye' has a wrong offset!");
static_assert(offsetof(ADev117_C, Head) == 0x000A80, "Member 'ADev117_C::Head' has a wrong offset!");
static_assert(offsetof(ADev117_C, HindRightLeg) == 0x000A88, "Member 'ADev117_C::HindRightLeg' has a wrong offset!");
static_assert(offsetof(ADev117_C, HindLeftLeg) == 0x000A90, "Member 'ADev117_C::HindLeftLeg' has a wrong offset!");
static_assert(offsetof(ADev117_C, ForeRightLeg) == 0x000A98, "Member 'ADev117_C::ForeRightLeg' has a wrong offset!");
static_assert(offsetof(ADev117_C, ForeLeftLeg) == 0x000AA0, "Member 'ADev117_C::ForeLeftLeg' has a wrong offset!");

}

