#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapAreaName_IgnorePause

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MapEventHit_Type_INOUT_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MapAreaName_IgnorePause.BP_MapAreaName_IgnorePause_C
// 0x0028 (0x03E0 - 0x03B8)
class ABP_MapAreaName_IgnorePause_C final : public AMapEventHit_Type_INOUT_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MapAreaName_IgnorePause_C;       // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMEC_AreaNameOut_C*                     MEC_AreaNameOut;                                   // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMEC_AreaNameIn_C*                      MEC_AreaNameIn;                                    // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   AreaNameLabel;                                     // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Priority;                                          // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MapAreaName_IgnorePause(int32 EntryPoint);
	void EventHitOUT();
	void EventHitIN();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MapAreaName_IgnorePause_C">();
	}
	static class ABP_MapAreaName_IgnorePause_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MapAreaName_IgnorePause_C>();
	}
};
static_assert(alignof(ABP_MapAreaName_IgnorePause_C) == 0x000008, "Wrong alignment on ABP_MapAreaName_IgnorePause_C");
static_assert(sizeof(ABP_MapAreaName_IgnorePause_C) == 0x0003E0, "Wrong size on ABP_MapAreaName_IgnorePause_C");
static_assert(offsetof(ABP_MapAreaName_IgnorePause_C, UberGraphFrame_BP_MapAreaName_IgnorePause_C) == 0x0003B8, "Member 'ABP_MapAreaName_IgnorePause_C::UberGraphFrame_BP_MapAreaName_IgnorePause_C' has a wrong offset!");
static_assert(offsetof(ABP_MapAreaName_IgnorePause_C, MEC_AreaNameOut) == 0x0003C0, "Member 'ABP_MapAreaName_IgnorePause_C::MEC_AreaNameOut' has a wrong offset!");
static_assert(offsetof(ABP_MapAreaName_IgnorePause_C, MEC_AreaNameIn) == 0x0003C8, "Member 'ABP_MapAreaName_IgnorePause_C::MEC_AreaNameIn' has a wrong offset!");
static_assert(offsetof(ABP_MapAreaName_IgnorePause_C, AreaNameLabel) == 0x0003D0, "Member 'ABP_MapAreaName_IgnorePause_C::AreaNameLabel' has a wrong offset!");
static_assert(offsetof(ABP_MapAreaName_IgnorePause_C, Priority) == 0x0003D8, "Member 'ABP_MapAreaName_IgnorePause_C::Priority' has a wrong offset!");

}

