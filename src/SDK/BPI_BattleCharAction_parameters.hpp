#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BattleCharAction

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_BattleCharAction.BPI_BattleCharAction_C.BPI_GetActorIndex
// 0x0004 (0x0004 - 0x0000)
struct BPI_BattleCharAction_C_BPI_GetActorIndex final
{
public:
	int32                                         Ret;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharAction_C_BPI_GetActorIndex) == 0x000004, "Wrong alignment on BPI_BattleCharAction_C_BPI_GetActorIndex");
static_assert(sizeof(BPI_BattleCharAction_C_BPI_GetActorIndex) == 0x000004, "Wrong size on BPI_BattleCharAction_C_BPI_GetActorIndex");
static_assert(offsetof(BPI_BattleCharAction_C_BPI_GetActorIndex, Ret) == 0x000000, "Member 'BPI_BattleCharAction_C_BPI_GetActorIndex::Ret' has a wrong offset!");

// Function BPI_BattleCharAction.BPI_BattleCharAction_C.BPI_SetSelectList
// 0x0018 (0x0018 - 0x0000)
struct BPI_BattleCharAction_C_BPI_SetSelectList final
{
public:
	TArray<uint8>                                 List;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Ret;                                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharAction_C_BPI_SetSelectList) == 0x000008, "Wrong alignment on BPI_BattleCharAction_C_BPI_SetSelectList");
static_assert(sizeof(BPI_BattleCharAction_C_BPI_SetSelectList) == 0x000018, "Wrong size on BPI_BattleCharAction_C_BPI_SetSelectList");
static_assert(offsetof(BPI_BattleCharAction_C_BPI_SetSelectList, List) == 0x000000, "Member 'BPI_BattleCharAction_C_BPI_SetSelectList::List' has a wrong offset!");
static_assert(offsetof(BPI_BattleCharAction_C_BPI_SetSelectList, Ret) == 0x000010, "Member 'BPI_BattleCharAction_C_BPI_SetSelectList::Ret' has a wrong offset!");

// Function BPI_BattleCharAction.BPI_BattleCharAction_C.BPI_GetSelectList
// 0x0010 (0x0010 - 0x0000)
struct BPI_BattleCharAction_C_BPI_GetSelectList final
{
public:
	TArray<uint8>                                 List;                                              // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_BattleCharAction_C_BPI_GetSelectList) == 0x000008, "Wrong alignment on BPI_BattleCharAction_C_BPI_GetSelectList");
static_assert(sizeof(BPI_BattleCharAction_C_BPI_GetSelectList) == 0x000010, "Wrong size on BPI_BattleCharAction_C_BPI_GetSelectList");
static_assert(offsetof(BPI_BattleCharAction_C_BPI_GetSelectList, List) == 0x000000, "Member 'BPI_BattleCharAction_C_BPI_GetSelectList::List' has a wrong offset!");

// Function BPI_BattleCharAction.BPI_BattleCharAction_C.BPI_ClearSelectList
// 0x0001 (0x0001 - 0x0000)
struct BPI_BattleCharAction_C_BPI_ClearSelectList final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BattleCharAction_C_BPI_ClearSelectList) == 0x000001, "Wrong alignment on BPI_BattleCharAction_C_BPI_ClearSelectList");
static_assert(sizeof(BPI_BattleCharAction_C_BPI_ClearSelectList) == 0x000001, "Wrong size on BPI_BattleCharAction_C_BPI_ClearSelectList");
static_assert(offsetof(BPI_BattleCharAction_C_BPI_ClearSelectList, Ret) == 0x000000, "Member 'BPI_BattleCharAction_C_BPI_ClearSelectList::Ret' has a wrong offset!");

// Function BPI_BattleCharAction.BPI_BattleCharAction_C.BPI_ApplySummon
// 0x0004 (0x0004 - 0x0000)
struct BPI_BattleCharAction_C_BPI_ApplySummon final
{
public:
	int32                                         Ret;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharAction_C_BPI_ApplySummon) == 0x000004, "Wrong alignment on BPI_BattleCharAction_C_BPI_ApplySummon");
static_assert(sizeof(BPI_BattleCharAction_C_BPI_ApplySummon) == 0x000004, "Wrong size on BPI_BattleCharAction_C_BPI_ApplySummon");
static_assert(offsetof(BPI_BattleCharAction_C_BPI_ApplySummon, Ret) == 0x000000, "Member 'BPI_BattleCharAction_C_BPI_ApplySummon::Ret' has a wrong offset!");

// Function BPI_BattleCharAction.BPI_BattleCharAction_C.BPI_SupportTsukuyomiSummon
// 0x0004 (0x0004 - 0x0000)
struct BPI_BattleCharAction_C_BPI_SupportTsukuyomiSummon final
{
public:
	int32                                         Ret;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BattleCharAction_C_BPI_SupportTsukuyomiSummon) == 0x000004, "Wrong alignment on BPI_BattleCharAction_C_BPI_SupportTsukuyomiSummon");
static_assert(sizeof(BPI_BattleCharAction_C_BPI_SupportTsukuyomiSummon) == 0x000004, "Wrong size on BPI_BattleCharAction_C_BPI_SupportTsukuyomiSummon");
static_assert(offsetof(BPI_BattleCharAction_C_BPI_SupportTsukuyomiSummon, Ret) == 0x000000, "Member 'BPI_BattleCharAction_C_BPI_SupportTsukuyomiSummon::Ret' has a wrong offset!");

// Function BPI_BattleCharAction.BPI_BattleCharAction_C.BPL_GetReflectCharaList
// 0x0010 (0x0010 - 0x0000)
struct BPI_BattleCharAction_C_BPL_GetReflectCharaList final
{
public:
	TArray<int32>                                 Ret;                                               // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_BattleCharAction_C_BPL_GetReflectCharaList) == 0x000008, "Wrong alignment on BPI_BattleCharAction_C_BPL_GetReflectCharaList");
static_assert(sizeof(BPI_BattleCharAction_C_BPL_GetReflectCharaList) == 0x000010, "Wrong size on BPI_BattleCharAction_C_BPL_GetReflectCharaList");
static_assert(offsetof(BPI_BattleCharAction_C_BPL_GetReflectCharaList, Ret) == 0x000000, "Member 'BPI_BattleCharAction_C_BPL_GetReflectCharaList::Ret' has a wrong offset!");

}

