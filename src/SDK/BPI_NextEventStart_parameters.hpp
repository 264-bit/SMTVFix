#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_NextEventStart

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_NextEventStart.BPI_NextEventStart_C.BPI_GetMapEventId
// 0x0004 (0x0004 - 0x0000)
struct BPI_NextEventStart_C_BPI_GetMapEventId final
{
public:
	int32                                         MapEventID;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NextEventStart_C_BPI_GetMapEventId) == 0x000004, "Wrong alignment on BPI_NextEventStart_C_BPI_GetMapEventId");
static_assert(sizeof(BPI_NextEventStart_C_BPI_GetMapEventId) == 0x000004, "Wrong size on BPI_NextEventStart_C_BPI_GetMapEventId");
static_assert(offsetof(BPI_NextEventStart_C_BPI_GetMapEventId, MapEventID) == 0x000000, "Member 'BPI_NextEventStart_C_BPI_GetMapEventId::MapEventID' has a wrong offset!");

// Function BPI_NextEventStart.BPI_NextEventStart_C.BPI_GetHitBoxSize
// 0x000C (0x000C - 0x0000)
struct BPI_NextEventStart_C_BPI_GetHitBoxSize final
{
public:
	struct FVector                                Size;                                              // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NextEventStart_C_BPI_GetHitBoxSize) == 0x000004, "Wrong alignment on BPI_NextEventStart_C_BPI_GetHitBoxSize");
static_assert(sizeof(BPI_NextEventStart_C_BPI_GetHitBoxSize) == 0x00000C, "Wrong size on BPI_NextEventStart_C_BPI_GetHitBoxSize");
static_assert(offsetof(BPI_NextEventStart_C_BPI_GetHitBoxSize, Size) == 0x000000, "Member 'BPI_NextEventStart_C_BPI_GetHitBoxSize::Size' has a wrong offset!");

// Function BPI_NextEventStart.BPI_NextEventStart_C.BPI_GetDebugMemo
// 0x0018 (0x0018 - 0x0000)
struct BPI_NextEventStart_C_BPI_GetDebugMemo final
{
public:
	class FText                                   Memo;                                              // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(BPI_NextEventStart_C_BPI_GetDebugMemo) == 0x000008, "Wrong alignment on BPI_NextEventStart_C_BPI_GetDebugMemo");
static_assert(sizeof(BPI_NextEventStart_C_BPI_GetDebugMemo) == 0x000018, "Wrong size on BPI_NextEventStart_C_BPI_GetDebugMemo");
static_assert(offsetof(BPI_NextEventStart_C_BPI_GetDebugMemo, Memo) == 0x000000, "Member 'BPI_NextEventStart_C_BPI_GetDebugMemo::Memo' has a wrong offset!");

// Function BPI_NextEventStart.BPI_NextEventStart_C.BPI_CheckMissionEvent
// 0x0001 (0x0001 - 0x0000)
struct BPI_NextEventStart_C_BPI_CheckMissionEvent final
{
public:
	bool                                          MissionEvent;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NextEventStart_C_BPI_CheckMissionEvent) == 0x000001, "Wrong alignment on BPI_NextEventStart_C_BPI_CheckMissionEvent");
static_assert(sizeof(BPI_NextEventStart_C_BPI_CheckMissionEvent) == 0x000001, "Wrong size on BPI_NextEventStart_C_BPI_CheckMissionEvent");
static_assert(offsetof(BPI_NextEventStart_C_BPI_CheckMissionEvent, MissionEvent) == 0x000000, "Member 'BPI_NextEventStart_C_BPI_CheckMissionEvent::MissionEvent' has a wrong offset!");

// Function BPI_NextEventStart.BPI_NextEventStart_C.BPI_CheckMiman
// 0x0001 (0x0001 - 0x0000)
struct BPI_NextEventStart_C_BPI_CheckMiman final
{
public:
	bool                                          Miman;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NextEventStart_C_BPI_CheckMiman) == 0x000001, "Wrong alignment on BPI_NextEventStart_C_BPI_CheckMiman");
static_assert(sizeof(BPI_NextEventStart_C_BPI_CheckMiman) == 0x000001, "Wrong size on BPI_NextEventStart_C_BPI_CheckMiman");
static_assert(offsetof(BPI_NextEventStart_C_BPI_CheckMiman, Miman) == 0x000000, "Member 'BPI_NextEventStart_C_BPI_CheckMiman::Miman' has a wrong offset!");

// Function BPI_NextEventStart.BPI_NextEventStart_C.BPI_CheckNaviDevil
// 0x0001 (0x0001 - 0x0000)
struct BPI_NextEventStart_C_BPI_CheckNaviDevil final
{
public:
	bool                                          NaviDevil;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NextEventStart_C_BPI_CheckNaviDevil) == 0x000001, "Wrong alignment on BPI_NextEventStart_C_BPI_CheckNaviDevil");
static_assert(sizeof(BPI_NextEventStart_C_BPI_CheckNaviDevil) == 0x000001, "Wrong size on BPI_NextEventStart_C_BPI_CheckNaviDevil");
static_assert(offsetof(BPI_NextEventStart_C_BPI_CheckNaviDevil, NaviDevil) == 0x000000, "Member 'BPI_NextEventStart_C_BPI_CheckNaviDevil::NaviDevil' has a wrong offset!");

}

