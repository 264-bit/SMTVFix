#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaRotateComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function CharaRotateComponent.CharaRotateComponent_C.GetTalkMotion
// 0x0050 (0x0050 - 0x0000)
struct CharaRotateComponent_C_GetTalkMotion final
{
public:
	TSoftObjectPtr<class UAnimSequenceBase>       Ret;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(CharaRotateComponent_C_GetTalkMotion) == 0x000008, "Wrong alignment on CharaRotateComponent_C_GetTalkMotion");
static_assert(sizeof(CharaRotateComponent_C_GetTalkMotion) == 0x000050, "Wrong size on CharaRotateComponent_C_GetTalkMotion");
static_assert(offsetof(CharaRotateComponent_C_GetTalkMotion, Ret) == 0x000000, "Member 'CharaRotateComponent_C_GetTalkMotion::Ret' has a wrong offset!");
static_assert(offsetof(CharaRotateComponent_C_GetTalkMotion, CallFunc_Array_Get_Item) == 0x000028, "Member 'CharaRotateComponent_C_GetTalkMotion::CallFunc_Array_Get_Item' has a wrong offset!");

// Function CharaRotateComponent.CharaRotateComponent_C.GetRightRotate
// 0x0050 (0x0050 - 0x0000)
struct CharaRotateComponent_C_GetRightRotate final
{
public:
	TSoftObjectPtr<class UAnimSequenceBase>       Ret;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(CharaRotateComponent_C_GetRightRotate) == 0x000008, "Wrong alignment on CharaRotateComponent_C_GetRightRotate");
static_assert(sizeof(CharaRotateComponent_C_GetRightRotate) == 0x000050, "Wrong size on CharaRotateComponent_C_GetRightRotate");
static_assert(offsetof(CharaRotateComponent_C_GetRightRotate, Ret) == 0x000000, "Member 'CharaRotateComponent_C_GetRightRotate::Ret' has a wrong offset!");
static_assert(offsetof(CharaRotateComponent_C_GetRightRotate, CallFunc_Array_Get_Item) == 0x000028, "Member 'CharaRotateComponent_C_GetRightRotate::CallFunc_Array_Get_Item' has a wrong offset!");

// Function CharaRotateComponent.CharaRotateComponent_C.GetLeftRotate
// 0x0050 (0x0050 - 0x0000)
struct CharaRotateComponent_C_GetLeftRotate final
{
public:
	TSoftObjectPtr<class UAnimSequenceBase>       Ret;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(CharaRotateComponent_C_GetLeftRotate) == 0x000008, "Wrong alignment on CharaRotateComponent_C_GetLeftRotate");
static_assert(sizeof(CharaRotateComponent_C_GetLeftRotate) == 0x000050, "Wrong size on CharaRotateComponent_C_GetLeftRotate");
static_assert(offsetof(CharaRotateComponent_C_GetLeftRotate, Ret) == 0x000000, "Member 'CharaRotateComponent_C_GetLeftRotate::Ret' has a wrong offset!");
static_assert(offsetof(CharaRotateComponent_C_GetLeftRotate, CallFunc_Array_Get_Item) == 0x000028, "Member 'CharaRotateComponent_C_GetLeftRotate::CallFunc_Array_Get_Item' has a wrong offset!");

// Function CharaRotateComponent.CharaRotateComponent_C.GetIdleMotion
// 0x0050 (0x0050 - 0x0000)
struct CharaRotateComponent_C_GetIdleMotion final
{
public:
	TSoftObjectPtr<class UAnimSequenceBase>       Ret;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimSequenceBase>       CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(CharaRotateComponent_C_GetIdleMotion) == 0x000008, "Wrong alignment on CharaRotateComponent_C_GetIdleMotion");
static_assert(sizeof(CharaRotateComponent_C_GetIdleMotion) == 0x000050, "Wrong size on CharaRotateComponent_C_GetIdleMotion");
static_assert(offsetof(CharaRotateComponent_C_GetIdleMotion, Ret) == 0x000000, "Member 'CharaRotateComponent_C_GetIdleMotion::Ret' has a wrong offset!");
static_assert(offsetof(CharaRotateComponent_C_GetIdleMotion, CallFunc_Array_Get_Item) == 0x000028, "Member 'CharaRotateComponent_C_GetIdleMotion::CallFunc_Array_Get_Item' has a wrong offset!");

// Function CharaRotateComponent.CharaRotateComponent_C.GetRotateBlend
// 0x0050 (0x0050 - 0x0000)
struct CharaRotateComponent_C_GetRotateBlend final
{
public:
	TSoftObjectPtr<class UBlendSpace1D>           Ret;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UBlendSpace1D>           CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(CharaRotateComponent_C_GetRotateBlend) == 0x000008, "Wrong alignment on CharaRotateComponent_C_GetRotateBlend");
static_assert(sizeof(CharaRotateComponent_C_GetRotateBlend) == 0x000050, "Wrong size on CharaRotateComponent_C_GetRotateBlend");
static_assert(offsetof(CharaRotateComponent_C_GetRotateBlend, Ret) == 0x000000, "Member 'CharaRotateComponent_C_GetRotateBlend::Ret' has a wrong offset!");
static_assert(offsetof(CharaRotateComponent_C_GetRotateBlend, CallFunc_Array_Get_Item) == 0x000028, "Member 'CharaRotateComponent_C_GetRotateBlend::CallFunc_Array_Get_Item' has a wrong offset!");

// Function CharaRotateComponent.CharaRotateComponent_C.SetIndex
// 0x0004 (0x0004 - 0x0000)
struct CharaRotateComponent_C_SetIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaRotateComponent_C_SetIndex) == 0x000004, "Wrong alignment on CharaRotateComponent_C_SetIndex");
static_assert(sizeof(CharaRotateComponent_C_SetIndex) == 0x000004, "Wrong size on CharaRotateComponent_C_SetIndex");
static_assert(offsetof(CharaRotateComponent_C_SetIndex, Param_Index) == 0x000000, "Member 'CharaRotateComponent_C_SetIndex::Param_Index' has a wrong offset!");

}

