#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerAnimNotifyReceiver

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_PlayerAnimNotifyReceiver.BPI_PlayerAnimNotifyReceiver_C.Notify_ForceEnableMovementInput
// 0x0008 (0x0008 - 0x0000)
struct BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput final
{
public:
	float                                         EnableTime;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMovement;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRotate;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput) == 0x000004, "Wrong alignment on BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput");
static_assert(sizeof(BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput) == 0x000008, "Wrong size on BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput, EnableTime) == 0x000000, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput::EnableTime' has a wrong offset!");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput, bMovement) == 0x000004, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput::bMovement' has a wrong offset!");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput, bRotate) == 0x000005, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_ForceEnableMovementInput::bRotate' has a wrong offset!");

// Function BPI_PlayerAnimNotifyReceiver.BPI_PlayerAnimNotifyReceiver_C.Notify_SetAcceptableCancelAttack
// 0x0001 (0x0001 - 0x0000)
struct BPI_PlayerAnimNotifyReceiver_C_Notify_SetAcceptableCancelAttack final
{
public:
	bool                                          bAcceptable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerAnimNotifyReceiver_C_Notify_SetAcceptableCancelAttack) == 0x000001, "Wrong alignment on BPI_PlayerAnimNotifyReceiver_C_Notify_SetAcceptableCancelAttack");
static_assert(sizeof(BPI_PlayerAnimNotifyReceiver_C_Notify_SetAcceptableCancelAttack) == 0x000001, "Wrong size on BPI_PlayerAnimNotifyReceiver_C_Notify_SetAcceptableCancelAttack");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_SetAcceptableCancelAttack, bAcceptable) == 0x000000, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_SetAcceptableCancelAttack::bAcceptable' has a wrong offset!");

// Function BPI_PlayerAnimNotifyReceiver.BPI_PlayerAnimNotifyReceiver_C.Notify_Attacking
// 0x0001 (0x0001 - 0x0000)
struct BPI_PlayerAnimNotifyReceiver_C_Notify_Attacking final
{
public:
	bool                                          bAttacking;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerAnimNotifyReceiver_C_Notify_Attacking) == 0x000001, "Wrong alignment on BPI_PlayerAnimNotifyReceiver_C_Notify_Attacking");
static_assert(sizeof(BPI_PlayerAnimNotifyReceiver_C_Notify_Attacking) == 0x000001, "Wrong size on BPI_PlayerAnimNotifyReceiver_C_Notify_Attacking");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_Attacking, bAttacking) == 0x000000, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_Attacking::bAttacking' has a wrong offset!");

// Function BPI_PlayerAnimNotifyReceiver.BPI_PlayerAnimNotifyReceiver_C.Notify_BeginAttackTrail
// 0x0018 (0x0018 - 0x0000)
struct BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail final
{
public:
	class UParticleSystem*                        Template;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FirstSocket;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SecondSocket;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail) == 0x000008, "Wrong alignment on BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail");
static_assert(sizeof(BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail) == 0x000018, "Wrong size on BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail, Template) == 0x000000, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail::Template' has a wrong offset!");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail, FirstSocket) == 0x000008, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail::FirstSocket' has a wrong offset!");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail, SecondSocket) == 0x000010, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_BeginAttackTrail::SecondSocket' has a wrong offset!");

// Function BPI_PlayerAnimNotifyReceiver.BPI_PlayerAnimNotifyReceiver_C.OnGimmickBlown
// 0x000C (0x000C - 0x0000)
struct BPI_PlayerAnimNotifyReceiver_C_OnGimmickBlown final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PlayerAnimNotifyReceiver_C_OnGimmickBlown) == 0x000004, "Wrong alignment on BPI_PlayerAnimNotifyReceiver_C_OnGimmickBlown");
static_assert(sizeof(BPI_PlayerAnimNotifyReceiver_C_OnGimmickBlown) == 0x00000C, "Wrong size on BPI_PlayerAnimNotifyReceiver_C_OnGimmickBlown");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_OnGimmickBlown, ForwardVector) == 0x000000, "Member 'BPI_PlayerAnimNotifyReceiver_C_OnGimmickBlown::ForwardVector' has a wrong offset!");

// Function BPI_PlayerAnimNotifyReceiver.BPI_PlayerAnimNotifyReceiver_C.Notify_WalkBrakeTrigger
// 0x0004 (0x0004 - 0x0000)
struct BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger final
{
public:
	bool                                          bLeft_1;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeft_2;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRight_1;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRight_2;                                          // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger) == 0x000001, "Wrong alignment on BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger");
static_assert(sizeof(BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger) == 0x000004, "Wrong size on BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger, bLeft_1) == 0x000000, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger::bLeft_1' has a wrong offset!");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger, bLeft_2) == 0x000001, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger::bLeft_2' has a wrong offset!");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger, bRight_1) == 0x000002, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger::bRight_1' has a wrong offset!");
static_assert(offsetof(BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger, bRight_2) == 0x000003, "Member 'BPI_PlayerAnimNotifyReceiver_C_Notify_WalkBrakeTrigger::bRight_2' has a wrong offset!");

}

