#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_Pad

#include "Basic.hpp"

#include "BPL_Pad_classes.hpp"
#include "BPL_Pad_parameters.hpp"


namespace SDK
{

// Function BPL_Pad.BPL_Pad_C.IsActionPadCheck
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_ACTION_MAPPING_TYPE                   ActionMapping                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_INPUT_TYPE                            InputType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_Pad_C::IsActionPadCheck(E_ACTION_MAPPING_TYPE ActionMapping, E_INPUT_TYPE InputType, class UObject* __WorldContext, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "IsActionPadCheck");

	Params::BPL_Pad_C_IsActionPadCheck Parms{};

	Parms.ActionMapping = ActionMapping;
	Parms.InputType = InputType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPL_Pad.BPL_Pad_C.GetAxisPad
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_AXIS_MAPPING_TYPE                     AxisMapping                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPL_Pad_C::GetAxisPad(E_AXIS_MAPPING_TYPE AxisMapping, class UObject* __WorldContext, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "GetAxisPad");

	Params::BPL_Pad_C_GetAxisPad Parms{};

	Parms.AxisMapping = AxisMapping;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BPL_Pad.BPL_Pad_C.GetInputActionMappings
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_INPUT_TYPE                            InputType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<E_ACTION_MAPPING_TYPE>           ActionMappings                                         (Parm, OutParm)

void UBPL_Pad_C::GetInputActionMappings(E_INPUT_TYPE InputType, class UObject* __WorldContext, TArray<E_ACTION_MAPPING_TYPE>* ActionMappings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "GetInputActionMappings");

	Params::BPL_Pad_C_GetInputActionMappings Parms{};

	Parms.InputType = InputType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ActionMappings != nullptr)
		*ActionMappings = std::move(Parms.ActionMappings);
}


// Function BPL_Pad.BPL_Pad_C.RepeatActionCheck_ForCrossKey
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_ACTION_MAPPING_TYPE                   ActionMapping                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_Pad_C::RepeatActionCheck_ForCrossKey(E_ACTION_MAPPING_TYPE ActionMapping, class UObject* __WorldContext, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "RepeatActionCheck_ForCrossKey");

	Params::BPL_Pad_C_RepeatActionCheck_ForCrossKey Parms{};

	Parms.ActionMapping = ActionMapping;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPL_Pad.BPL_Pad_C.GetMouseWheelAxis
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Axis                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPL_Pad_C::GetMouseWheelAxis(class UObject* __WorldContext, float* Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "GetMouseWheelAxis");

	Params::BPL_Pad_C_GetMouseWheelAxis Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Axis != nullptr)
		*Axis = Parms.Axis;
}


// Function BPL_Pad.BPL_Pad_C.GetMousePos
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   X                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPL_Pad_C::GetMousePos(class UObject* __WorldContext, bool* Success, float* X, float* Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "GetMousePos");

	Params::BPL_Pad_C_GetMousePos Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (X != nullptr)
		*X = Parms.X;

	if (Y != nullptr)
		*Y = Parms.Y;
}


// Function BPL_Pad.BPL_Pad_C.IsHold_MouseLeftButton
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hold                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_Pad_C::IsHold_MouseLeftButton(class UObject* __WorldContext, bool* Hold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "IsHold_MouseLeftButton");

	Params::BPL_Pad_C_IsHold_MouseLeftButton Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Hold != nullptr)
		*Hold = Parms.Hold;
}


// Function BPL_Pad.BPL_Pad_C.CheckGamePadUI
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Gamepad                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_Pad_C::CheckGamePadUI(class UObject* __WorldContext, bool* Gamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "CheckGamePadUI");

	Params::BPL_Pad_C_CheckGamePadUI Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Gamepad != nullptr)
		*Gamepad = Parms.Gamepad;
}


// Function BPL_Pad.BPL_Pad_C.CheckGamePadEnable
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_Pad_C::CheckGamePadEnable(class UObject* __WorldContext, bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "CheckGamePadEnable");

	Params::BPL_Pad_C_CheckGamePadEnable Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function BPL_Pad.BPL_Pad_C.CheckMouseKeyboardEnable
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_Pad_C::CheckMouseKeyboardEnable(class UObject* __WorldContext, bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "CheckMouseKeyboardEnable");

	Params::BPL_Pad_C_CheckMouseKeyboardEnable Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function BPL_Pad.BPL_Pad_C.CallManualActionMapping
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ACTION_MAPPING_TYPE                   ActionMapping                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPL_Pad_C::CallManualActionMapping(E_ACTION_MAPPING_TYPE ActionMapping, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "CallManualActionMapping");

	Params::BPL_Pad_C_CallManualActionMapping Parms{};

	Parms.ActionMapping = ActionMapping;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPL_Pad.BPL_Pad_C.CallManualAxisMapping
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AXIS_MAPPING_TYPE                     AxisMapping                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPL_Pad_C::CallManualAxisMapping(E_AXIS_MAPPING_TYPE AxisMapping, float Scale, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "CallManualAxisMapping");

	Params::BPL_Pad_C_CallManualAxisMapping Parms{};

	Parms.AxisMapping = AxisMapping;
	Parms.Scale = Scale;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPL_Pad.BPL_Pad_C.ConvertAxisMovingScale
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InAxisValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutAxisValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPL_Pad_C::ConvertAxisMovingScale(float InAxisValue, class UObject* __WorldContext, float* OutAxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "ConvertAxisMovingScale");

	Params::BPL_Pad_C_ConvertAxisMovingScale Parms{};

	Parms.InAxisValue = InAxisValue;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutAxisValue != nullptr)
		*OutAxisValue = Parms.OutAxisValue;
}


// Function BPL_Pad.BPL_Pad_C.IsMovedMouseCursor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Moved                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_Pad_C::IsMovedMouseCursor(class UObject* __WorldContext, bool* Moved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "IsMovedMouseCursor");

	Params::BPL_Pad_C_IsMovedMouseCursor Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Moved != nullptr)
		*Moved = Parms.Moved;
}


// Function BPL_Pad.BPL_Pad_C.IsHold_MouseAnyButton
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hold                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_Pad_C::IsHold_MouseAnyButton(class UObject* __WorldContext, bool* Hold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_Pad_C", "IsHold_MouseAnyButton");

	Params::BPL_Pad_C_IsHold_MouseAnyButton Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Hold != nullptr)
		*Hold = Parms.Hold;
}

}

