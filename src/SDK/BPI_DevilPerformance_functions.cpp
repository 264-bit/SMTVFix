#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DevilPerformance

#include "Basic.hpp"

#include "BPI_DevilPerformance_classes.hpp"
#include "BPI_DevilPerformance_parameters.hpp"


namespace SDK
{

// Function BPI_DevilPerformance.BPI_DevilPerformance_C.GeneralDeadPlayStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformance_C::GeneralDeadPlayStart(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "GeneralDeadPlayStart");

	Params::BPI_DevilPerformance_C_GeneralDeadPlayStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformance.BPI_DevilPerformance_C.FreezeDeadPlay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformance_C::FreezeDeadPlay(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "FreezeDeadPlay");

	Params::BPI_DevilPerformance_C_FreezeDeadPlay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformance.BPI_DevilPerformance_C.FreezeDeadPlayStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformance_C::FreezeDeadPlayStart(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "FreezeDeadPlayStart");

	Params::BPI_DevilPerformance_C_FreezeDeadPlayStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformance.BPI_DevilPerformance_C.FreezeDeadSetTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformance_C::FreezeDeadSetTime(float Sec, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "FreezeDeadSetTime");

	Params::BPI_DevilPerformance_C_FreezeDeadSetTime Parms{};

	Parms.Sec = Sec;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformance.BPI_DevilPerformance_C.PhysicsDeadPlayStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformance_C::PhysicsDeadPlayStart(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "PhysicsDeadPlayStart");

	Params::BPI_DevilPerformance_C_PhysicsDeadPlayStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformance.BPI_DevilPerformance_C.SummonPlayStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformance_C::SummonPlayStart(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "SummonPlayStart");

	Params::BPI_DevilPerformance_C_SummonPlayStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformance.BPI_DevilPerformance_C.ReturnPlayStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformance_C::ReturnPlayStart(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "ReturnPlayStart");

	Params::BPI_DevilPerformance_C_ReturnPlayStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformance.BPI_DevilPerformance_C.ReviveEnemyPlayStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformance_C::ReviveEnemyPlayStart(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "ReviveEnemyPlayStart");

	Params::BPI_DevilPerformance_C_ReviveEnemyPlayStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformance.BPI_DevilPerformance_C.ReviveNakamaPlayStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformance_C::ReviveNakamaPlayStart(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "ReviveNakamaPlayStart");

	Params::BPI_DevilPerformance_C_ReviveNakamaPlayStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformance.BPI_DevilPerformance_C.SpawnPlayStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformance_C::SpawnPlayStart(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "SpawnPlayStart");

	Params::BPI_DevilPerformance_C_SpawnPlayStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformance.BPI_DevilPerformance_C.BI_GetNpcCollisionActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NpcCollisionActor                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DevilPerformance_C::BI_GetNpcCollisionActor(class AActor** NpcCollisionActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformance_C", "BI_GetNpcCollisionActor");

	Params::BPI_DevilPerformance_C_BI_GetNpcCollisionActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NpcCollisionActor != nullptr)
		*NpcCollisionActor = Parms.NpcCollisionActor;
}

}

