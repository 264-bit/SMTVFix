#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_EnvCtrlSpecial

#include "Basic.hpp"

#include "BPL_EnvCtrlSpecial_classes.hpp"
#include "BPL_EnvCtrlSpecial_parameters.hpp"


namespace SDK
{

// Function BPL_EnvCtrlSpecial.BPL_EnvCtrlSpecial_C.GetEnvCtrlIndex
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_EnvCtrl_Special              LightParam                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPL_EnvCtrlSpecial_C::GetEnvCtrlIndex(int32 Param_Index, class UObject* __WorldContext, struct FST_EnvCtrl_Special* LightParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_EnvCtrlSpecial_C", "GetEnvCtrlIndex");

	Params::BPL_EnvCtrlSpecial_C_GetEnvCtrlIndex Parms{};

	Parms.Param_Index = Param_Index;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LightParam != nullptr)
		*LightParam = std::move(Parms.LightParam);
}

}

