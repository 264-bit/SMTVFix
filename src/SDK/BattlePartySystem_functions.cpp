#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePartySystem

#include "Basic.hpp"

#include "BattlePartySystem_classes.hpp"
#include "BattlePartySystem_parameters.hpp"


namespace SDK
{

// Function BattlePartySystem.BattlePartySystem_C.ExecuteUbergraph_BattlePartySystem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::ExecuteUbergraph_BattlePartySystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "ExecuteUbergraph_BattlePartySystem");

	Params::BattlePartySystem_C_ExecuteUbergraph_BattlePartySystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "ReceiveEndPlay");

	Params::BattlePartySystem_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBattlePartySystem_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DelFlag2PartnerAll
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_DelFlag2PartnerAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DelFlag2PartnerAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DelFlagPartnerAll
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_DelFlagPartnerAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DelFlagPartnerAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_AddFlag2PartnerAll
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_AddFlag2PartnerAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_AddFlag2PartnerAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_AddFlagPartnerAll
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_AddFlagPartnerAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_AddFlagPartnerAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DelFlag2PartyAll
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_DelFlag2PartyAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DelFlag2PartyAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DelFlagPartyAll
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_DelFlagPartyAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DelFlagPartyAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_AddFlag2PartyAll
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_AddFlag2PartyAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_AddFlag2PartyAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_AddFlagPartyAll
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_AddFlagPartyAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_AddFlagPartyAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_CheckBehaviorFlag
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_CheckBehaviorFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_CheckBehaviorFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DelBehaviorFlag
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_DelBehaviorFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DelBehaviorFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_AddBehaviorFlag
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BI_AddBehaviorFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_AddBehaviorFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.GetMainWork
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABattleMain_C*                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetMainWork(class ABattleMain_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetMainWork");

	Params::BattlePartySystem_C_GetMainWork Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetPartyStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetPartyStart(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetPartyStart");

	Params::BattlePartySystem_C_Const_GetPartyStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetPartyLoopMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetPartyLoopMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetPartyLoopMax");

	Params::BattlePartySystem_C_Const_GetPartyLoopMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetEnemyStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetEnemyStart(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetEnemyStart");

	Params::BattlePartySystem_C_Const_GetEnemyStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetEnemyNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetEnemyNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetEnemyNum");

	Params::BattlePartySystem_C_Const_GetEnemyNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetPlayerLoopMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetPlayerLoopMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetPlayerLoopMax");

	Params::BattlePartySystem_C_Const_GetPlayerLoopMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetEnemyLoopMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetEnemyLoopMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetEnemyLoopMax");

	Params::BattlePartySystem_C_Const_GetEnemyLoopMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetPartyUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharaBase_C*                     RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetPartyUnit(int32 Param_Index, class ACharaBase_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetPartyUnit");

	Params::BattlePartySystem_C_GetPartyUnit Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.IsExistNoLost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsExistNoLost(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsExistNoLost");

	Params::BattlePartySystem_C_IsExistNoLost Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.ClearNowCommandAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::ClearNowCommandAll(bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "ClearNowCommandAll");

	Params::BattlePartySystem_C_ClearNowCommandAll Parms{};

	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.isEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsEnemy(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "isEnemy");

	Params::BattlePartySystem_C_IsEnemy Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.IsHero
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsHero(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsHero");

	Params::BattlePartySystem_C_IsHero Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.IsNkm
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsNkm(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsNkm");

	Params::BattlePartySystem_C_IsNkm Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetCharID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetCharID(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetCharID");

	Params::BattlePartySystem_C_GetCharID Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.CanAct
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::CanAct(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "CanAct");

	Params::BattlePartySystem_C_CanAct Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.CanTurnAct
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::CanTurnAct(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "CanTurnAct");

	Params::BattlePartySystem_C_CanTurnAct Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.AddFlagPartyAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_PARTY_STAT                        InFlag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::AddFlagPartyAll(E_BTL_PARTY_STAT InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "AddFlagPartyAll");

	Params::BattlePartySystem_C_AddFlagPartyAll Parms{};

	Parms.InFlag = InFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.AddFlag2PartyAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_PARTY_STAT2                       InFlag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::AddFlag2PartyAll(E_BTL_PARTY_STAT2 InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "AddFlag2PartyAll");

	Params::BattlePartySystem_C_AddFlag2PartyAll Parms{};

	Parms.InFlag = InFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.DelFlagPartyAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_PARTY_STAT                        InFlag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::DelFlagPartyAll(E_BTL_PARTY_STAT InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "DelFlagPartyAll");

	Params::BattlePartySystem_C_DelFlagPartyAll Parms{};

	Parms.InFlag = InFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.DelFlag2PartyAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_PARTY_STAT2                       InFlag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::DelFlag2PartyAll(E_BTL_PARTY_STAT2 InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "DelFlag2PartyAll");

	Params::BattlePartySystem_C_DelFlag2PartyAll Parms{};

	Parms.InFlag = InFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.GetSideFirstActIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCounter                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetSideFirstActIndex(bool IsPlayer, bool IsCounter, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetSideFirstActIndex");

	Params::BattlePartySystem_C_GetSideFirstActIndex Parms{};

	Parms.IsPlayer = IsPlayer;
	Parms.IsCounter = IsCounter;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetSideActList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_SIDE                              Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::GetSideActList(E_BTL_SIDE Side, TArray<int32>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetSideActList");

	Params::BattlePartySystem_C_GetSideActList Parms{};

	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.IsAllDeadSide
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsAllDeadSide(bool IsPlayer, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsAllDeadSide");

	Params::BattlePartySystem_C_IsAllDeadSide Parms{};

	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.DbgPrint_Combo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::DbgPrint_Combo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "DbgPrint_Combo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.DbgPrint_Critical
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::DbgPrint_Critical()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "DbgPrint_Critical");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BeHome
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BeHome(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BeHome");

	Params::BattlePartySystem_C_BeHome Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.BeHomeSideAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BeHomeSideAll(bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BeHomeSideAll");

	Params::BattlePartySystem_C_BeHomeSideAll Parms{};

	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.UnitSetVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ParticleInterlock                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DeactivateParticle                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::UnitSetVisibility(int32 Param_Index, bool Sw, bool ParticleInterlock, bool DeactivateParticle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UnitSetVisibility");

	Params::BattlePartySystem_C_UnitSetVisibility Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Sw = Sw;
	Parms.ParticleInterlock = ParticleInterlock;
	Parms.DeactivateParticle = DeactivateParticle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.UnitSetVisibilityAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::UnitSetVisibilityAll(bool Sw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UnitSetVisibilityAll");

	Params::BattlePartySystem_C_UnitSetVisibilityAll Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.BeDefaultMotion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BeDefaultMotion(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BeDefaultMotion");

	Params::BattlePartySystem_C_BeDefaultMotion Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.BeDefaultMotionSideAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BeDefaultMotionSideAll(bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BeDefaultMotionSideAll");

	Params::BattlePartySystem_C_BeDefaultMotionSideAll Parms{};

	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.GetEnemyLeaderPartyData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FBtlParty                        RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::GetEnemyLeaderPartyData(struct FBtlParty* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetEnemyLeaderPartyData");

	Params::BattlePartySystem_C_GetEnemyLeaderPartyData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.isStock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsStock(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "isStock");

	Params::BattlePartySystem_C_IsStock Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetStockStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetStockStart(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetStockStart");

	Params::BattlePartySystem_C_Const_GetStockStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetStockLoopMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetStockLoopMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetStockLoopMax");

	Params::BattlePartySystem_C_Const_GetStockLoopMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.SetPartyUnit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharaBase_C*                     InUnit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_CHAR_TYPE                         Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsReader                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::SetPartyUnit(int32 Param_Index, class ACharaBase_C* InUnit, int32 DevilID, E_BTL_CHAR_TYPE Type, bool IsReader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetPartyUnit");

	Params::BattlePartySystem_C_SetPartyUnit Parms{};

	Parms.Param_Index = Param_Index;
	Parms.InUnit = InUnit;
	Parms.DevilID = DevilID;
	Parms.Type = Type;
	Parms.IsReader = IsReader;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.GetAuraState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CHARA_AURA_TYPE                       RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetAuraState(int32 Param_Index, E_CHARA_AURA_TYPE* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetAuraState");

	Params::BattlePartySystem_C_GetAuraState Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetOnBattleNumMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetOnBattleNumMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetOnBattleNumMax");

	Params::BattlePartySystem_C_Const_GetOnBattleNumMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetUnitStateMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CHARA_MOTION_ID                       RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetUnitStateMotion(int32 Param_Index, E_CHARA_MOTION_ID* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetUnitStateMotion");

	Params::BattlePartySystem_C_GetUnitStateMotion Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.IsDeadDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsDeadDamage(int32 Param_Index, int32 Damage, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsDeadDamage");

	Params::BattlePartySystem_C_IsDeadDamage Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::GetName(int32 Param_Index, class FText* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetName");

	Params::BattlePartySystem_C_GetName Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.IsUseableItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsUseableItem(int32 PartyIndex, int32 ItemId, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsUseableItem");

	Params::BattlePartySystem_C_IsUseableItem Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetPartnerStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetPartnerStart(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetPartnerStart");

	Params::BattlePartySystem_C_Const_GetPartnerStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetPartnerNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetPartnerNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetPartnerNum");

	Params::BattlePartySystem_C_Const_GetPartnerNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.const_GetPartnerLoopMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::Const_GetPartnerLoopMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "const_GetPartnerLoopMax");

	Params::BattlePartySystem_C_Const_GetPartnerLoopMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.IsPartner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsPartner(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsPartner");

	Params::BattlePartySystem_C_IsPartner Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetPartnerID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_PARTNER_ID                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

E_PARTNER_ID UBattlePartySystem_C::GetPartnerID(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetPartnerID");

	Params::BattlePartySystem_C_GetPartnerID Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattlePartySystem.BattlePartySystem_C.AddFlagPartnerAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_PARTY_STAT                        InFlag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::AddFlagPartnerAll(E_BTL_PARTY_STAT InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "AddFlagPartnerAll");

	Params::BattlePartySystem_C_AddFlagPartnerAll Parms{};

	Parms.InFlag = InFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.AddFlag2PartnerAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_PARTY_STAT2                       InFlag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::AddFlag2PartnerAll(E_BTL_PARTY_STAT2 InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "AddFlag2PartnerAll");

	Params::BattlePartySystem_C_AddFlag2PartnerAll Parms{};

	Parms.InFlag = InFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.DelFlagPartnerAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_PARTY_STAT                        InFlag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::DelFlagPartnerAll(E_BTL_PARTY_STAT InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "DelFlagPartnerAll");

	Params::BattlePartySystem_C_DelFlagPartnerAll Parms{};

	Parms.InFlag = InFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.DelFlag2PartnerAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_PARTY_STAT2                       InFlag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::DelFlag2PartnerAll(E_BTL_PARTY_STAT2 InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "DelFlag2PartnerAll");

	Params::BattlePartySystem_C_DelFlag2PartnerAll Parms{};

	Parms.InFlag = InFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.GetUseableSkillList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<bool>                            RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::GetUseableSkillList(int32 PartyIndex, TArray<bool>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetUseableSkillList");

	Params::BattlePartySystem_C_GetUseableSkillList Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.IsNearDeath
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsNearDeath(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsNearDeath");

	Params::BattlePartySystem_C_IsNearDeath Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.UpdateUnitState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCureBySkill                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsLacerationDamage                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UpdateLookAt                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForcePlayMotion                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::UpdateUnitState(int32 Param_Index, bool IsCureBySkill, bool IsLacerationDamage, bool UpdateLookAt, bool ForcePlayMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UpdateUnitState");

	Params::BattlePartySystem_C_UpdateUnitState Parms{};

	Parms.Param_Index = Param_Index;
	Parms.IsCureBySkill = IsCureBySkill;
	Parms.IsLacerationDamage = IsLacerationDamage;
	Parms.UpdateLookAt = UpdateLookAt;
	Parms.ForcePlayMotion = ForcePlayMotion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.IsFullCure
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Cure                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsFullCure(int32 Param_Index, int32 Cure, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsFullCure");

	Params::BattlePartySystem_C_IsFullCure Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Cure = Cure;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.isHitTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsHitTarget(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "isHitTarget");

	Params::BattlePartySystem_C_IsHitTarget Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.SetAishou
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::SetAishou(int32 Param_Index, E_ATTRIBUTE_TYPE Attr, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetAishou");

	Params::BattlePartySystem_C_SetAishou Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Attr = Attr;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.SetTekisei
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SKILL_TEKISEI_CATEGORY                Tekisei                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::SetTekisei(int32 Param_Index, E_SKILL_TEKISEI_CATEGORY Tekisei, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetTekisei");

	Params::BattlePartySystem_C_SetTekisei Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Tekisei = Tekisei;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.SetSkill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::SetSkill(int32 Param_Index, int32 Slot, int32 SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetSkill");

	Params::BattlePartySystem_C_SetSkill Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Slot = Slot;
	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.SetAutoSkill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::SetAutoSkill(int32 Param_Index, int32 Slot, int32 SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetAutoSkill");

	Params::BattlePartySystem_C_SetAutoSkill Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Slot = Slot;
	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.GetHeroCharaType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_CHAR_TYPE                         RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetHeroCharaType(E_BTL_CHAR_TYPE* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetHeroCharaType");

	Params::BattlePartySystem_C_GetHeroCharaType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.ConditionMapIsExist
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::ConditionMapIsExist(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "ConditionMapIsExist");

	Params::BattlePartySystem_C_ConditionMapIsExist Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.ConditionMapGetSkillID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_CNT                               Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::ConditionMapGetSkillID(int32 Param_Index, E_BTL_CNT Type, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "ConditionMapGetSkillID");

	Params::BattlePartySystem_C_ConditionMapGetSkillID Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetBstCounter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetBstCounter(int32 Param_Index, E_BAD_STATUS bst, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetBstCounter");

	Params::BattlePartySystem_C_GetBstCounter Parms{};

	Parms.Param_Index = Param_Index;
	Parms.bst = bst;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawUpdateCombo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::EnemyInfoDrawUpdateCombo(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawUpdateCombo");

	Params::BattlePartySystem_C_EnemyInfoDrawUpdateCombo Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoPlayHPAnimOne
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageHP                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AnimTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::EnemyInfoPlayHPAnimOne(int32 Param_Index, int32 DamageHP, float AnimTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoPlayHPAnimOne");

	Params::BattlePartySystem_C_EnemyInfoPlayHPAnimOne Parms{};

	Parms.Param_Index = Param_Index;
	Parms.DamageHP = DamageHP;
	Parms.AnimTime = AnimTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.UpdateEnemyInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UpdateHPGauge                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::UpdateEnemyInfo(bool UpdateHPGauge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UpdateEnemyInfo");

	Params::BattlePartySystem_C_UpdateEnemyInfo Parms{};

	Parms.UpdateHPGauge = UpdateHPGauge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchHPBarOne
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Use2Line                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsUseSkipTarget                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoDrawSwitchHPBarOne(int32 Param_Index, bool Sw, bool ForDamage, bool Use2Line, bool Immediately, bool IsUseSkipTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawSwitchHPBarOne");

	Params::BattlePartySystem_C_EnemyInfoDrawSwitchHPBarOne Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Sw = Sw;
	Parms.ForDamage = ForDamage;
	Parms.Use2Line = Use2Line;
	Parms.Immediately = Immediately;
	Parms.IsUseSkipTarget = IsUseSkipTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchPartyAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoDrawSwitchPartyAll(bool Sw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawSwitchPartyAll");

	Params::BattlePartySystem_C_EnemyInfoDrawSwitchPartyAll Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchNameOne
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoDrawSwitchNameOne(int32 Param_Index, bool Sw, bool Immediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawSwitchNameOne");

	Params::BattlePartySystem_C_EnemyInfoDrawSwitchNameOne Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Sw = Sw;
	Parms.Immediately = Immediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchOneAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoDrawSwitchOneAll(int32 Param_Index, bool Sw, bool Immediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawSwitchOneAll");

	Params::BattlePartySystem_C_EnemyInfoDrawSwitchOneAll Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Sw = Sw;
	Parms.Immediately = Immediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoClearAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::EnemyInfoClearAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoClearAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.GetComboHitCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetComboHitCount(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetComboHitCount");

	Params::BattlePartySystem_C_GetComboHitCount Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchCombo_LOne
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoDrawSwitchCombo_LOne(int32 Param_Index, bool Sw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawSwitchCombo_LOne");

	Params::BattlePartySystem_C_EnemyInfoDrawSwitchCombo_LOne Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawAddCombo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::EnemyInfoDrawAddCombo(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawAddCombo");

	Params::BattlePartySystem_C_EnemyInfoDrawAddCombo Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchCombo_SOne
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoDrawSwitchCombo_SOne(int32 Param_Index, bool Sw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawSwitchCombo_SOne");

	Params::BattlePartySystem_C_EnemyInfoDrawSwitchCombo_SOne Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.GetActOrder4Panel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetActOrder4Panel(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetActOrder4Panel");

	Params::BattlePartySystem_C_GetActOrder4Panel Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.SortOrder4Panel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           InArray                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::SortOrder4Panel(TArray<int32>& InArray, TArray<int32>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SortOrder4Panel");

	Params::BattlePartySystem_C_SortOrder4Panel Parms{};

	Parms.InArray = std::move(InArray);

	UObject::ProcessEvent(Func, &Parms);

	InArray = std::move(Parms.InArray);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.GetUseableSubSkillList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<bool>                            RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::GetUseableSubSkillList(int32 PartyIndex, TArray<bool>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetUseableSubSkillList");

	Params::BattlePartySystem_C_GetUseableSubSkillList Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoAutoHideOneAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::EnemyInfoAutoHideOneAll(int32 Param_Index, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoAutoHideOneAll");

	Params::BattlePartySystem_C_EnemyInfoAutoHideOneAll Parms{};

	Parms.Param_Index = Param_Index;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoAutoAttachToCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoAutoAttachToCamera(int32 Param_Index, bool Sw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoAutoAttachToCamera");

	Params::BattlePartySystem_C_EnemyInfoAutoAttachToCamera Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.GetHeroUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharaBase_C*                     RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetHeroUnit(class ACharaBase_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetHeroUnit");

	Params::BattlePartySystem_C_GetHeroUnit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetEnemyTargetPriorityIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SaveIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SrcIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetEnemyTargetPriorityIndex(int32 SaveIndex, int32 SrcIndex, int32 SkillId, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetEnemyTargetPriorityIndex");

	Params::BattlePartySystem_C_GetEnemyTargetPriorityIndex Parms{};

	Parms.SaveIndex = SaveIndex;
	Parms.SrcIndex = SrcIndex;
	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetNextPlusCombo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetNextPlusCombo(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetNextPlusCombo");

	Params::BattlePartySystem_C_GetNextPlusCombo Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetPartyIndexByActOrder
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ActOrder                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetPartyIndexByActOrder(int32 ActOrder, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetPartyIndexByActOrder");

	Params::BattlePartySystem_C_GetPartyIndexByActOrder Parms{};

	Parms.ActOrder = ActOrder;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.SetPartyBlank
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::SetPartyBlank(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetPartyBlank");

	Params::BattlePartySystem_C_SetPartyBlank Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.GetEnemyLeaderIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetEnemyLeaderIndex(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetEnemyLeaderIndex");

	Params::BattlePartySystem_C_GetEnemyLeaderIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.EnemySideBlankAll
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::EnemySideBlankAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemySideBlankAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.IsEnemyIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsEnemyIndex(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsEnemyIndex");

	Params::BattlePartySystem_C_IsEnemyIndex Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.GetActListForTargetGlobal
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_SKILL_TARGET                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::GetActListForTargetGlobal(E_SKILL_TARGET Target, TArray<int32>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetActListForTargetGlobal");

	Params::BattlePartySystem_C_GetActListForTargetGlobal Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.GetActListForRelativeScale
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::GetActListForRelativeScale(int32 Param_Index, TArray<int32>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetActListForRelativeScale");

	Params::BattlePartySystem_C_GetActListForRelativeScale Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.GetActListAll
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<int32>                           RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::GetActListAll(TArray<int32>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetActListAll");

	Params::BattlePartySystem_C_GetActListAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.DestroyUnitToMap_New
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<E_BTL_CHAR_TYPE, class ACharaBase_C*>RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::DestroyUnitToMap_New(TMap<E_BTL_CHAR_TYPE, class ACharaBase_C*>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "DestroyUnitToMap_New");

	Params::BattlePartySystem_C_DestroyUnitToMap_New Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.PlayerCharaHP1Return
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::PlayerCharaHP1Return()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "PlayerCharaHP1Return");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.UnitSetFieldMapCondition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::UnitSetFieldMapCondition(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UnitSetFieldMapCondition");

	Params::BattlePartySystem_C_UnitSetFieldMapCondition Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoUpdatePositionHPBar
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::EnemyInfoUpdatePositionHPBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoUpdatePositionHPBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.IsAllDead
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<int32>                           IndexList                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsAllDead(TArray<int32>& IndexList, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsAllDead");

	Params::BattlePartySystem_C_IsAllDead Parms{};

	Parms.IndexList = std::move(IndexList);

	UObject::ProcessEvent(Func, &Parms);

	IndexList = std::move(Parms.IndexList);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchAishou
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoDrawSwitchAishou(int32 Param_Index, bool Sw, bool Immediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawSwitchAishou");

	Params::BattlePartySystem_C_EnemyInfoDrawSwitchAishou Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Sw = Sw;
	Parms.Immediately = Immediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.GetCharID_Detail
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetCharID_Detail(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetCharID_Detail");

	Params::BattlePartySystem_C_GetCharID_Detail Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.UnitSetVisibilitySideAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::UnitSetVisibilitySideAll(bool Sw, bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UnitSetVisibilitySideAll");

	Params::BattlePartySystem_C_UnitSetVisibilitySideAll Parms{};

	Parms.Sw = Sw;
	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.GetSideAveLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, struct FVector>     Playerside                                             (Parm, OutParm)
// TMap<class FString, struct FVector>     EnemySide                                              (Parm, OutParm)

void UBattlePartySystem_C::GetSideAveLocation(TMap<class FString, struct FVector>* Playerside, TMap<class FString, struct FVector>* EnemySide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetSideAveLocation");

	Params::BattlePartySystem_C_GetSideAveLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Playerside != nullptr)
		*Playerside = std::move(Parms.Playerside);

	if (EnemySide != nullptr)
		*EnemySide = std::move(Parms.EnemySide);
}


// Function BattlePartySystem.BattlePartySystem_C.GetShounenUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharaBase_C*                     RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::GetShounenUnit(class ACharaBase_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "GetShounenUnit");

	Params::BattlePartySystem_C_GetShounenUnit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.FootStampEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase_C*                     Unit                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::FootStampEnable(class ACharaBase_C* Unit, bool Sw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "FootStampEnable");

	Params::BattlePartySystem_C_FootStampEnable Parms{};

	Parms.Unit = Unit;
	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.UnitGetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsVisible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::UnitGetVisibility(int32 Param_Index, bool* IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UnitGetVisibility");

	Params::BattlePartySystem_C_UnitGetVisibility Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible != nullptr)
		*IsVisible = Parms.IsVisible;
}


// Function BattlePartySystem.BattlePartySystem_C.SetPlayerSideData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlDescData                     InDesc                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UBattlePartySystem_C::SetPlayerSideData(const struct FBtlDescData& InDesc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetPlayerSideData");

	Params::BattlePartySystem_C_SetPlayerSideData Parms{};

	Parms.InDesc = std::move(InDesc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.SetEnemySideData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlDescData                     InDesc                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FBtlEncData                      InEnc                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void UBattlePartySystem_C::SetEnemySideData(const struct FBtlDescData& InDesc, const struct FBtlEncData& InEnc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetEnemySideData");

	Params::BattlePartySystem_C_SetEnemySideData Parms{};

	Parms.InDesc = std::move(InDesc);
	Parms.InEnc = std::move(InEnc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.BeCommandBox
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::BeCommandBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BeCommandBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.UnitSetDitherValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFadeOut                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::UnitSetDitherValue(int32 Param_Index, float Time, bool IsFadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UnitSetDitherValue");

	Params::BattlePartySystem_C_UnitSetDitherValue Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Time = Time;
	Parms.IsFadeOut = IsFadeOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.UnitSetDitherValueSideAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFadeOut                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::UnitSetDitherValueSideAll(float Time, bool IsFadeOut, bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UnitSetDitherValueSideAll");

	Params::BattlePartySystem_C_UnitSetDitherValueSideAll Parms{};

	Parms.Time = Time;
	Parms.IsFadeOut = IsFadeOut;
	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.AveLocationInit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::AveLocationInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "AveLocationInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.SetPlayRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::SetPlayRate(float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetPlayRate");

	Params::BattlePartySystem_C_SetPlayRate Parms{};

	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.UnitSetLOD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LOD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::UnitSetLOD(int32 Param_Index, int32 LOD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UnitSetLOD");

	Params::BattlePartySystem_C_UnitSetLOD Parms{};

	Parms.Param_Index = Param_Index;
	Parms.LOD = LOD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.UnitSetLODSideAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LOD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::UnitSetLODSideAll(int32 LOD, bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UnitSetLODSideAll");

	Params::BattlePartySystem_C_UnitSetLODSideAll Parms{};

	Parms.LOD = LOD;
	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoSetAllWidgetVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoSetAllWidgetVisibility(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoSetAllWidgetVisibility");

	Params::BattlePartySystem_C_EnemyInfoSetAllWidgetVisibility Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchAishouNotice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TargetIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<E_ATTRIBUTE_TYPE>                DefenceAishou                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsShowAll                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSelected                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPenetration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoDrawSwitchAishouNotice(int32 ActorIndex, int32 TargetIndex, TArray<E_ATTRIBUTE_TYPE>& DefenceAishou, bool IsShowAll, bool Sw, bool IsSelected, bool Immediately, bool IsPenetration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawSwitchAishouNotice");

	Params::BattlePartySystem_C_EnemyInfoDrawSwitchAishouNotice Parms{};

	Parms.ActorIndex = ActorIndex;
	Parms.TargetIndex = TargetIndex;
	Parms.DefenceAishou = std::move(DefenceAishou);
	Parms.IsShowAll = IsShowAll;
	Parms.Sw = Sw;
	Parms.IsSelected = IsSelected;
	Parms.Immediately = Immediately;
	Parms.IsPenetration = IsPenetration;

	UObject::ProcessEvent(Func, &Parms);

	DefenceAishou = std::move(Parms.DefenceAishou);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoDrawSwitchAishouNoticeAll
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<E_ATTRIBUTE_TYPE>                DefanceAishou                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsShowAll                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSelected                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForEnemy                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForFriend                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPenetration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoDrawSwitchAishouNoticeAll(int32 ActorIndex, TArray<E_ATTRIBUTE_TYPE>& DefanceAishou, bool IsShowAll, bool Sw, bool IsSelected, bool ForEnemy, bool ForFriend, bool Immediately, bool IsPenetration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoDrawSwitchAishouNoticeAll");

	Params::BattlePartySystem_C_EnemyInfoDrawSwitchAishouNoticeAll Parms{};

	Parms.ActorIndex = ActorIndex;
	Parms.DefanceAishou = std::move(DefanceAishou);
	Parms.IsShowAll = IsShowAll;
	Parms.Sw = Sw;
	Parms.IsSelected = IsSelected;
	Parms.ForEnemy = ForEnemy;
	Parms.ForFriend = ForFriend;
	Parms.Immediately = Immediately;
	Parms.IsPenetration = IsPenetration;

	UObject::ProcessEvent(Func, &Parms);

	DefanceAishou = std::move(Parms.DefanceAishou);
}


// Function BattlePartySystem.BattlePartySystem_C.SetParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ABILITY_TYPE                          Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::SetParameter(int32 PartyIndex, E_ABILITY_TYPE Type, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetParameter");

	Params::BattlePartySystem_C_SetParameter Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Type = Type;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.SetLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::SetLevel(int32 PartyIndex, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetLevel");

	Params::BattlePartySystem_C_SetLevel Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoShowCureExpection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ExpectedHP                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::EnemyInfoShowCureExpection(int32 Param_Index, int32 ExpectedHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoShowCureExpection");

	Params::BattlePartySystem_C_EnemyInfoShowCureExpection Parms{};

	Parms.Param_Index = Param_Index;
	Parms.ExpectedHP = ExpectedHP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoReregister
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::EnemyInfoReregister(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoReregister");

	Params::BattlePartySystem_C_EnemyInfoReregister Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.IsAlreadyDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::IsAlreadyDead(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "IsAlreadyDead");

	Params::BattlePartySystem_C_IsAlreadyDead Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoGetCurrentHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentHP                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::EnemyInfoGetCurrentHP(int32 Param_Index, int32* CurrentHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoGetCurrentHP");

	Params::BattlePartySystem_C_EnemyInfoGetCurrentHP Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentHP != nullptr)
		*CurrentHP = Parms.CurrentHP;
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoSetButtonVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoSetButtonVisibility(int32 PartyIndex, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoSetButtonVisibility");

	Params::BattlePartySystem_C_EnemyInfoSetButtonVisibility Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.EnemyInfoSetButtonVisibilityAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForEnemy                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForFriend                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::EnemyInfoSetButtonVisibilityAll(bool Visible, bool ForEnemy, bool ForFriend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "EnemyInfoSetButtonVisibilityAll");

	Params::BattlePartySystem_C_EnemyInfoSetButtonVisibilityAll Parms{};

	Parms.Visible = Visible;
	Parms.ForEnemy = ForEnemy;
	Parms.ForFriend = ForFriend;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.SetPlayRateInner
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase_C*                     Unit                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CharaPlayRate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::SetPlayRateInner(class ACharaBase_C* Unit, float CharaPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "SetPlayRateInner");

	Params::BattlePartySystem_C_SetPlayRateInner Parms{};

	Parms.Unit = Unit;
	Parms.CharaPlayRate = CharaPlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePartySystem.BattlePartySystem_C.CreateHeroWeapons
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase_C*                     HeroPawn                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::CreateHeroWeapons(class ACharaBase_C*& HeroPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "CreateHeroWeapons");

	Params::BattlePartySystem_C_CreateHeroWeapons Parms{};

	Parms.HeroPawn = HeroPawn;

	UObject::ProcessEvent(Func, &Parms);

	HeroPawn = Parms.HeroPawn;
}


// Function BattlePartySystem.BattlePartySystem_C.DestroyHeroWeapons
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase_C*                     HeroPawn                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::DestroyHeroWeapons(class ACharaBase_C*& HeroPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "DestroyHeroWeapons");

	Params::BattlePartySystem_C_DestroyHeroWeapons Parms{};

	Parms.HeroPawn = HeroPawn;

	UObject::ProcessEvent(Func, &Parms);

	HeroPawn = Parms.HeroPawn;
}


// Function BattlePartySystem.BattlePartySystem_C.UpdateEnemyHomeTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattlePartySystem_C::UpdateEnemyHomeTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "UpdateEnemyHomeTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPartnerLoopMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetPartnerLoopMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetPartnerLoopMax");

	Params::BattlePartySystem_C_BI_const_GetPartnerLoopMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPartnerNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetPartnerNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetPartnerNum");

	Params::BattlePartySystem_C_BI_const_GetPartnerNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPartnerStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetPartnerStart(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetPartnerStart");

	Params::BattlePartySystem_C_BI_const_GetPartnerStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetOnBattleNumMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetOnBattleNumMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetOnBattleNumMax");

	Params::BattlePartySystem_C_BI_const_GetOnBattleNumMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetStockLoopMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetStockLoopMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetStockLoopMax");

	Params::BattlePartySystem_C_BI_const_GetStockLoopMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetStockStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetStockStart(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetStockStart");

	Params::BattlePartySystem_C_BI_const_GetStockStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPlayerLoopMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetPlayerLoopMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetPlayerLoopMax");

	Params::BattlePartySystem_C_BI_const_GetPlayerLoopMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetNPCNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetNPCNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetNPCNum");

	Params::BattlePartySystem_C_BI_const_GetNPCNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetNPCStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetNPCStart(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetNPCStart");

	Params::BattlePartySystem_C_BI_const_GetNPCStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetEnemyNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetEnemyNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetEnemyNum");

	Params::BattlePartySystem_C_BI_const_GetEnemyNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetEnemyStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetEnemyStart(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetEnemyStart");

	Params::BattlePartySystem_C_BI_const_GetEnemyStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPartyLoopMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetPartyLoopMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetPartyLoopMax");

	Params::BattlePartySystem_C_BI_const_GetPartyLoopMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetPartyStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetPartyStart(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetPartyStart");

	Params::BattlePartySystem_C_BI_const_GetPartyStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DestroyUnitToMap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_DestroyUnitToMap(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DestroyUnitToMap");

	Params::BattlePartySystem_C_BI_DestroyUnitToMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetEnemyLeaderPartyData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlParty                        RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::BI_GetEnemyLeaderPartyData(struct FBtlParty* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetEnemyLeaderPartyData");

	Params::BattlePartySystem_C_BI_GetEnemyLeaderPartyData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_SetBadStatusOne
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BAD_STATUS                            InBst                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_SetBadStatusOne(int32 PartyIndex, E_BAD_STATUS InBst, bool Sw, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_SetBadStatusOne");

	Params::BattlePartySystem_C_BI_SetBadStatusOne Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.InBst = InBst;
	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetPartyUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_CharaBaseAccessor_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_GetPartyUnit(int32 PartyIndex, TScriptInterface<class IBPI_CharaBaseAccessor_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetPartyUnit");

	Params::BattlePartySystem_C_BI_GetPartyUnit Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetCharaID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetCharaID(int32 PartyIndex, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetCharaID");

	Params::BattlePartySystem_C_BI_GetCharaID Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetCharaData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBtlCharData                     RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::BI_GetCharaData(int32 PartyIndex, struct FBtlCharData* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetCharaData");

	Params::BattlePartySystem_C_BI_GetCharaData Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_CheckBadStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_CheckBadStatus(int32 Param_Index, E_BAD_STATUS bst, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_CheckBadStatus");

	Params::BattlePartySystem_C_BI_CheckBadStatus Parms{};

	Parms.Param_Index = Param_Index;
	Parms.bst = bst;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetPartyData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBtlParty                        RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::BI_GetPartyData(int32 PartyIndex, struct FBtlParty* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetPartyData");

	Params::BattlePartySystem_C_BI_GetPartyData Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsInField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsInField(int32 PartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsInField");

	Params::BattlePartySystem_C_BI_IsInField Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsUseableItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsUseableItem(int32 PartyIndex, int32 ItemId, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsUseableItem");

	Params::BattlePartySystem_C_BI_IsUseableItem Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_const_GetEnemyLoopMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_const_GetEnemyLoopMax(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_const_GetEnemyLoopMax");

	Params::BattlePartySystem_C_BI_const_GetEnemyLoopMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DelBadStatusTurnCounter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_DelBadStatusTurnCounter(int32 PartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DelBadStatusTurnCounter");

	Params::BattlePartySystem_C_BI_DelBadStatusTurnCounter Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_AddHPMP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHP                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_AddHPMP(int32 Param_Index, int32 InValue, bool IsHP, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_AddHPMP");

	Params::BattlePartySystem_C_BI_AddHPMP Parms{};

	Parms.Param_Index = Param_Index;
	Parms.InValue = InValue;
	Parms.IsHP = IsHP;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_SetDeadParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_SetDeadParam(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_SetDeadParam");

	Params::BattlePartySystem_C_BI_SetDeadParam Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_SetNkmStockIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_SetNkmStockIn(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_SetNkmStockIn");

	Params::BattlePartySystem_C_BI_SetNkmStockIn Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsNKM
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsNKM(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsNKM");

	Params::BattlePartySystem_C_BI_IsNKM Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetAuraState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CHARA_AURA_TYPE                       RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetAuraState(int32 Param_Index, E_CHARA_AURA_TYPE* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetAuraState");

	Params::BattlePartySystem_C_BI_GetAuraState Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetBadStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetBadStatus(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetBadStatus");

	Params::BattlePartySystem_C_BI_GetBadStatus Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetUnitStateMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CHARA_MOTION_ID                       RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetUnitStateMotion(int32 Param_Index, E_CHARA_MOTION_ID* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetUnitStateMotion");

	Params::BattlePartySystem_C_BI_GetUnitStateMotion Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::BI_GetName(int32 Param_Index, class FText* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetName");

	Params::BattlePartySystem_C_BI_GetName Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_SetHPMP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHP                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_SetHPMP(int32 Param_Index, int32 InValue, bool IsHP, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_SetHPMP");

	Params::BattlePartySystem_C_BI_SetHPMP Parms{};

	Parms.Param_Index = Param_Index;
	Parms.InValue = InValue;
	Parms.IsHP = IsHP;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_AddFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_PARTY_STAT                        InFlag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_AddFlag(int32 Param_Index, E_BTL_PARTY_STAT InFlag, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_AddFlag");

	Params::BattlePartySystem_C_BI_AddFlag Parms{};

	Parms.Param_Index = Param_Index;
	Parms.InFlag = InFlag;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DestroyUnit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDestroyActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_DestroyUnit(int32 Param_Index, bool IsDestroyActor, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DestroyUnit");

	Params::BattlePartySystem_C_BI_DestroyUnit Parms{};

	Parms.Param_Index = Param_Index;
	Parms.IsDestroyActor = IsDestroyActor;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_SetNewPartyIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewEntryIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_SetNewPartyIn(int32 Param_Index, int32* RetValue, int32* DevilID, int32* NewEntryIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_SetNewPartyIn");

	Params::BattlePartySystem_C_BI_SetNewPartyIn Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;

	if (DevilID != nullptr)
		*DevilID = Parms.DevilID;

	if (NewEntryIndex != nullptr)
		*NewEntryIndex = Parms.NewEntryIndex;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_SetPartyUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_CharaBaseAccessor_C>InUnit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_CHAR_TYPE                         Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsReader                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_SetPartyUnit(int32 Param_Index, TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit, int32 DevilID, E_BTL_CHAR_TYPE Type, bool IsReader, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_SetPartyUnit");

	Params::BattlePartySystem_C_BI_SetPartyUnit Parms{};

	Parms.Param_Index = Param_Index;
	Parms.InUnit = InUnit;
	Parms.DevilID = DevilID;
	Parms.Type = Type;
	Parms.IsReader = IsReader;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_SetPartyHomeTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_SetPartyHomeTransform(int32 Param_Index, const struct FTransform& Data, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_SetPartyHomeTransform");

	Params::BattlePartySystem_C_BI_SetPartyHomeTransform Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetVisibilityAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UnitSetVisibilityAll(bool Sw, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UnitSetVisibilityAll");

	Params::BattlePartySystem_C_BI_UnitSetVisibilityAll Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ParticleInterlock                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DeactivateParticle                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UnitSetVisibility(int32 Param_Index, bool Sw, bool ParticleInterlock, bool DeactivateParticle, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UnitSetVisibility");

	Params::BattlePartySystem_C_BI_UnitSetVisibility Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Sw = Sw;
	Parms.ParticleInterlock = ParticleInterlock;
	Parms.DeactivateParticle = DeactivateParticle;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_CanTurnAct
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_CanTurnAct(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_CanTurnAct");

	Params::BattlePartySystem_C_BI_CanTurnAct Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsExist
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsExist(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsExist");

	Params::BattlePartySystem_C_BI_IsExist Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsHero
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsHero(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsHero");

	Params::BattlePartySystem_C_BI_IsHero Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsDead(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsDead");

	Params::BattlePartySystem_C_BI_IsDead Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetUseableSkillList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<bool>                            RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::BI_GetUseableSkillList(int32 Param_Index, TArray<bool>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetUseableSkillList");

	Params::BattlePartySystem_C_BI_GetUseableSkillList Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_Replace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_A                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_B                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SUMMON_TYPE                           Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_Replace(int32 Index_A, int32 Index_B, E_SUMMON_TYPE Type, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_Replace");

	Params::BattlePartySystem_C_BI_Replace Parms{};

	Parms.Index_A = Index_A;
	Parms.Index_B = Index_B;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsStock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsStock(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsStock");

	Params::BattlePartySystem_C_BI_IsStock Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetSide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_SIDE                              Side                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetSide(int32 Param_Index, E_BTL_SIDE* Side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetSide");

	Params::BattlePartySystem_C_BI_GetSide Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Side != nullptr)
		*Side = Parms.Side;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetSkillCost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetSkillCost(int32 Param_Index, int32 SkillId, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetSkillCost");

	Params::BattlePartySystem_C_BI_GetSkillCost Parms{};

	Parms.Param_Index = Param_Index;
	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsNearDeath
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsNearDeath(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsNearDeath");

	Params::BattlePartySystem_C_BI_IsNearDeath Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetPartyTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_GetPartyTransform(int32 Param_Index, struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetPartyTransform");

	Params::BattlePartySystem_C_BI_GetPartyTransform Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_ExpendAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsForceFinish                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_ExpendAction(int32 Param_Index, bool IsForceFinish, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_ExpendAction");

	Params::BattlePartySystem_C_BI_ExpendAction Parms{};

	Parms.Param_Index = Param_Index;
	Parms.IsForceFinish = IsForceFinish;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UpdateUnitState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoCureEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsLecerationDam                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UpdateLookAt                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UpdateUnitState(int32 Param_Index, bool NoCureEffect, bool IsLecerationDam, bool UpdateLookAt, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UpdateUnitState");

	Params::BattlePartySystem_C_BI_UpdateUnitState Parms{};

	Parms.Param_Index = Param_Index;
	Parms.NoCureEffect = NoCureEffect;
	Parms.IsLecerationDam = IsLecerationDam;
	Parms.UpdateLookAt = UpdateLookAt;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetHPRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetHPRatio(int32 Param_Index, float* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetHPRatio");

	Params::BattlePartySystem_C_BI_GetHPRatio Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetNowHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetNowHP(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetNowHP");

	Params::BattlePartySystem_C_BI_GetNowHP Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetMaxHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetMaxHP(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetMaxHP");

	Params::BattlePartySystem_C_BI_GetMaxHP Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetNowMP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetNowMP(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetNowMP");

	Params::BattlePartySystem_C_BI_GetNowMP Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetMaxMP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetMaxMP(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetMaxMP");

	Params::BattlePartySystem_C_BI_GetMaxMP Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetHeroCharaType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_CHAR_TYPE                         NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetHeroCharaType(E_BTL_CHAR_TYPE* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetHeroCharaType");

	Params::BattlePartySystem_C_BI_GetHeroCharaType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_ConditionMapGetSkillID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_CNT                               Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_ConditionMapGetSkillID(int32 Param_Index, E_BTL_CNT Type, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_ConditionMapGetSkillID");

	Params::BattlePartySystem_C_BI_ConditionMapGetSkillID Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_ConditionMapIsExist
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_ConditionMapIsExist(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_ConditionMapIsExist");

	Params::BattlePartySystem_C_BI_ConditionMapIsExist Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UpdateEnemyInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UpdateEnemyInfo(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UpdateEnemyInfo");

	Params::BattlePartySystem_C_BI_UpdateEnemyInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDamageHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageHP                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AinmTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam3                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoDamageHP(int32 PartyIndex, int32 DamageHP, float AinmTime, bool* NewParam3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoDamageHP");

	Params::BattlePartySystem_C_BI_EnemyInfoDamageHP Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.DamageHP = DamageHP;
	Parms.AinmTime = AinmTime;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam3 != nullptr)
		*NewParam3 = Parms.NewParam3;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawSwitchHPBarOne
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Use2Line                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsUseSkipTarget                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoDrawSwitchHPBarOne(int32 PartyIndex, bool Sw, bool ForDamage, bool Use2Line, bool IsUseSkipTarget, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoDrawSwitchHPBarOne");

	Params::BattlePartySystem_C_BI_EnemyInfoDrawSwitchHPBarOne Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Sw = Sw;
	Parms.ForDamage = ForDamage;
	Parms.Use2Line = Use2Line;
	Parms.IsUseSkipTarget = IsUseSkipTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_CheckFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_PARTY_STAT                        Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_CheckFlag(int32 Param_Index, E_BTL_PARTY_STAT Flag, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_CheckFlag");

	Params::BattlePartySystem_C_BI_CheckFlag Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetComboHitCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetComboHitCount(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetComboHitCount");

	Params::BattlePartySystem_C_BI_GetComboHitCount Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawAddCombo_LOne
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoDrawAddCombo_LOne(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoDrawAddCombo_LOne");

	Params::BattlePartySystem_C_BI_EnemyInfoDrawAddCombo_LOne Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawSwitchCombo_LOne
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoDrawSwitchCombo_LOne(int32 PartyIndex, bool Sw, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoDrawSwitchCombo_LOne");

	Params::BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_LOne Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawUpdateCombo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoDrawUpdateCombo(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoDrawUpdateCombo");

	Params::BattlePartySystem_C_BI_EnemyInfoDrawUpdateCombo Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawSwitchCombo_SOne
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoDrawSwitchCombo_SOne(int32 Param_Index, bool Sw, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoDrawSwitchCombo_SOne");

	Params::BattlePartySystem_C_BI_EnemyInfoDrawSwitchCombo_SOne Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetActOrder
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetActOrder(int32 PartyIndex, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetActOrder");

	Params::BattlePartySystem_C_BI_GetActOrder Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetUseableSubSkillList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<bool>                            RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::BI_GetUseableSubSkillList(int32 PartyIndex, TArray<bool>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetUseableSubSkillList");

	Params::BattlePartySystem_C_BI_GetUseableSubSkillList Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_CheckFlag2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_PARTY_STAT2                       Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_CheckFlag2(int32 Param_Index, E_BTL_PARTY_STAT2 Flag, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_CheckFlag2");

	Params::BattlePartySystem_C_BI_CheckFlag2 Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawAutoHideOneAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoDrawAutoHideOneAll(int32 PartyIndex, float DeltaTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoDrawAutoHideOneAll");

	Params::BattlePartySystem_C_BI_EnemyInfoDrawAutoHideOneAll Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawAttachToCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Attach                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoDrawAttachToCamera(int32 PartyIndex, bool Attach, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoDrawAttachToCamera");

	Params::BattlePartySystem_C_BI_EnemyInfoDrawAttachToCamera Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Attach = Attach;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetHeroUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_CharaBaseAccessor_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_GetHeroUnit(TScriptInterface<class IBPI_CharaBaseAccessor_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetHeroUnit");

	Params::BattlePartySystem_C_BI_GetHeroUnit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetNextPlusCombo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetNextPlusCombo(int32 PartyIndex, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetNextPlusCombo");

	Params::BattlePartySystem_C_BI_GetNextPlusCombo Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_SetPartyBlank
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_SetPartyBlank(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_SetPartyBlank");

	Params::BattlePartySystem_C_BI_SetPartyBlank Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetActListForRelativeScale
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::BI_GetActListForRelativeScale(int32 PartyIndex, TArray<int32>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetActListForRelativeScale");

	Params::BattlePartySystem_C_BI_GetActListForRelativeScale Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoUpdatePositionHPBar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoUpdatePositionHPBar(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoUpdatePositionHPBar");

	Params::BattlePartySystem_C_BI_EnemyInfoUpdatePositionHPBar Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UnitLookAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UnitLookAt(int32 PartyIndex, const struct FVector& Location, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UnitLookAt");

	Params::BattlePartySystem_C_BI_UnitLookAt Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_LookAtAve
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_LookAtAve(int32 PartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_LookAtAve");

	Params::BattlePartySystem_C_BI_LookAtAve Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_BreakLookAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_BreakLookAt(int32 PartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_BreakLookAt");

	Params::BattlePartySystem_C_BI_BreakLookAt Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetSideAveLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, struct FVector>     Playerside                                             (Parm, OutParm)
// TMap<class FString, struct FVector>     EnemySide                                              (Parm, OutParm)

void UBattlePartySystem_C::BI_GetSideAveLocation(TMap<class FString, struct FVector>* Playerside, TMap<class FString, struct FVector>* EnemySide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetSideAveLocation");

	Params::BattlePartySystem_C_BI_GetSideAveLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Playerside != nullptr)
		*Playerside = std::move(Parms.Playerside);

	if (EnemySide != nullptr)
		*EnemySide = std::move(Parms.EnemySide);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetShounenUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_CharaBaseAccessor_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_GetShounenUnit(TScriptInterface<class IBPI_CharaBaseAccessor_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetShounenUnit");

	Params::BattlePartySystem_C_BI_GetShounenUnit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetVisibilitySideAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UnitSetVisibilitySideAll(bool Sw, bool IsPlayer, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UnitSetVisibilitySideAll");

	Params::BattlePartySystem_C_BI_UnitSetVisibilitySideAll Parms{};

	Parms.Sw = Sw;
	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_AddIsInfieldList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_AddIsInfieldList(E_BTL_SIDE Side, int32 PartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_AddIsInfieldList");

	Params::BattlePartySystem_C_BI_AddIsInfieldList Parms{};

	Parms.Side = Side;
	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetSideActList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::BI_GetSideActList(E_BTL_SIDE Side, TArray<int32>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetSideActList");

	Params::BattlePartySystem_C_BI_GetSideActList Parms{};

	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetActListAll
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           RetValue                                               (Parm, OutParm)

void UBattlePartySystem_C::BI_GetActListAll(TArray<int32>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetActListAll");

	Params::BattlePartySystem_C_BI_GetActListAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UnitGetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsVisible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UnitGetVisibility(int32 Param_Index, bool* IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UnitGetVisibility");

	Params::BattlePartySystem_C_BI_UnitGetVisibility Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible != nullptr)
		*IsVisible = Parms.IsVisible;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetCommandTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetCommandTargetLocation(struct FVector* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetCommandTargetLocation");

	Params::BattlePartySystem_C_BI_GetCommandTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_BeHome
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_BeHome(int32 Param_Index, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_BeHome");

	Params::BattlePartySystem_C_BI_BeHome Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_BeHomeSideAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_BeHomeSideAll(bool IsPlayer, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_BeHomeSideAll");

	Params::BattlePartySystem_C_BI_BeHomeSideAll Parms{};

	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetDitherValueSideAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFadeOut                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UnitSetDitherValueSideAll(float Time, bool IsFadeOut, bool IsPlayer, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UnitSetDitherValueSideAll");

	Params::BattlePartySystem_C_BI_UnitSetDitherValueSideAll Parms{};

	Parms.Time = Time;
	Parms.IsFadeOut = IsFadeOut;
	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetCommandBoxTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_GetCommandBoxTransform(struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetCommandBoxTransform");

	Params::BattlePartySystem_C_BI_GetCommandBoxTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsUplifting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsUplifting(int32 PartyIndex, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsUplifting");

	Params::BattlePartySystem_C_BI_IsUplifting Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetHeroIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetHeroIndex(int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetHeroIndex");

	Params::BattlePartySystem_C_BI_GetHeroIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetLOD
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LOD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UnitSetLOD(int32 PartyIndex, int32 LOD, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UnitSetLOD");

	Params::BattlePartySystem_C_BI_UnitSetLOD Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.LOD = LOD;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UnitSetLODSideAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LOD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UnitSetLODSideAll(int32 LOD, bool IsPlayer, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UnitSetLODSideAll");

	Params::BattlePartySystem_C_BI_UnitSetLODSideAll Parms{};

	Parms.LOD = LOD;
	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_AddFlag2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_PARTY_STAT2                       Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_AddFlag2(int32 Param_Index, E_BTL_PARTY_STAT2 Flag, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_AddFlag2");

	Params::BattlePartySystem_C_BI_AddFlag2 Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DelFlag2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_PARTY_STAT2                       Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_DelFlag2(int32 Param_Index, E_BTL_PARTY_STAT2 Flag, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DelFlag2");

	Params::BattlePartySystem_C_BI_DelFlag2 Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetSideIsTargetList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           List                                                   (Parm, OutParm)

void UBattlePartySystem_C::BI_GetSideIsTargetList(E_BTL_SIDE Side, TArray<int32>* List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetSideIsTargetList");

	Params::BattlePartySystem_C_BI_GetSideIsTargetList Parms{};

	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);

	if (List != nullptr)
		*List = std::move(Parms.List);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsDown                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsDown(int32 PartyIndex, bool* Param_IsDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsDown");

	Params::BattlePartySystem_C_BI_IsDown Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsDown != nullptr)
		*Param_IsDown = Parms.Param_IsDown;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DelIsInFieldList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_DelIsInFieldList(E_BTL_SIDE Side, int32 PartyIndex, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DelIsInFieldList");

	Params::BattlePartySystem_C_BI_DelIsInFieldList Parms{};

	Parms.Side = Side;
	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_ModeChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AfterDevilID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_ModeChange(int32 PartyIndex, int32 AfterDevilID, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_ModeChange");

	Params::BattlePartySystem_C_BI_ModeChange Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.AfterDevilID = AfterDevilID;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetEnemyLeaderIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetEnemyLeaderIndex(int32* PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetEnemyLeaderIndex");

	Params::BattlePartySystem_C_BI_GetEnemyLeaderIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PartyIndex != nullptr)
		*PartyIndex = Parms.PartyIndex;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_DelFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_PARTY_STAT                        Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_DelFlag(int32 Param_Index, E_BTL_PARTY_STAT Flag, int32* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_DelFlag");

	Params::BattlePartySystem_C_BI_DelFlag Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawSwitchAishouNoticeAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<E_ATTRIBUTE_TYPE>                DefenceAishou                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsShowAll                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForEnemy                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForFriend                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediately                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPenetration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoDrawSwitchAishouNoticeAll(int32 ActorIndex, TArray<E_ATTRIBUTE_TYPE>& DefenceAishou, bool IsShowAll, bool Sw, bool ForEnemy, bool ForFriend, bool Immediately, bool IsPenetration, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoDrawSwitchAishouNoticeAll");

	Params::BattlePartySystem_C_BI_EnemyInfoDrawSwitchAishouNoticeAll Parms{};

	Parms.ActorIndex = ActorIndex;
	Parms.DefenceAishou = std::move(DefenceAishou);
	Parms.IsShowAll = IsShowAll;
	Parms.Sw = Sw;
	Parms.ForEnemy = ForEnemy;
	Parms.ForFriend = ForFriend;
	Parms.Immediately = Immediately;
	Parms.IsPenetration = IsPenetration;

	UObject::ProcessEvent(Func, &Parms);

	DefenceAishou = std::move(Parms.DefenceAishou);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetEnableFirstPartyIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetEnableFirstPartyIndex(int32* PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetEnableFirstPartyIndex");

	Params::BattlePartySystem_C_BI_GetEnableFirstPartyIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PartyIndex != nullptr)
		*PartyIndex = Parms.PartyIndex;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetBattlePartyIndexByNkmIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNkmIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OutPartyIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetBattlePartyIndexByNkmIndex(int32 InNkmIndex, int32 InPlayerIndex, int32 InType, int32* OutPartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetBattlePartyIndexByNkmIndex");

	Params::BattlePartySystem_C_BI_GetBattlePartyIndexByNkmIndex Parms{};

	Parms.InNkmIndex = InNkmIndex;
	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutPartyIndex != nullptr)
		*OutPartyIndex = Parms.OutPartyIndex;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsExistInParty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CharaID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsExist                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsExistInParty(int32 CharaID, bool* Param_IsExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsExistInParty");

	Params::BattlePartySystem_C_BI_IsExistInParty Parms{};

	Parms.CharaID = CharaID;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsExist != nullptr)
		*Param_IsExist = Parms.Param_IsExist;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetBattleEnemyNumber
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OutNumber                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetBattleEnemyNumber(int32* OutNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetBattleEnemyNumber");

	Params::BattlePartySystem_C_BI_GetBattleEnemyNumber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutNumber != nullptr)
		*OutNumber = Parms.OutNumber;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetBattleEnemyPartyIndexByIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OutPartyIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetBattleEnemyPartyIndexByIndex(int32 InIndex, int32* OutPartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetBattleEnemyPartyIndexByIndex");

	Params::BattlePartySystem_C_BI_GetBattleEnemyPartyIndexByIndex Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (OutPartyIndex != nullptr)
		*OutPartyIndex = Parms.OutPartyIndex;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoSetEnableUpdatePosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoSetEnableUpdatePosition(bool Enable, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoSetEnableUpdatePosition");

	Params::BattlePartySystem_C_BI_EnemyInfoSetEnableUpdatePosition Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetNameAddID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (Parm, OutParm)

void UBattlePartySystem_C::BI_GetNameAddID(int32 PartyIndex, class FText* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetNameAddID");

	Params::BattlePartySystem_C_BI_GetNameAddID Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetAllIsInFieldPartyData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTargetOnly                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FBtlParty>                PartyData                                              (Parm, OutParm)

void UBattlePartySystem_C::BI_GetAllIsInFieldPartyData(bool IsTargetOnly, TArray<struct FBtlParty>* PartyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetAllIsInFieldPartyData");

	Params::BattlePartySystem_C_BI_GetAllIsInFieldPartyData Parms{};

	Parms.IsTargetOnly = IsTargetOnly;

	UObject::ProcessEvent(Func, &Parms);

	if (PartyData != nullptr)
		*PartyData = std::move(Parms.PartyData);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetAllIsTargetList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           List                                                   (Parm, OutParm)

void UBattlePartySystem_C::BI_GetAllIsTargetList(TArray<int32>* List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetAllIsTargetList");

	Params::BattlePartySystem_C_BI_GetAllIsTargetList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (List != nullptr)
		*List = std::move(Parms.List);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoDrawSwitchPartyAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoDrawSwitchPartyAll(bool Sw, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoDrawSwitchPartyAll");

	Params::BattlePartySystem_C_BI_EnemyInfoDrawSwitchPartyAll Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoClearAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_EnemyInfoClearAll(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoClearAll");

	Params::BattlePartySystem_C_BI_EnemyInfoClearAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsDeadDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Fatality                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsDeadDamage(int32 PartyIndex, int32 Damage, bool* Fatality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsDeadDamage");

	Params::BattlePartySystem_C_BI_IsDeadDamage Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);

	if (Fatality != nullptr)
		*Fatality = Parms.Fatality;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_CheckBossFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_BOSS_FLAG                         BossFlag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTrue                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_CheckBossFlag(int32 PartyIndex, E_BTL_BOSS_FLAG BossFlag, bool* IsTrue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_CheckBossFlag");

	Params::BattlePartySystem_C_BI_CheckBossFlag Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.BossFlag = BossFlag;

	UObject::ProcessEvent(Func, &Parms);

	if (IsTrue != nullptr)
		*IsTrue = Parms.IsTrue;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetPartyHomeTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Home                                                   (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_GetPartyHomeTransform(int32 PartyIndex, struct FTransform* Home)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetPartyHomeTransform");

	Params::BattlePartySystem_C_BI_GetPartyHomeTransform Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Home != nullptr)
		*Home = std::move(Parms.Home);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsAlreadyDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsDead                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsAlreadyDead(int32 PartyIndex, bool* Param_IsDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsAlreadyDead");

	Params::BattlePartySystem_C_BI_IsAlreadyDead Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsDead != nullptr)
		*Param_IsDead = Parms.Param_IsDead;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_CheckMitama
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_CheckMitama(int32 PartyIndex, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_CheckMitama");

	Params::BattlePartySystem_C_BI_CheckMitama Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetMitamaAnalyzeData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAnalyzeData                     AnalyzeData                                            (Parm, OutParm)

void UBattlePartySystem_C::BI_GetMitamaAnalyzeData(int32 PartyIndex, struct FAnalyzeData* AnalyzeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetMitamaAnalyzeData");

	Params::BattlePartySystem_C_BI_GetMitamaAnalyzeData Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (AnalyzeData != nullptr)
		*AnalyzeData = std::move(Parms.AnalyzeData);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetKuishibariCureHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_KUISHIBARI_LEVEL                      Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CureHp                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetKuishibariCureHP(int32 PartyIndex, E_KUISHIBARI_LEVEL Level, int32* CureHp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetKuishibariCureHP");

	Params::BattlePartySystem_C_BI_GetKuishibariCureHP Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);

	if (CureHp != nullptr)
		*CureHp = Parms.CureHp;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_EnemyInfoGetCurrentHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentHP                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_EnemyInfoGetCurrentHP(int32 PartyIndex, int32* CurrentHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_EnemyInfoGetCurrentHP");

	Params::BattlePartySystem_C_BI_EnemyInfoGetCurrentHP Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentHP != nullptr)
		*CurrentHP = Parms.CurrentHP;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsGuest
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsGuest(int32 PartyIndex, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsGuest");

	Params::BattlePartySystem_C_BI_IsGuest Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_CheckMagatsuhiDevil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_CheckMagatsuhiDevil(int32 PartyIndex, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_CheckMagatsuhiDevil");

	Params::BattlePartySystem_C_BI_CheckMagatsuhiDevil Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetMagatsuhiDevilAnalyzeData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAnalyzeData                     AnalyzeData                                            (Parm, OutParm)

void UBattlePartySystem_C::BI_GetMagatsuhiDevilAnalyzeData(int32 PartyIndex, struct FAnalyzeData* AnalyzeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetMagatsuhiDevilAnalyzeData");

	Params::BattlePartySystem_C_BI_GetMagatsuhiDevilAnalyzeData Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (AnalyzeData != nullptr)
		*AnalyzeData = std::move(Parms.AnalyzeData);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetMagatsuhiDevilDropItemID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           ItemIDArray                                            (Parm, OutParm)

void UBattlePartySystem_C::BI_GetMagatsuhiDevilDropItemID(int32 PartyIndex, TArray<int32>* ItemIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetMagatsuhiDevilDropItemID");

	Params::BattlePartySystem_C_BI_GetMagatsuhiDevilDropItemID Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (ItemIDArray != nullptr)
		*ItemIDArray = std::move(Parms.ItemIDArray);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetMagatsuhiDevilMagatsuhiSkill
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           SkillIDArray                                           (Parm, OutParm)

void UBattlePartySystem_C::BI_GetMagatsuhiDevilMagatsuhiSkill(int32 PartyIndex, TArray<int32>* SkillIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetMagatsuhiDevilMagatsuhiSkill");

	Params::BattlePartySystem_C_BI_GetMagatsuhiDevilMagatsuhiSkill Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (SkillIDArray != nullptr)
		*SkillIDArray = std::move(Parms.SkillIDArray);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_UniqueSkill_ChangeTest
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SrcIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DstIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_UniqueSkill_ChangeTest(int32 SrcIndex, int32 DstIndex, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_UniqueSkill_ChangeTest");

	Params::BattlePartySystem_C_BI_UniqueSkill_ChangeTest Parms{};

	Parms.SrcIndex = SrcIndex;
	Parms.DstIndex = DstIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetStealMagatsuhiSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetStealMagatsuhiSkill(int32 PartyIndex, int32* SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetStealMagatsuhiSkill");

	Params::BattlePartySystem_C_BI_GetStealMagatsuhiSkill Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (SkillId != nullptr)
		*SkillId = Parms.SkillId;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetActCounter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Counter                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetActCounter(int32 PartyIndex, int32* Counter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetActCounter");

	Params::BattlePartySystem_C_BI_GetActCounter Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Counter != nullptr)
		*Counter = Parms.Counter;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsBossRushChallengeModeEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsBossRushChallengeModeEnemy(int32 PartyIndex, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsBossRushChallengeModeEnemy");

	Params::BattlePartySystem_C_BI_IsBossRushChallengeModeEnemy Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetBossRushChallengeModeAnalyzeData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAnalyzeData                     AnalyzeData                                            (Parm, OutParm)

void UBattlePartySystem_C::BI_GetBossRushChallengeModeAnalyzeData(int32 PartyIndex, struct FAnalyzeData* AnalyzeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetBossRushChallengeModeAnalyzeData");

	Params::BattlePartySystem_C_BI_GetBossRushChallengeModeAnalyzeData Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (AnalyzeData != nullptr)
		*AnalyzeData = std::move(Parms.AnalyzeData);
}


// Function BattlePartySystem.BattlePartySystem_C.BI_GetPrevHPRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Ratio                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePartySystem_C::BI_GetPrevHPRatio(int32 PartyIndex, float* Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_GetPrevHPRatio");

	Params::BattlePartySystem_C_BI_GetPrevHPRatio Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Ratio != nullptr)
		*Ratio = Parms.Ratio;
}


// Function BattlePartySystem.BattlePartySystem_C.BI_IsPhisicsTaisei
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePartySystem_C::BI_IsPhisicsTaisei(int32 PartyIndex, E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePartySystem_C", "BI_IsPhisicsTaisei");

	Params::BattlePartySystem_C_BI_IsPhisicsTaisei Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}

}

