#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DLCAnnouncer

#include "Basic.hpp"

#include "BP_DLCAnnouncer_classes.hpp"
#include "BP_DLCAnnouncer_parameters.hpp"


namespace SDK
{

// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.BPI_IsActiveAnnounceTask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsActiveTask                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DLCAnnouncer_C::BPI_IsActiveAnnounceTask(bool* Param_IsActiveTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "BPI_IsActiveAnnounceTask");

	Params::BP_DLCAnnouncer_C_BPI_IsActiveAnnounceTask Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsActiveTask != nullptr)
		*Param_IsActiveTask = Parms.Param_IsActiveTask;
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.BPI_GetDelegateCheckActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DLCAnnouncer_DelegateChecker_C*OutActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DLCAnnouncer_C::BPI_GetDelegateCheckActor(class ABP_DLCAnnouncer_DelegateChecker_C** OutActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "BPI_GetDelegateCheckActor");

	Params::BP_DLCAnnouncer_C_BPI_GetDelegateCheckActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutActor != nullptr)
		*OutActor = Parms.OutActor;
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.ResetParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ClearList                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DLCAnnouncer_C::ResetParam(bool ClearList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "ResetParam");

	Params::BP_DLCAnnouncer_C_ResetParam Parms{};

	Parms.ClearList = ClearList;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.RefrectDLC_SystemData
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_DLCAnnouncer_C::RefrectDLC_SystemData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "RefrectDLC_SystemData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.ConvDLC_TagToTutorialEnum
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     InTagList                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>  EnumList                                               (Parm, OutParm)

void ABP_DLCAnnouncer_C::ConvDLC_TagToTutorialEnum(const TArray<class FName>& InTagList, TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>* EnumList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "ConvDLC_TagToTutorialEnum");

	Params::BP_DLCAnnouncer_C_ConvDLC_TagToTutorialEnum Parms{};

	Parms.InTagList = std::move(InTagList);

	UObject::ProcessEvent(Func, &Parms);

	if (EnumList != nullptr)
		*EnumList = std::move(Parms.EnumList);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.ConvDLC_TagToName
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     InTagList                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     DLC_NameList                                           (Parm, OutParm)

void ABP_DLCAnnouncer_C::ConvDLC_TagToName(TArray<class FName>& InTagList, TArray<class FName>* DLC_NameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "ConvDLC_TagToName");

	Params::BP_DLCAnnouncer_C_ConvDLC_TagToName Parms{};

	Parms.InTagList = std::move(InTagList);

	UObject::ProcessEvent(Func, &Parms);

	InTagList = std::move(Parms.InTagList);

	if (DLC_NameList != nullptr)
		*DLC_NameList = std::move(Parms.DLC_NameList);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.DLC_ClearList
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_DLCAnnouncer_C::DLC_ClearList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "DLC_ClearList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.DLC_AddDisableList
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             In_DLC_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DLCAnnouncer_C::DLC_AddDisableList(class FName In_DLC_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "DLC_AddDisableList");

	Params::BP_DLCAnnouncer_C_DLC_AddDisableList Parms{};

	Parms.In_DLC_Name = In_DLC_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.DLC_AddEnableList
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             In_DLC_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DLCAnnouncer_C::DLC_AddEnableList(class FName In_DLC_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "DLC_AddEnableList");

	Params::BP_DLCAnnouncer_C_DLC_AddEnableList Parms{};

	Parms.In_DLC_Name = In_DLC_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.BPI_StartTask_DlcReflectAndAnnounce
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBoot                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DLCAnnouncer_C::BPI_StartTask_DlcReflectAndAnnounce(bool IsBoot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "BPI_StartTask_DlcReflectAndAnnounce");

	Params::BP_DLCAnnouncer_C_BPI_StartTask_DlcReflectAndAnnounce Parms{};

	Parms.IsBoot = IsBoot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.BPI_StartTask_OnlyDlcReflect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBoot                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DLCAnnouncer_C::BPI_StartTask_OnlyDlcReflect(bool IsBoot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "BPI_StartTask_OnlyDlcReflect");

	Params::BP_DLCAnnouncer_C_BPI_StartTask_OnlyDlcReflect Parms{};

	Parms.IsBoot = IsBoot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.BPI_StartTask_OnlyAnnounce
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DLCAnnouncer_C::BPI_StartTask_OnlyAnnounce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "BPI_StartTask_OnlyAnnounce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.DLC_OnMountComplete
// (BlueprintCallable, BlueprintEvent)

void ABP_DLCAnnouncer_C::DLC_OnMountComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "DLC_OnMountComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DLCAnnouncer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DLCAnnouncer_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "ReceiveTick");

	Params::BP_DLCAnnouncer_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DLCAnnouncer_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "ReceiveEndPlay");

	Params::BP_DLCAnnouncer_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DLCAnnouncer.BP_DLCAnnouncer_C.ExecuteUbergraph_BP_DLCAnnouncer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DLCAnnouncer_C::ExecuteUbergraph_BP_DLCAnnouncer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DLCAnnouncer_C", "ExecuteUbergraph_BP_DLCAnnouncer");

	Params::BP_DLCAnnouncer_C_ExecuteUbergraph_BP_DLCAnnouncer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

