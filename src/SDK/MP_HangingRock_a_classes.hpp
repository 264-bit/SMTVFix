#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MP_HangingRock_a

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MP_HangingRock_a.MP_HangingRock_a_C
// 0x0028 (0x0248 - 0x0220)
class AMP_HangingRock_a_C final : public AActor
{
public:
	class UStaticMeshComponent*                   EdgeGripMesh;                                      // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CollisionMesh;                                     // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RenderMesh;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bMapIcon;                                          // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void SetMinimapIconTableRow(int32 Param_Index, struct FMinimapIconTableRow* OutRow, bool* NeedToAddMore);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MP_HangingRock_a_C">();
	}
	static class AMP_HangingRock_a_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMP_HangingRock_a_C>();
	}
};
static_assert(alignof(AMP_HangingRock_a_C) == 0x000008, "Wrong alignment on AMP_HangingRock_a_C");
static_assert(sizeof(AMP_HangingRock_a_C) == 0x000248, "Wrong size on AMP_HangingRock_a_C");
static_assert(offsetof(AMP_HangingRock_a_C, EdgeGripMesh) == 0x000220, "Member 'AMP_HangingRock_a_C::EdgeGripMesh' has a wrong offset!");
static_assert(offsetof(AMP_HangingRock_a_C, CollisionMesh) == 0x000228, "Member 'AMP_HangingRock_a_C::CollisionMesh' has a wrong offset!");
static_assert(offsetof(AMP_HangingRock_a_C, RenderMesh) == 0x000230, "Member 'AMP_HangingRock_a_C::RenderMesh' has a wrong offset!");
static_assert(offsetof(AMP_HangingRock_a_C, DefaultSceneRoot) == 0x000238, "Member 'AMP_HangingRock_a_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMP_HangingRock_a_C, bMapIcon) == 0x000240, "Member 'AMP_HangingRock_a_C::bMapIcon' has a wrong offset!");

}

