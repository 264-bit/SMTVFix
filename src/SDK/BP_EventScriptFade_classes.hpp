#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventScriptFade

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EventScriptFade.BP_EventScriptFade_C
// 0x0050 (0x0270 - 0x0220)
class ABP_EventScriptFade_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWB_EventColorFade_C*                   CFadeWidget;                                       // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CurrentColor;                                      // 0x0238(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinalTime;                                         // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FirstColor;                                        // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FinalColor;                                        // 0x0260(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EventScriptFade(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void BI_RecalcOverlap();
	void BI_ChangeMaterialAlice();
	void PlayDeadMotion(bool Active);
	void CallDeactivate();
	void DestroyKeyFree();
	void CheckActive();
	void SetFade(const struct FLinearColor& Param_FirstColor, const struct FLinearColor& Param_FinalColor, float Time);
	void FadeInBlack(float Time);
	void FadeOutBlack(float Time);
	void FadeInWhite(float Time);
	void FadeOutWhite(float Time);
	void SetAdditiveMode(bool Additive);
	void BI_FadeOutWhite(float Time, bool* Ret);
	void BI_FadeInWhite(float Time, bool* Ret);
	void BI_FadeOutBlack(float Time, bool* Ret);
	void BI_FadeInBlack(float Time, bool* Ret);
	void SpawnReflesh(bool* NoUse);
	void BI_DeleteScript(bool* NoUse);
	void BI_SpawnScript(bool* NoUse);
	void BI_CheckActiveArea(bool* IsActive);
	void ForceSpawnScript(bool* NoUse);
	void BI_SetInvalidWindow(bool Invalid, bool* NoUse);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EventScriptFade_C">();
	}
	static class ABP_EventScriptFade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EventScriptFade_C>();
	}
};
static_assert(alignof(ABP_EventScriptFade_C) == 0x000008, "Wrong alignment on ABP_EventScriptFade_C");
static_assert(sizeof(ABP_EventScriptFade_C) == 0x000270, "Wrong size on ABP_EventScriptFade_C");
static_assert(offsetof(ABP_EventScriptFade_C, UberGraphFrame) == 0x000220, "Member 'ABP_EventScriptFade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EventScriptFade_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_EventScriptFade_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_EventScriptFade_C, CFadeWidget) == 0x000230, "Member 'ABP_EventScriptFade_C::CFadeWidget' has a wrong offset!");
static_assert(offsetof(ABP_EventScriptFade_C, CurrentColor) == 0x000238, "Member 'ABP_EventScriptFade_C::CurrentColor' has a wrong offset!");
static_assert(offsetof(ABP_EventScriptFade_C, CurrentTime) == 0x000248, "Member 'ABP_EventScriptFade_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(ABP_EventScriptFade_C, FinalTime) == 0x00024C, "Member 'ABP_EventScriptFade_C::FinalTime' has a wrong offset!");
static_assert(offsetof(ABP_EventScriptFade_C, FirstColor) == 0x000250, "Member 'ABP_EventScriptFade_C::FirstColor' has a wrong offset!");
static_assert(offsetof(ABP_EventScriptFade_C, FinalColor) == 0x000260, "Member 'ABP_EventScriptFade_C::FinalColor' has a wrong offset!");

}

