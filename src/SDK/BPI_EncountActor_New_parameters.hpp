#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_EncountActor_New

#include "Basic.hpp"

#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BPI_EncountActor_New.BPI_EncountActor_New_C.BI_SetEncountID
// 0x0008 (0x0008 - 0x0000)
struct BPI_EncountActor_New_C_BI_SetEncountID final
{
public:
	int32                                         EncountID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EncountActor_New_C_BI_SetEncountID) == 0x000004, "Wrong alignment on BPI_EncountActor_New_C_BI_SetEncountID");
static_assert(sizeof(BPI_EncountActor_New_C_BI_SetEncountID) == 0x000008, "Wrong size on BPI_EncountActor_New_C_BI_SetEncountID");
static_assert(offsetof(BPI_EncountActor_New_C_BI_SetEncountID, EncountID) == 0x000000, "Member 'BPI_EncountActor_New_C_BI_SetEncountID::EncountID' has a wrong offset!");
static_assert(offsetof(BPI_EncountActor_New_C_BI_SetEncountID, NoUse) == 0x000004, "Member 'BPI_EncountActor_New_C_BI_SetEncountID::NoUse' has a wrong offset!");

// Function BPI_EncountActor_New.BPI_EncountActor_New_C.BI_LoadEventSubLevel
// 0x0001 (0x0001 - 0x0000)
struct BPI_EncountActor_New_C_BI_LoadEventSubLevel final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EncountActor_New_C_BI_LoadEventSubLevel) == 0x000001, "Wrong alignment on BPI_EncountActor_New_C_BI_LoadEventSubLevel");
static_assert(sizeof(BPI_EncountActor_New_C_BI_LoadEventSubLevel) == 0x000001, "Wrong size on BPI_EncountActor_New_C_BI_LoadEventSubLevel");
static_assert(offsetof(BPI_EncountActor_New_C_BI_LoadEventSubLevel, NoUse) == 0x000000, "Member 'BPI_EncountActor_New_C_BI_LoadEventSubLevel::NoUse' has a wrong offset!");

// Function BPI_EncountActor_New.BPI_EncountActor_New_C.BI_CheckType
// 0x0001 (0x0001 - 0x0000)
struct BPI_EncountActor_New_C_BI_CheckType final
{
public:
	E_BTL_ENCOUNT_SPAWN                           Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_EncountActor_New_C_BI_CheckType) == 0x000001, "Wrong alignment on BPI_EncountActor_New_C_BI_CheckType");
static_assert(sizeof(BPI_EncountActor_New_C_BI_CheckType) == 0x000001, "Wrong size on BPI_EncountActor_New_C_BI_CheckType");
static_assert(offsetof(BPI_EncountActor_New_C_BI_CheckType, Type) == 0x000000, "Member 'BPI_EncountActor_New_C_BI_CheckType::Type' has a wrong offset!");

// Function BPI_EncountActor_New.BPI_EncountActor_New_C.BI_NoLoadMakeEnemy
// 0x0001 (0x0001 - 0x0000)
struct BPI_EncountActor_New_C_BI_NoLoadMakeEnemy final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EncountActor_New_C_BI_NoLoadMakeEnemy) == 0x000001, "Wrong alignment on BPI_EncountActor_New_C_BI_NoLoadMakeEnemy");
static_assert(sizeof(BPI_EncountActor_New_C_BI_NoLoadMakeEnemy) == 0x000001, "Wrong size on BPI_EncountActor_New_C_BI_NoLoadMakeEnemy");
static_assert(offsetof(BPI_EncountActor_New_C_BI_NoLoadMakeEnemy, NoUse) == 0x000000, "Member 'BPI_EncountActor_New_C_BI_NoLoadMakeEnemy::NoUse' has a wrong offset!");

// Function BPI_EncountActor_New.BPI_EncountActor_New_C.BI_CallEncountCamera
// 0x0001 (0x0001 - 0x0000)
struct BPI_EncountActor_New_C_BI_CallEncountCamera final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EncountActor_New_C_BI_CallEncountCamera) == 0x000001, "Wrong alignment on BPI_EncountActor_New_C_BI_CallEncountCamera");
static_assert(sizeof(BPI_EncountActor_New_C_BI_CallEncountCamera) == 0x000001, "Wrong size on BPI_EncountActor_New_C_BI_CallEncountCamera");
static_assert(offsetof(BPI_EncountActor_New_C_BI_CallEncountCamera, NoUse) == 0x000000, "Member 'BPI_EncountActor_New_C_BI_CallEncountCamera::NoUse' has a wrong offset!");

// Function BPI_EncountActor_New.BPI_EncountActor_New_C.BI_SetBossRoomBattle
// 0x0002 (0x0002 - 0x0000)
struct BPI_EncountActor_New_C_BI_SetBossRoomBattle final
{
public:
	bool                                          IsBossRoom;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EncountActor_New_C_BI_SetBossRoomBattle) == 0x000001, "Wrong alignment on BPI_EncountActor_New_C_BI_SetBossRoomBattle");
static_assert(sizeof(BPI_EncountActor_New_C_BI_SetBossRoomBattle) == 0x000002, "Wrong size on BPI_EncountActor_New_C_BI_SetBossRoomBattle");
static_assert(offsetof(BPI_EncountActor_New_C_BI_SetBossRoomBattle, IsBossRoom) == 0x000000, "Member 'BPI_EncountActor_New_C_BI_SetBossRoomBattle::IsBossRoom' has a wrong offset!");
static_assert(offsetof(BPI_EncountActor_New_C_BI_SetBossRoomBattle, NoUse) == 0x000001, "Member 'BPI_EncountActor_New_C_BI_SetBossRoomBattle::NoUse' has a wrong offset!");

// Function BPI_EncountActor_New.BPI_EncountActor_New_C.BI_UnloadPreviousEventSubLevel
// 0x0001 (0x0001 - 0x0000)
struct BPI_EncountActor_New_C_BI_UnloadPreviousEventSubLevel final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EncountActor_New_C_BI_UnloadPreviousEventSubLevel) == 0x000001, "Wrong alignment on BPI_EncountActor_New_C_BI_UnloadPreviousEventSubLevel");
static_assert(sizeof(BPI_EncountActor_New_C_BI_UnloadPreviousEventSubLevel) == 0x000001, "Wrong size on BPI_EncountActor_New_C_BI_UnloadPreviousEventSubLevel");
static_assert(offsetof(BPI_EncountActor_New_C_BI_UnloadPreviousEventSubLevel, NoUse) == 0x000000, "Member 'BPI_EncountActor_New_C_BI_UnloadPreviousEventSubLevel::NoUse' has a wrong offset!");

}

