#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapCharaPanelCtrl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Project_structs.hpp"
#include "Project_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MapCharaPanelCtrl.BP_MapCharaPanelCtrl_C
// 0x0030 (0x0260 - 0x0230)
class ABP_MapCharaPanelCtrl_C final : public AMapCharaPanelCtrlBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CharaPanel_C*>               BPCharaPanelArray;                                 // 0x0240(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UWB_MapCharaPanel_C*                    WBMapCharaPanel;                                   // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Panelindex;                                        // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CreatePanelFlag;                                   // 0x025C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDispOn;                                          // 0x025D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_MapCharaPanelCtrl(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void IMapCharaPanelUpdate();
	void IMapCharaPanelCreate();
	void IMapCharaPanelOff();
	void IMapCharaPanelOn(bool Immediate);
	void StartPanelFadeOut();
	void BIESetMapCharaPanelFadeOutPanelAnimation(int32 InIndex);
	void BIESetInitializeMapCharaPanelAnimation(int32 InIndex);
	void StopPanelAnimation();
	void StartPanelAnimation();
	void IMapCharaPanelResetRecoveryAnimation(int32 InNkmIndex);
	void IMapCharaPanelSetHealHpMp(int32 InNkmIndex, float InStartTime, int32 InHealHp, int32 InHealMp, E_WIDGET_PRIO InPrio);
	void CanBeDisplayedCharaPanel(bool* OutDisplayed);
	void StartVNumberAnimation(int32 InIndex, float InStartTime, int32 InHp, int32 InMp, E_WIDGET_PRIO InPrio, bool* IsAnime);
	void GetPanelIndexFromNkmIndex(int32 InNkmIndex, int32* OutIndex);
	void CalcPanelHpMp(int32 InIndex, int32 InHp, int32 InMp, int32 InFrame);
	void SetHiddenAnimation();
	void IMapCharaPanelUpdateDevilTalkIcon(bool InAllUpdate, int32 InNkmIndex, bool* OutParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MapCharaPanelCtrl_C">();
	}
	static class ABP_MapCharaPanelCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MapCharaPanelCtrl_C>();
	}
};
static_assert(alignof(ABP_MapCharaPanelCtrl_C) == 0x000008, "Wrong alignment on ABP_MapCharaPanelCtrl_C");
static_assert(sizeof(ABP_MapCharaPanelCtrl_C) == 0x000260, "Wrong size on ABP_MapCharaPanelCtrl_C");
static_assert(offsetof(ABP_MapCharaPanelCtrl_C, UberGraphFrame) == 0x000230, "Member 'ABP_MapCharaPanelCtrl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MapCharaPanelCtrl_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_MapCharaPanelCtrl_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MapCharaPanelCtrl_C, BPCharaPanelArray) == 0x000240, "Member 'ABP_MapCharaPanelCtrl_C::BPCharaPanelArray' has a wrong offset!");
static_assert(offsetof(ABP_MapCharaPanelCtrl_C, WBMapCharaPanel) == 0x000250, "Member 'ABP_MapCharaPanelCtrl_C::WBMapCharaPanel' has a wrong offset!");
static_assert(offsetof(ABP_MapCharaPanelCtrl_C, Panelindex) == 0x000258, "Member 'ABP_MapCharaPanelCtrl_C::Panelindex' has a wrong offset!");
static_assert(offsetof(ABP_MapCharaPanelCtrl_C, CreatePanelFlag) == 0x00025C, "Member 'ABP_MapCharaPanelCtrl_C::CreatePanelFlag' has a wrong offset!");
static_assert(offsetof(ABP_MapCharaPanelCtrl_C, IsDispOn) == 0x00025D, "Member 'ABP_MapCharaPanelCtrl_C::IsDispOn' has a wrong offset!");

}

