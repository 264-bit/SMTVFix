#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_LvUpEvent

#include "Basic.hpp"

#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BPI_LvUpEvent.BPI_LvUpEvent_C.LvUpEventStart
// 0x0001 (0x0001 - 0x0000)
struct BPI_LvUpEvent_C_LvUpEventStart final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LvUpEvent_C_LvUpEventStart) == 0x000001, "Wrong alignment on BPI_LvUpEvent_C_LvUpEventStart");
static_assert(sizeof(BPI_LvUpEvent_C_LvUpEventStart) == 0x000001, "Wrong size on BPI_LvUpEvent_C_LvUpEventStart");
static_assert(offsetof(BPI_LvUpEvent_C_LvUpEventStart, Dummy) == 0x000000, "Member 'BPI_LvUpEvent_C_LvUpEventStart::Dummy' has a wrong offset!");

// Function BPI_LvUpEvent.BPI_LvUpEvent_C.IsEndLvUpEvent
// 0x0001 (0x0001 - 0x0000)
struct BPI_LvUpEvent_C_IsEndLvUpEvent final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LvUpEvent_C_IsEndLvUpEvent) == 0x000001, "Wrong alignment on BPI_LvUpEvent_C_IsEndLvUpEvent");
static_assert(sizeof(BPI_LvUpEvent_C_IsEndLvUpEvent) == 0x000001, "Wrong size on BPI_LvUpEvent_C_IsEndLvUpEvent");
static_assert(offsetof(BPI_LvUpEvent_C_IsEndLvUpEvent, IsEnd) == 0x000000, "Member 'BPI_LvUpEvent_C_IsEndLvUpEvent::IsEnd' has a wrong offset!");

// Function BPI_LvUpEvent.BPI_LvUpEvent_C.InitializeLvUpEvent
// 0x0010 (0x0010 - 0x0000)
struct BPI_LvUpEvent_C_InitializeLvUpEvent final
{
public:
	class AActor*                                 CharaChanger;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LvUpEvent_C_InitializeLvUpEvent) == 0x000008, "Wrong alignment on BPI_LvUpEvent_C_InitializeLvUpEvent");
static_assert(sizeof(BPI_LvUpEvent_C_InitializeLvUpEvent) == 0x000010, "Wrong size on BPI_LvUpEvent_C_InitializeLvUpEvent");
static_assert(offsetof(BPI_LvUpEvent_C_InitializeLvUpEvent, CharaChanger) == 0x000000, "Member 'BPI_LvUpEvent_C_InitializeLvUpEvent::CharaChanger' has a wrong offset!");
static_assert(offsetof(BPI_LvUpEvent_C_InitializeLvUpEvent, Success) == 0x000008, "Member 'BPI_LvUpEvent_C_InitializeLvUpEvent::Success' has a wrong offset!");

// Function BPI_LvUpEvent.BPI_LvUpEvent_C.GrowUpFromResultData
// 0x0070 (0x0070 - 0x0000)
struct BPI_LvUpEvent_C_GrowUpFromResultData final
{
public:
	struct FResultData                            ResultData;                                        // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ExistLvUpChara;                                    // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LvUpEvent_C_GrowUpFromResultData) == 0x000008, "Wrong alignment on BPI_LvUpEvent_C_GrowUpFromResultData");
static_assert(sizeof(BPI_LvUpEvent_C_GrowUpFromResultData) == 0x000070, "Wrong size on BPI_LvUpEvent_C_GrowUpFromResultData");
static_assert(offsetof(BPI_LvUpEvent_C_GrowUpFromResultData, ResultData) == 0x000000, "Member 'BPI_LvUpEvent_C_GrowUpFromResultData::ResultData' has a wrong offset!");
static_assert(offsetof(BPI_LvUpEvent_C_GrowUpFromResultData, ExistLvUpChara) == 0x000068, "Member 'BPI_LvUpEvent_C_GrowUpFromResultData::ExistLvUpChara' has a wrong offset!");

// Function BPI_LvUpEvent.BPI_LvUpEvent_C.StatusCameraStart
// 0x0010 (0x0010 - 0x0000)
struct BPI_LvUpEvent_C_StatusCameraStart final
{
public:
	class AActor*                                 CharaChanger;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LvUpEvent_C_StatusCameraStart) == 0x000008, "Wrong alignment on BPI_LvUpEvent_C_StatusCameraStart");
static_assert(sizeof(BPI_LvUpEvent_C_StatusCameraStart) == 0x000010, "Wrong size on BPI_LvUpEvent_C_StatusCameraStart");
static_assert(offsetof(BPI_LvUpEvent_C_StatusCameraStart, CharaChanger) == 0x000000, "Member 'BPI_LvUpEvent_C_StatusCameraStart::CharaChanger' has a wrong offset!");
static_assert(offsetof(BPI_LvUpEvent_C_StatusCameraStart, Success) == 0x000008, "Member 'BPI_LvUpEvent_C_StatusCameraStart::Success' has a wrong offset!");

// Function BPI_LvUpEvent.BPI_LvUpEvent_C.TryCreateLvUpEvent_ForUnite
// 0x0008 (0x0008 - 0x0000)
struct BPI_LvUpEvent_C_TryCreateLvUpEvent_ForUnite final
{
public:
	int32                                         ResultNkmIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HappenLvUpEvent;                                   // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LvUpEvent_C_TryCreateLvUpEvent_ForUnite) == 0x000004, "Wrong alignment on BPI_LvUpEvent_C_TryCreateLvUpEvent_ForUnite");
static_assert(sizeof(BPI_LvUpEvent_C_TryCreateLvUpEvent_ForUnite) == 0x000008, "Wrong size on BPI_LvUpEvent_C_TryCreateLvUpEvent_ForUnite");
static_assert(offsetof(BPI_LvUpEvent_C_TryCreateLvUpEvent_ForUnite, ResultNkmIndex) == 0x000000, "Member 'BPI_LvUpEvent_C_TryCreateLvUpEvent_ForUnite::ResultNkmIndex' has a wrong offset!");
static_assert(offsetof(BPI_LvUpEvent_C_TryCreateLvUpEvent_ForUnite, HappenLvUpEvent) == 0x000004, "Member 'BPI_LvUpEvent_C_TryCreateLvUpEvent_ForUnite::HappenLvUpEvent' has a wrong offset!");

// Function BPI_LvUpEvent.BPI_LvUpEvent_C.StatusCameraEnd
// 0x0001 (0x0001 - 0x0000)
struct BPI_LvUpEvent_C_StatusCameraEnd final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LvUpEvent_C_StatusCameraEnd) == 0x000001, "Wrong alignment on BPI_LvUpEvent_C_StatusCameraEnd");
static_assert(sizeof(BPI_LvUpEvent_C_StatusCameraEnd) == 0x000001, "Wrong size on BPI_LvUpEvent_C_StatusCameraEnd");
static_assert(offsetof(BPI_LvUpEvent_C_StatusCameraEnd, Success) == 0x000000, "Member 'BPI_LvUpEvent_C_StatusCameraEnd::Success' has a wrong offset!");

// Function BPI_LvUpEvent.BPI_LvUpEvent_C.CloseUI
// 0x0002 (0x0002 - 0x0000)
struct BPI_LvUpEvent_C_CloseUI final
{
public:
	bool                                          Immediate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LvUpEvent_C_CloseUI) == 0x000001, "Wrong alignment on BPI_LvUpEvent_C_CloseUI");
static_assert(sizeof(BPI_LvUpEvent_C_CloseUI) == 0x000002, "Wrong size on BPI_LvUpEvent_C_CloseUI");
static_assert(offsetof(BPI_LvUpEvent_C_CloseUI, Immediate) == 0x000000, "Member 'BPI_LvUpEvent_C_CloseUI::Immediate' has a wrong offset!");
static_assert(offsetof(BPI_LvUpEvent_C_CloseUI, Dummy) == 0x000001, "Member 'BPI_LvUpEvent_C_CloseUI::Dummy' has a wrong offset!");

// Function BPI_LvUpEvent.BPI_LvUpEvent_C.IsEndCloseUI
// 0x0001 (0x0001 - 0x0000)
struct BPI_LvUpEvent_C_IsEndCloseUI final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LvUpEvent_C_IsEndCloseUI) == 0x000001, "Wrong alignment on BPI_LvUpEvent_C_IsEndCloseUI");
static_assert(sizeof(BPI_LvUpEvent_C_IsEndCloseUI) == 0x000001, "Wrong size on BPI_LvUpEvent_C_IsEndCloseUI");
static_assert(offsetof(BPI_LvUpEvent_C_IsEndCloseUI, IsEnd) == 0x000000, "Member 'BPI_LvUpEvent_C_IsEndCloseUI::IsEnd' has a wrong offset!");

// Function BPI_LvUpEvent.BPI_LvUpEvent_C.PreLoadModel
// 0x0001 (0x0001 - 0x0000)
struct BPI_LvUpEvent_C_PreLoadModel final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LvUpEvent_C_PreLoadModel) == 0x000001, "Wrong alignment on BPI_LvUpEvent_C_PreLoadModel");
static_assert(sizeof(BPI_LvUpEvent_C_PreLoadModel) == 0x000001, "Wrong size on BPI_LvUpEvent_C_PreLoadModel");
static_assert(offsetof(BPI_LvUpEvent_C_PreLoadModel, Dummy) == 0x000000, "Member 'BPI_LvUpEvent_C_PreLoadModel::Dummy' has a wrong offset!");

}

