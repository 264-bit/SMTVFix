#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_CampParty

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_CampParty.BPL_CampParty_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_CampParty_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetName(const struct FCharaPanelData& Data, class UObject* __WorldContext, class FText* Param_Name);
	static void GetLevel_ToText(const struct FCharaPanelData& Data, class UObject* __WorldContext, class FText* Level);
	static void GetHpData(const struct FCharaPanelData& Data, class UObject* __WorldContext, int32* Hp, int32* HpMax);
	static void GetMpData(const struct FCharaPanelData& Data, class UObject* __WorldContext, int32* Mp, int32* MpMax);
	static void GetIsParty(const struct FCharaPanelData& Data, class UObject* __WorldContext, bool* IsParty);
	static void CreateCharaPanelList(class UObject* __WorldContext, TArray<struct FCharaPanelData>* PanelData);
	static void CreatePlayerPanelData(E_PLAYER_TYPE PlayerType, class UObject* __WorldContext, struct FCharaPanelData* CharaPanelData);
	static void CreateNkmPanleData(int32 NkmIndex, bool IsStock, class UObject* __WorldContext, struct FCharaPanelData* CharaPanelData);
	static void CreateEmptyCharaPanelData(bool IsStock, class UObject* __WorldContext, struct FCharaPanelData* CharaPanelData);
	static bool IsEntryBattle(int32 NkmIndex, class UObject* __WorldContext);
	static void GetNkmDevilId(int32 NkmIndex, class UObject* __WorldContext, int32* M_ID);
	static void GetPlayerPanelData(E_PLAYER_TYPE PlayerType, class UObject* __WorldContext, class FText* Param_Name, int32* Return_Value_M_Level, int32* Return_Value_M_HP, int32* Return_Value_M_Natural_Param_M_HPMax, int32* Return_Value_M_MP, int32* Return_Value_M_Natural_Param_M_MPMax, int32* Return_Value_M_Bad_Status, int32* ParamPoint);
	static void GetNkmPanelData(int32 NkmIndex, class UObject* __WorldContext, class FText* Param_Name, int32* Return_Value_M_Level, int32* Return_Value_M_HP, int32* Return_Value_M_Std_Param_M_HPMax, int32* Return_Value_M_MP, int32* Return_Value_M_Std_Param_M_MPMax, int32* Return_Value_M_Bad_Status);
	static void CheckCharBst(int32 NkmIndex, E_BAD_STATUS bst, class UObject* __WorldContext, bool* Ret);
	static void GetIsEmpty(const struct FCharaPanelData& CharaPanelData, class UObject* __WorldContext, bool* IsEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_CampParty_C">();
	}
	static class UBPL_CampParty_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_CampParty_C>();
	}
};
static_assert(alignof(UBPL_CampParty_C) == 0x000008, "Wrong alignment on UBPL_CampParty_C");
static_assert(sizeof(UBPL_CampParty_C) == 0x000028, "Wrong size on UBPL_CampParty_C");

}

