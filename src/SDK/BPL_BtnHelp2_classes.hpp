#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_BtnHelp2

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_BtnHelp2.BPL_BtnHelp2_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_BtnHelp2_C final : public UBlueprintFunctionLibrary
{
public:
	static void BtnHelp_Open(const E_BTN_HELP_DIR InDirectionType, const E_BTN_HELP_POS_TYPE InPositionType, const bool SkipAnimation, class UObject* __WorldContext);
	static void BtnHelp_Open_AsChildOfCanvas(const E_BTN_HELP_DIR InDirectionType, const E_BTN_HELP_POS_TYPE InPositionType, const bool SkipAnimation, class UCanvasPanel*& InCanvasPanel, class UObject* __WorldContext);
	static void BtnHelp_Close(const E_BTN_HELP_DIR InDirectionType, const bool SkipAnimation, class UObject* __WorldContext);
	static void BtnHelp_Close_All(const bool SkipAnimation, class UObject* __WorldContext);
	static void BtnHelp_Change(const E_BTN_HELP_DIR InDirectionType, const E_BTN_HELP_POS_TYPE InPositionType, E_BTN_HELP_SET InHelpPattern, bool CloseOtherHelp, const bool SkipAnimation, bool ResetNowColor, bool ResetReserveColor, bool ResetHoldEffect, class UObject* __WorldContext);
	static void BtnHelp_Change_Manual(const E_BTN_HELP_DIR InDirectionType, const E_BTN_HELP_POS_TYPE InPositionType, TArray<struct FBtnHelpInfo>& InHelpInfo, bool CloseOtherHelp, const bool SkipAnimation, bool ResetNowColor, bool ResetReserveColor, bool ResetHoldEffect, class UObject* __WorldContext);
	static void BtnHelp_SkipAnim(const E_BTN_HELP_DIR InDirectionType, class UObject* __WorldContext);
	static void BtnHelp_SetPosType(const E_BTN_HELP_DIR InDirectionType, const E_BTN_HELP_POS_TYPE InPositionType, class UObject* __WorldContext);
	static void BtnHelp_SetInfo_Preset(const E_BTN_HELP_DIR InDirectionType, E_BTN_HELP_SET InHelpPattern, class UObject* __WorldContext);
	static void BtnHelp_SetInfo_Manual(const E_BTN_HELP_DIR InDirectionType, const TArray<struct FBtnHelpInfo>& InHelpInfo, class UObject* __WorldContext);
	static void BtnHelp_GetAnimState(E_BTN_HELP_DIR InDirectionType, class UObject* __WorldContext, E_BTN_HELP_UI_STATE* AnimState);
	static void BtnHelp_SetVisibility(const E_BTN_HELP_DIR InDirectionType, bool IsVisible, class UObject* __WorldContext);
	static void BtnHelp_GetVisibility(E_BTN_HELP_DIR InDirectionType, class UObject* __WorldContext, bool* IsVisible);
	static void BtnHelp_SetHoldEffect_byIdx(const E_BTN_HELP_DIR InDirectionType, int32 HelpIndex, bool IsHold, class UObject* __WorldContext);
	static void BtnHelp_SetHoldEffect_byEnum(const E_BTN_HELP_DIR InDirectionType, E_BTN_HELP_MAPPING_KEY_TYPE TargetMapping, bool IsHold, class UObject* __WorldContext);
	static void BtnHelp_SetHoldEffect_All(const E_BTN_HELP_DIR InDirectionType, bool IsHold, class UObject* __WorldContext);
	static void BtnHelp_SetActiveColor_byIdx(const E_BTN_HELP_DIR InDirectionType, int32 InBtnHelpIndex, bool IsActiveColor, class UObject* __WorldContext);
	static void BtnHelp_SetActiveColor_byEnum(const E_BTN_HELP_DIR InDirectionType, E_BTN_HELP_MAPPING_KEY_TYPE InTargetMapping, bool IsActiveColor, class UObject* __WorldContext);
	static void BtnHelp_GetActiveColor_byEnum(const E_BTN_HELP_DIR InDirectionType, E_BTN_HELP_MAPPING_KEY_TYPE InTargetMapping, class UObject* __WorldContext, bool* IsActive);
	static void BtnHelp_SetActiveColors_byIdx(const E_BTN_HELP_DIR InDirectionType, TArray<struct FST_BtnHelp_ColorInfo_byIdx>& InActiveColorInfo, class UObject* __WorldContext);
	static void BtnHelp_SetActiveColors_byEnum(const E_BTN_HELP_DIR InDirectionType, const TArray<struct FST_BtnHelp_ColorInfo_byEnum>& InActiveColorInfo, class UObject* __WorldContext);
	static void BtnHelp_SetActiveColors_All(const E_BTN_HELP_DIR InDirectionType, bool IsActive, class UObject* __WorldContext);
	static void BtnHelp_SetActiveColor_Reserve(const E_BTN_HELP_DIR InDirectionType, int32 InBtnHelpIndex, bool IsActiveColor, class UObject* __WorldContext);
	static void BtnHelp_SetActiveColors_Reserve(const E_BTN_HELP_DIR InDirectionType, TArray<struct FST_BtnHelp_ColorInfo_byIdx>& InReserveColorInfo, class UObject* __WorldContext);
	static void BtnHelp_CancelReserveColors(const E_BTN_HELP_DIR InDirectionType, class UObject* __WorldContext);
	static void BtnHelp_GetTextByEnum(E_BTN_HELP_MSG_TYPE InMsgEnum, class UObject* __WorldContext, class FText* HelpText);
	static void BtnHelp_SetIconMode(const bool IsGamePad, class UObject* __WorldContext);
	static void BtnHelp_AddWidgetToNormalViewport(E_BTN_HELP_DIR InDirectionType, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_BtnHelp2_C">();
	}
	static class UBPL_BtnHelp2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_BtnHelp2_C>();
	}
};
static_assert(alignof(UBPL_BtnHelp2_C) == 0x000008, "Wrong alignment on UBPL_BtnHelp2_C");
static_assert(sizeof(UBPL_BtnHelp2_C) == 0x000028, "Wrong size on UBPL_BtnHelp2_C");

}

