#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaFloatingComponent

#include "Basic.hpp"

#include "CharaFloatingComponent_classes.hpp"
#include "CharaFloatingComponent_parameters.hpp"


namespace SDK
{

// Function CharaFloatingComponent.CharaFloatingComponent_C.Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkinnedMeshComponent*            Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IKEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   IKPerch                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WatchOnesStep                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          GazePoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    GazePointEnable                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         DeltaRotation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCharaFloatingComponent_C::Update(float DeltaTime, class USkinnedMeshComponent* Mesh, bool IKEnable, float IKPerch, bool WatchOnesStep, const struct FVector& GazePoint, bool GazePointEnable, struct FVector* Offset, struct FRotator* DeltaRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaFloatingComponent_C", "Update");

	Params::CharaFloatingComponent_C_Update Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.Mesh = Mesh;
	Parms.IKEnable = IKEnable;
	Parms.IKPerch = IKPerch;
	Parms.WatchOnesStep = WatchOnesStep;
	Parms.GazePoint = std::move(GazePoint);
	Parms.GazePointEnable = GazePointEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = std::move(Parms.Offset);

	if (DeltaRotation != nullptr)
		*DeltaRotation = std::move(Parms.DeltaRotation);
}


// Function CharaFloatingComponent.CharaFloatingComponent_C.UpdateFloatingRotation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkinnedMeshComponent*            Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IKEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   IKPerch                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WatchOnesStep                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          GazePoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    GazePointEnable                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         DeltaRotation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCharaFloatingComponent_C::UpdateFloatingRotation(float DeltaTime, class USkinnedMeshComponent* Mesh, bool IKEnable, float IKPerch, bool WatchOnesStep, const struct FVector& GazePoint, bool GazePointEnable, struct FRotator* DeltaRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaFloatingComponent_C", "UpdateFloatingRotation");

	Params::CharaFloatingComponent_C_UpdateFloatingRotation Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.Mesh = Mesh;
	Parms.IKEnable = IKEnable;
	Parms.IKPerch = IKPerch;
	Parms.WatchOnesStep = WatchOnesStep;
	Parms.GazePoint = std::move(GazePoint);
	Parms.GazePointEnable = GazePointEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (DeltaRotation != nullptr)
		*DeltaRotation = std::move(Parms.DeltaRotation);
}


// Function CharaFloatingComponent.CharaFloatingComponent_C.UpdateFloatingLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkinnedMeshComponent*            Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IKEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   IKPerch                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCharaFloatingComponent_C::UpdateFloatingLocation(float DeltaTime, class USkinnedMeshComponent* Mesh, bool IKEnable, float IKPerch, struct FVector* Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaFloatingComponent_C", "UpdateFloatingLocation");

	Params::CharaFloatingComponent_C_UpdateFloatingLocation Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.Mesh = Mesh;
	Parms.IKEnable = IKEnable;
	Parms.IKPerch = IKPerch;

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = std::move(Parms.Offset);
}


// Function CharaFloatingComponent.CharaFloatingComponent_C.ModifyRotation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USkinnedMeshComponent*            Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GazePoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    GazePointEnable                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UCharaFloatingComponent_C::ModifyRotation(const struct FRotator& Rotation, class USkinnedMeshComponent* Mesh, const struct FVector& GazePoint, bool GazePointEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaFloatingComponent_C", "ModifyRotation");

	Params::CharaFloatingComponent_C_ModifyRotation Parms{};

	Parms.Rotation = std::move(Rotation);
	Parms.Mesh = Mesh;
	Parms.GazePoint = std::move(GazePoint);
	Parms.GazePointEnable = GazePointEnable;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharaFloatingComponent.CharaFloatingComponent_C.MakeRotation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkinnedMeshComponent*            Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalBefore                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalAfter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UCharaFloatingComponent_C::MakeRotation(class USkinnedMeshComponent* Mesh, const struct FVector& NormalBefore, const struct FVector& NormalAfter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaFloatingComponent_C", "MakeRotation");

	Params::CharaFloatingComponent_C_MakeRotation Parms{};

	Parms.Mesh = Mesh;
	Parms.NormalBefore = std::move(NormalBefore);
	Parms.NormalAfter = std::move(NormalAfter);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

