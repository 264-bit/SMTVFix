#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_AICommand

#include "Basic.hpp"

#include "BPI_AICommand_classes.hpp"
#include "BPI_AICommand_parameters.hpp"


namespace SDK
{

// Function BPI_AICommand.BPI_AICommand_C.BI_ActSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ActSkill(int32 SkillId, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ActSkill");

	Params::BPI_AICommand_C_BI_ActSkill Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ActAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ActAttack(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ActAttack");

	Params::BPI_AICommand_C_BI_ActAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAI(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAI");

	Params::BPI_AICommand_C_BI_TarAI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouNotPlus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouNotPlus(E_ATTRIBUTE_TYPE InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouNotPlus");

	Params::BPI_AICommand_C_BI_TarAishouNotPlus Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarRandom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarRandom(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarRandom");

	Params::BPI_AICommand_C_BI_TarRandom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyHPPerc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Perc                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyHPPerc(int32 Perc, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyHPPerc");

	Params::BPI_AICommand_C_BI_ChkMyHPPerc Parms{};

	Parms.Perc = Perc;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TempFlagOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TempFlagOn(uint8 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TempFlagOn");

	Params::BPI_AICommand_C_BI_TempFlagOn Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TempFlagOff
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TempFlagOff(uint8 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TempFlagOff");

	Params::BPI_AICommand_C_BI_TempFlagOff Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TempFlagCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TempFlagCheck(uint8 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TempFlagCheck");

	Params::BPI_AICommand_C_BI_TempFlagCheck Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TempFlagClear
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TempFlagClear(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TempFlagClear");

	Params::BPI_AICommand_C_BI_TempFlagClear Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLHPPerc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLHPPerc(int32 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLHPPerc");

	Params::BPI_AICommand_C_BI_ChkPLHPPerc Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLHPPercOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Perc                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLHPPercOver(int32 Perc, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLHPPercOver");

	Params::BPI_AICommand_C_BI_ChkPLHPPercOver Parms{};

	Parms.Perc = Perc;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarHPMin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarHPMin(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarHPMin");

	Params::BPI_AICommand_C_BI_TarHPMin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarHPMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarHPMax(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarHPMax");

	Params::BPI_AICommand_C_BI_TarHPMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENBstOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENBstOver(E_BAD_STATUS bst, int32 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENBstOver");

	Params::BPI_AICommand_C_BI_ChkENBstOver Parms{};

	Parms.bst = bst;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLBstOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLBstOver(E_BAD_STATUS bst, int32 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLBstOver");

	Params::BPI_AICommand_C_BI_ChkPLBstOver Parms{};

	Parms.bst = bst;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarNotBst
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarNotBst(E_BAD_STATUS bst, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarNotBst");

	Params::BPI_AICommand_C_BI_TarNotBst Parms{};

	Parms.bst = bst;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarBst
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarBst(E_BAD_STATUS bst, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarBst");

	Params::BPI_AICommand_C_BI_TarBst Parms{};

	Parms.bst = bst;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_OptNextCritical
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_OptNextCritical(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_OptNextCritical");

	Params::BPI_AICommand_C_BI_OptNextCritical Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_OptNextMiss
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_OptNextMiss(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_OptNextMiss");

	Params::BPI_AICommand_C_BI_OptNextMiss Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMySkillID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMySkillID(int32 Slot, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMySkillID");

	Params::BPI_AICommand_C_BI_GetMySkillID Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMySkillIDAttr
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ATTRIBUTE_TYPE                        RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMySkillIDAttr(int32 Slot, E_ATTRIBUTE_TYPE* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMySkillIDAttr");

	Params::BPI_AICommand_C_BI_GetMySkillIDAttr Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLAishouPlus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLAishouPlus(E_ATTRIBUTE_TYPE Attr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLAishouPlus");

	Params::BPI_AICommand_C_BI_ChkPLAishouPlus Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLAishouFlat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLAishouFlat(E_ATTRIBUTE_TYPE Attr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLAishouFlat");

	Params::BPI_AICommand_C_BI_ChkPLAishouFlat Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLAishouMinus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLAishouMinus(E_ATTRIBUTE_TYPE Attr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLAishouMinus");

	Params::BPI_AICommand_C_BI_ChkPLAishouMinus Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouMinus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouMinus(E_ATTRIBUTE_TYPE Attr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouMinus");

	Params::BPI_AICommand_C_BI_TarAishouMinus Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouNotMinus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouNotMinus(E_ATTRIBUTE_TYPE Attr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouNotMinus");

	Params::BPI_AICommand_C_BI_TarAishouNotMinus Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarHPPerc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InHp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarHPPerc(int32 InHp, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarHPPerc");

	Params::BPI_AICommand_C_BI_TarHPPerc Parms{};

	Parms.InHp = InHp;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarID(int32 InID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarID");

	Params::BPI_AICommand_C_BI_TarID Parms{};

	Parms.InID = InID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarPartyIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPartyIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarPartyIndex(int32 InPartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarPartyIndex");

	Params::BPI_AICommand_C_BI_TarPartyIndex Parms{};

	Parms.InPartyIndex = InPartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarHero
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarHero(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarHero");

	Params::BPI_AICommand_C_BI_TarHero Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarNotHero
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarNotHero(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarNotHero");

	Params::BPI_AICommand_C_BI_TarNotHero Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarNotID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarNotID(int32 InID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarNotID");

	Params::BPI_AICommand_C_BI_TarNotID Parms{};

	Parms.InID = InID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarSelf
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarSelf(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarSelf");

	Params::BPI_AICommand_C_BI_TarSelf Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouFlat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        InAishou                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouFlat(E_ATTRIBUTE_TYPE InAishou, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouFlat");

	Params::BPI_AICommand_C_BI_TarAishouFlat Parms{};

	Parms.InAishou = InAishou;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouNotFlat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        InAishou                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouNotFlat(E_ATTRIBUTE_TYPE InAishou, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouNotFlat");

	Params::BPI_AICommand_C_BI_TarAishouNotFlat Parms{};

	Parms.InAishou = InAishou;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarSelfSideOther
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarSelfSideOther(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarSelfSideOther");

	Params::BPI_AICommand_C_BI_TarSelfSideOther Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENHPPerc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Perc                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENHPPerc(int32 Perc, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENHPPerc");

	Params::BPI_AICommand_C_BI_ChkENHPPerc Parms{};

	Parms.Perc = Perc;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENHPPercOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Perc                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENHPPercOver(int32 Perc, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENHPPercOver");

	Params::BPI_AICommand_C_BI_ChkENHPPercOver Parms{};

	Parms.Perc = Perc;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyLvOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyLvOver(int32 Level, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyLvOver");

	Params::BPI_AICommand_C_BI_ChkMyLvOver Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLLvOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLLvOver(int32 Level, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLLvOver");

	Params::BPI_AICommand_C_BI_ChkPLLvOver Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENLvOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENLvOver(int32 Level, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENLvOver");

	Params::BPI_AICommand_C_BI_ChkENLvOver Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENCnt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENCnt(int32 Num, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENCnt");

	Params::BPI_AICommand_C_BI_ChkENCnt Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyBst
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyBst(E_BAD_STATUS bst, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyBst");

	Params::BPI_AICommand_C_BI_ChkMyBst Parms{};

	Parms.bst = bst;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLBst
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLBst(E_BAD_STATUS bst, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLBst");

	Params::BPI_AICommand_C_BI_ChkPLBst Parms{};

	Parms.bst = bst;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENBst
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENBst(E_BAD_STATUS bst, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENBst");

	Params::BPI_AICommand_C_BI_ChkENBst Parms{};

	Parms.bst = bst;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLID(int32 ID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLID");

	Params::BPI_AICommand_C_BI_ChkPLID Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENID(int32 ID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENID");

	Params::BPI_AICommand_C_BI_ChkENID Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENHojoPlusNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AI_SERCH_AID                          InHojo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENHojoPlusNum(E_AI_SERCH_AID InHojo, int32 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENHojoPlusNum");

	Params::BPI_AICommand_C_BI_ChkENHojoPlusNum Parms{};

	Parms.InHojo = InHojo;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLHojoPlusNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AI_SERCH_AID                          InHojo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLHojoPlusNum(E_AI_SERCH_AID InHojo, int32 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLHojoPlusNum");

	Params::BPI_AICommand_C_BI_ChkPLHojoPlusNum Parms{};

	Parms.InHojo = InHojo;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENHojoMinusNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AI_SERCH_AID                          InHojo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENHojoMinusNum(E_AI_SERCH_AID InHojo, int32 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENHojoMinusNum");

	Params::BPI_AICommand_C_BI_ChkENHojoMinusNum Parms{};

	Parms.InHojo = InHojo;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLHojoMinusNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AI_SERCH_AID                          InHojo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLHojoMinusNum(E_AI_SERCH_AID InHojo, int32 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLHojoMinusNum");

	Params::BPI_AICommand_C_BI_ChkPLHojoMinusNum Parms{};

	Parms.InHojo = InHojo;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyUsedAttr
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        InAttr                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyUsedAttr(E_ATTRIBUTE_TYPE InAttr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyUsedAttr");

	Params::BPI_AICommand_C_BI_ChkMyUsedAttr Parms{};

	Parms.InAttr = InAttr;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyUsedSkillID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InSkillId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyUsedSkillID(int32 InSkillId, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyUsedSkillID");

	Params::BPI_AICommand_C_BI_ChkMyUsedSkillID Parms{};

	Parms.InSkillId = InSkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyUsedSkillIDTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InSkillId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InTurn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyUsedSkillIDTurn(int32 InSkillId, int32 InTurn, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyUsedSkillIDTurn");

	Params::BPI_AICommand_C_BI_ChkMyUsedSkillIDTurn Parms{};

	Parms.InSkillId = InSkillId;
	Parms.InTurn = InTurn;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyUsedSkillIDAct
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InSkillId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InActNum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsUsed                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyUsedSkillIDAct(int32 InSkillId, int32 InActNum, bool* IsUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyUsedSkillIDAct");

	Params::BPI_AICommand_C_BI_ChkMyUsedSkillIDAct Parms{};

	Parms.InSkillId = InSkillId;
	Parms.InActNum = InActNum;

	UObject::ProcessEvent(Func, &Parms);

	if (IsUsed != nullptr)
		*IsUsed = Parms.IsUsed;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyCharged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyCharged(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyCharged");

	Params::BPI_AICommand_C_BI_ChkMyCharged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyKaishingan
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyKaishingan(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyKaishingan");

	Params::BPI_AICommand_C_BI_ChkMyKaishingan Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_PLNotBst
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_PLNotBst(E_BAD_STATUS bst, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_PLNotBst");

	Params::BPI_AICommand_C_BI_Chk_PLNotBst Parms{};

	Parms.bst = bst;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_PLCritical
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_PLCritical(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_PLCritical");

	Params::BPI_AICommand_C_BI_Chk_PLCritical Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_ENIDHojoMinus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_EFFICACY_BD                           N                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   N2                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_ENIDHojoMinus(int32 InID, E_EFFICACY_BD N, int32 N2, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_ENIDHojoMinus");

	Params::BPI_AICommand_C_BI_Chk_ENIDHojoMinus Parms{};

	Parms.InID = InID;
	Parms.N = N;
	Parms.N2 = N2;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENIDHojoPlus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InDevilId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_EFFICACY_BD                           InHojo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENIDHojoPlus(int32 InDevilId, E_EFFICACY_BD InHojo, int32 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENIDHojoPlus");

	Params::BPI_AICommand_C_BI_ChkENIDHojoPlus Parms{};

	Parms.InDevilId = InDevilId;
	Parms.InHojo = InHojo;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_ENID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_ENID(int32 DevilID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_ENID");

	Params::BPI_AICommand_C_BI_Chk_ENID Parms{};

	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Tar_SetTargetHojoMIN
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_EFFICACY_BD                           Efficacy                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Tar_SetTargetHojoMIN(E_EFFICACY_BD Efficacy, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Tar_SetTargetHojoMIN");

	Params::BPI_AICommand_C_BI_Tar_SetTargetHojoMIN Parms{};

	Parms.Efficacy = Efficacy;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetENDevilID_AIAtkType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AI_ATK_TYPE                           AtkType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetENDevilID_AIAtkType(E_AI_ATK_TYPE AtkType, int32* DevilID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetENDevilID_AIAtkType");

	Params::BPI_AICommand_C_BI_GetENDevilID_AIAtkType Parms{};

	Parms.AtkType = AtkType;

	UObject::ProcessEvent(Func, &Parms);

	if (DevilID != nullptr)
		*DevilID = Parms.DevilID;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Test_AI
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_AICommand_C::BI_Test_AI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Test_AI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ActSummon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID_1                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID_2                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID_3                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ActSummon(int32 DevilID_0, int32 DevilID_1, int32 DevilID_2, int32 DevilID_3, int32 SkillId, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ActSummon");

	Params::BPI_AICommand_C_BI_ActSummon Parms{};

	Parms.DevilID_0 = DevilID_0;
	Parms.DevilID_1 = DevilID_1;
	Parms.DevilID_2 = DevilID_2;
	Parms.DevilID_3 = DevilID_3;
	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_PLBstOver2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            N                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_PLBstOver2(E_BAD_STATUS N, int32 Num, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_PLBstOver2");

	Params::BPI_AICommand_C_BI_Chk_PLBstOver2 Parms{};

	Parms.N = N;
	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_ENBstOver2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            N                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_ENBstOver2(E_BAD_STATUS N, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_ENBstOver2");

	Params::BPI_AICommand_C_BI_Chk_ENBstOver2 Parms{};

	Parms.N = N;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_PLUsedSkillID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TurnCnt                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_PLUsedSkillID(int32 SkillId, int32 TurnCnt, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_PLUsedSkillID");

	Params::BPI_AICommand_C_BI_Chk_PLUsedSkillID Parms{};

	Parms.SkillId = SkillId;
	Parms.TurnCnt = TurnCnt;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_ENUsedSkillID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TurnCnt                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_ENUsedSkillID(int32 SkillId, int32 TurnCnt, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_ENUsedSkillID");

	Params::BPI_AICommand_C_BI_Chk_ENUsedSkillID Parms{};

	Parms.SkillId = SkillId;
	Parms.TurnCnt = TurnCnt;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_PLAllHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   N                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_PLAllHP(int32 N, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_PLAllHP");

	Params::BPI_AICommand_C_BI_Chk_PLAllHP Parms{};

	Parms.N = N;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_ENAllHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   N                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_ENAllHP(int32 N, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_ENAllHP");

	Params::BPI_AICommand_C_BI_Chk_ENAllHP Parms{};

	Parms.N = N;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_MyConsentrate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_MyConsentrate(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_MyConsentrate");

	Params::BPI_AICommand_C_BI_Chk_MyConsentrate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Tar_SetTargetHojoMAX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_EFFICACY_BD                           N                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Tar_SetTargetHojoMAX(E_EFFICACY_BD N, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Tar_SetTargetHojoMAX");

	Params::BPI_AICommand_C_BI_Tar_SetTargetHojoMAX Parms{};

	Parms.N = N;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarNotBst2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            N                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarNotBst2(E_BAD_STATUS N, int32 Num, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarNotBst2");

	Params::BPI_AICommand_C_BI_TarNotBst2 Parms{};

	Parms.N = N;
	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_SetTempValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_SetTempValue(int32 InValue, int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_SetTempValue");

	Params::BPI_AICommand_C_BI_SetTempValue Parms{};

	Parms.InValue = InValue;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C. BI_ClearTempValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::_BI_ClearTempValue(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", " BI_ClearTempValue");

	Params::BPI_AICommand_C__BI_ClearTempValue Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetTempValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetTempValue(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetTempValue");

	Params::BPI_AICommand_C_BI_GetTempValue Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ClearTempValueAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ClearTempValueAll(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ClearTempValueAll");

	Params::BPI_AICommand_C_BI_ClearTempValueAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLCnt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLCnt(int32 Num, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLCnt");

	Params::BPI_AICommand_C_BI_ChkPLCnt Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMySkillTargetArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SKILL_TARGET                          RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMySkillTargetArea(int32 SkillIndex, E_SKILL_TARGET* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMySkillTargetArea");

	Params::BPI_AICommand_C_BI_GetMySkillTargetArea Parms{};

	Parms.SkillIndex = SkillIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetSkillHaveBst
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BAD_STATUS                            RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetSkillHaveBst(int32 SkillId, E_BAD_STATUS* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetSkillHaveBst");

	Params::BPI_AICommand_C_BI_GetSkillHaveBst Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Tar_AishouPlus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Tar_AishouPlus(E_ATTRIBUTE_TYPE Attr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Tar_AishouPlus");

	Params::BPI_AICommand_C_BI_Tar_AishouPlus Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMyHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMyHP(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMyHP");

	Params::BPI_AICommand_C_BI_GetMyHP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetGlobalActNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetGlobalActNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetGlobalActNum");

	Params::BPI_AICommand_C_BI_GetGlobalActNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMyActNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMyActNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMyActNum");

	Params::BPI_AICommand_C_BI_GetMyActNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMyActPassNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMyActPassNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMyActPassNum");

	Params::BPI_AICommand_C_BI_GetMyActPassNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetENBlockTargetNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetENBlockTargetNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetENBlockTargetNum");

	Params::BPI_AICommand_C_BI_GetENBlockTargetNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMyPartnerID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_PARTNER_ID                            RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMyPartnerID(E_PARTNER_ID* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMyPartnerID");

	Params::BPI_AICommand_C_BI_GetMyPartnerID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPartnerNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPartnerNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPartnerNum");

	Params::BPI_AICommand_C_BI_GetPartnerNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMyBstNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMyBstNum(E_BAD_STATUS bst, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMyBstNum");

	Params::BPI_AICommand_C_BI_GetMyBstNum Parms{};

	Parms.bst = bst;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetTurnMod
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Mod                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetTurnMod(int32 Mod, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetTurnMod");

	Params::BPI_AICommand_C_BI_GetTurnMod Parms{};

	Parms.Mod = Mod;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkAllTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkAllTurn(int32 Value, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkAllTurn");

	Params::BPI_AICommand_C_BI_ChkAllTurn Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkActNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkActNum(int32 Value, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkActNum");

	Params::BPI_AICommand_C_BI_ChkActNum Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENTargetAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TurnNum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENTargetAll(int32 TurnNum, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENTargetAll");

	Params::BPI_AICommand_C_BI_ChkENTargetAll Parms{};

	Parms.TurnNum = TurnNum;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyUpLifting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyUpLifting(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyUpLifting");

	Params::BPI_AICommand_C_BI_ChkMyUpLifting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENUpLiftingStage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   GaugeValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENUpLiftingStage(int32 GaugeValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENUpLiftingStage");

	Params::BPI_AICommand_C_BI_ChkENUpLiftingStage Parms{};

	Parms.GaugeValue = GaugeValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPress(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPress");

	Params::BPI_AICommand_C_BI_GetPress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPressFull
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPressFull(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPressFull");

	Params::BPI_AICommand_C_BI_GetPressFull Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPressHalf
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPressHalf(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPressHalf");

	Params::BPI_AICommand_C_BI_GetPressHalf Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_OptUpLifting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_OptUpLifting(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_OptUpLifting");

	Params::BPI_AICommand_C_BI_OptUpLifting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouReflection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouReflection(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouReflection");

	Params::BPI_AICommand_C_BI_TarAishouReflection Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouAbsorption
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouAbsorption(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouAbsorption");

	Params::BPI_AICommand_C_BI_TarAishouAbsorption Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouBlock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouBlock(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouBlock");

	Params::BPI_AICommand_C_BI_TarAishouBlock Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouNotReflection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouNotReflection(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouNotReflection");

	Params::BPI_AICommand_C_BI_TarAishouNotReflection Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouNotAbsorption
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouNotAbsorption(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouNotAbsorption");

	Params::BPI_AICommand_C_BI_TarAishouNotAbsorption Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarAishouNotBlock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarAishouNotBlock(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarAishouNotBlock");

	Params::BPI_AICommand_C_BI_TarAishouNotBlock Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarGuard
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarGuard(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarGuard");

	Params::BPI_AICommand_C_BI_TarGuard Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarNotGuard
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarNotGuard(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarNotGuard");

	Params::BPI_AICommand_C_BI_TarNotGuard Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLAishouReflection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLAishouReflection(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLAishouReflection");

	Params::BPI_AICommand_C_BI_ChkPLAishouReflection Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLAishouAbsorption
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLAishouAbsorption(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLAishouAbsorption");

	Params::BPI_AICommand_C_BI_ChkPLAishouAbsorption Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLAishouBlock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLAishouBlock(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLAishouBlock");

	Params::BPI_AICommand_C_BI_ChkPLAishouBlock Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLGuard
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLGuard(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLGuard");

	Params::BPI_AICommand_C_BI_ChkPLGuard Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLNotGuard
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLNotGuard(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLNotGuard");

	Params::BPI_AICommand_C_BI_ChkPLNotGuard Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLTetra
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLTetra(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLTetra");

	Params::BPI_AICommand_C_BI_ChkPLTetra Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarNotTetra
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarNotTetra(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarNotTetra");

	Params::BPI_AICommand_C_BI_TarNotTetra Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarMakra
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarMakra(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarMakra");

	Params::BPI_AICommand_C_BI_TarMakra Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarNotMakra
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarNotMakra(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarNotMakra");

	Params::BPI_AICommand_C_BI_TarNotMakra Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLNotTetra
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLNotTetra(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLNotTetra");

	Params::BPI_AICommand_C_BI_ChkPLNotTetra Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLMakra
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLMakra(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLMakra");

	Params::BPI_AICommand_C_BI_ChkPLMakra Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLNotMakra
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLNotMakra(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLNotMakra");

	Params::BPI_AICommand_C_BI_ChkPLNotMakra Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarTetra
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarTetra(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarTetra");

	Params::BPI_AICommand_C_BI_TarTetra Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_OptUpLifting_TurnEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_OptUpLifting_TurnEnd(int32 DevilID, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_OptUpLifting_TurnEnd");

	Params::BPI_AICommand_C_BI_OptUpLifting_TurnEnd Parms{};

	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetElectrification
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetElectrification(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetElectrification");

	Params::BPI_AICommand_C_BI_GetElectrification Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetDown(int32 InID, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetDown");

	Params::BPI_AICommand_C_BI_GetDown Parms{};

	Parms.InID = InID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ActSummonTsukuyomi
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID_1                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID_2                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID_3                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ActSummonTsukuyomi(int32 DevilID_0, int32 DevilID_1, int32 DevilID_2, int32 DevilID_3, int32 SkillId, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ActSummonTsukuyomi");

	Params::BPI_AICommand_C_BI_ActSummonTsukuyomi Parms{};

	Parms.DevilID_0 = DevilID_0;
	Parms.DevilID_1 = DevilID_1;
	Parms.DevilID_2 = DevilID_2;
	Parms.DevilID_3 = DevilID_3;
	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarSummon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarSummon(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarSummon");

	Params::BPI_AICommand_C_BI_TarSummon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLAishouReflection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLAishouReflection(E_ATTRIBUTE_TYPE Attr, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLAishouReflection");

	Params::BPI_AICommand_C_BI_GetPLAishouReflection Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLAishouAbsorption
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLAishouAbsorption(E_ATTRIBUTE_TYPE Attr, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLAishouAbsorption");

	Params::BPI_AICommand_C_BI_GetPLAishouAbsorption Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLAishouBlock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLAishouBlock(E_ATTRIBUTE_TYPE Attr, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLAishouBlock");

	Params::BPI_AICommand_C_BI_GetPLAishouBlock Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLAishouPlus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLAishouPlus(E_ATTRIBUTE_TYPE Attr, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLAishouPlus");

	Params::BPI_AICommand_C_BI_GetPLAishouPlus Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLAishouFlat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLAishouFlat(E_ATTRIBUTE_TYPE Attr, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLAishouFlat");

	Params::BPI_AICommand_C_BI_GetPLAishouFlat Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLAishouMinus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLAishouMinus(E_ATTRIBUTE_TYPE Attr, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLAishouMinus");

	Params::BPI_AICommand_C_BI_GetPLAishouMinus Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkPLChohatsu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkPLChohatsu(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkPLChohatsu");

	Params::BPI_AICommand_C_BI_ChkPLChohatsu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyAtcReflectionBefTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyAtcReflectionBefTurn(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyAtcReflectionBefTurn");

	Params::BPI_AICommand_C_BI_ChkMyAtcReflectionBefTurn Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyAtcAbsorptionBefTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyAtcAbsorptionBefTurn(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyAtcAbsorptionBefTurn");

	Params::BPI_AICommand_C_BI_ChkMyAtcAbsorptionBefTurn Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyAtcBlockBefTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyAtcBlockBefTurn(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyAtcBlockBefTurn");

	Params::BPI_AICommand_C_BI_ChkMyAtcBlockBefTurn Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyDmgAishouBefTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyDmgAishouBefTurn(E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyDmgAishouBefTurn");

	Params::BPI_AICommand_C_BI_ChkMyDmgAishouBefTurn Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMyDmgAishouMinusBefTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMyDmgAishouMinusBefTurn(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMyDmgAishouMinusBefTurn");

	Params::BPI_AICommand_C_BI_GetMyDmgAishouMinusBefTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMySkillIDByType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SKILL_TYPE                            SkillType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMySkillIDByType(E_SKILL_TYPE SkillType, int32* SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMySkillIDByType");

	Params::BPI_AICommand_C_BI_GetMySkillIDByType Parms{};

	Parms.SkillType = SkillType;

	UObject::ProcessEvent(Func, &Parms);

	if (SkillId != nullptr)
		*SkillId = Parms.SkillId;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetHojoSkillValidTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetHojoSkillValidTarget(int32 SkillId, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetHojoSkillValidTarget");

	Params::BPI_AICommand_C_BI_GetHojoSkillValidTarget Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetHPHealSkillID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetHPHealSkillID(int32* SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetHPHealSkillID");

	Params::BPI_AICommand_C_BI_GetHPHealSkillID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkillId != nullptr)
		*SkillId = Parms.SkillId;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetUpliftProbability
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Probability                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetUpliftProbability(int32* Probability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetUpliftProbability");

	Params::BPI_AICommand_C_BI_GetUpliftProbability Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Probability != nullptr)
		*Probability = Parms.Probability;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkEnemySurpriseTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSurprise                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkEnemySurpriseTurn(bool* IsSurprise)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkEnemySurpriseTurn");

	Params::BPI_AICommand_C_BI_ChkEnemySurpriseTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSurprise != nullptr)
		*IsSurprise = Parms.IsSurprise;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetAttackSkillID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAll                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SkillId                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetAttackSkillID(bool IsAll, int32* SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetAttackSkillID");

	Params::BPI_AICommand_C_BI_GetAttackSkillID Parms{};

	Parms.IsAll = IsAll;

	UObject::ProcessEvent(Func, &Parms);

	if (SkillId != nullptr)
		*SkillId = Parms.SkillId;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkEventEncount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEventEncount                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkEventEncount(bool* IsEventEncount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkEventEncount");

	Params::BPI_AICommand_C_BI_ChkEventEncount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEventEncount != nullptr)
		*IsEventEncount = Parms.IsEventEncount;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyFirstAct
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFirstAct                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyFirstAct(bool* IsFirstAct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyFirstAct");

	Params::BPI_AICommand_C_BI_ChkMyFirstAct Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFirstAct != nullptr)
		*IsFirstAct = Parms.IsFirstAct;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMyAidCounter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_CNT                               AidCounter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMyAidCounter(E_BTL_CNT AidCounter, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMyAidCounter");

	Params::BPI_AICommand_C_BI_GetMyAidCounter Parms{};

	Parms.AidCounter = AidCounter;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENHPPercID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Perc                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool IBPI_AICommand_C::BI_ChkENHPPercID(int32 DevilID, int32 Perc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENHPPercID");

	Params::BPI_AICommand_C_BI_ChkENHPPercID Parms{};

	Parms.DevilID = DevilID;
	Parms.Perc = Perc;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_ENIDUsedSkillIDTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Turn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Used                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_ENIDUsedSkillIDTurn(int32 DevilID, int32 SkillId, int32 Turn, bool* Used)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_ENIDUsedSkillIDTurn");

	Params::BPI_AICommand_C_BI_Chk_ENIDUsedSkillIDTurn Parms{};

	Parms.DevilID = DevilID;
	Parms.SkillId = SkillId;
	Parms.Turn = Turn;

	UObject::ProcessEvent(Func, &Parms);

	if (Used != nullptr)
		*Used = Parms.Used;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetENIDAidCounter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_CNT                               AidCounter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetENIDAidCounter(E_BTL_CNT AidCounter, int32 DevilID, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetENIDAidCounter");

	Params::BPI_AICommand_C_BI_GetENIDAidCounter Parms{};

	Parms.AidCounter = AidCounter;
	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetSelUseSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBtlAISkillData>          AISkillData                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   SkillId                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetSelUseSkill(TArray<struct FBtlAISkillData>& AISkillData, int32* SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetSelUseSkill");

	Params::BPI_AICommand_C_BI_GetSelUseSkill Parms{};

	Parms.AISkillData = std::move(AISkillData);

	UObject::ProcessEvent(Func, &Parms);

	AISkillData = std::move(Parms.AISkillData);

	if (SkillId != nullptr)
		*SkillId = Parms.SkillId;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetHojoPlusTotal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Inside                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AI_SERCH_AID                          InHojo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OutTotal                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetHojoPlusTotal(E_BTL_SIDE Inside, E_AI_SERCH_AID InHojo, int32 InValue, int32* OutTotal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetHojoPlusTotal");

	Params::BPI_AICommand_C_BI_GetHojoPlusTotal Parms{};

	Parms.Inside = Inside;
	Parms.InHojo = InHojo;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (OutTotal != nullptr)
		*OutTotal = Parms.OutTotal;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetHojoMinusTotal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Inside                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AI_SERCH_AID                          InHojo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OutTotal                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetHojoMinusTotal(E_BTL_SIDE Inside, E_AI_SERCH_AID InHojo, int32 InValue, int32* OutTotal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetHojoMinusTotal");

	Params::BPI_AICommand_C_BI_GetHojoMinusTotal Parms{};

	Parms.Inside = Inside;
	Parms.InHojo = InHojo;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (OutTotal != nullptr)
		*OutTotal = Parms.OutTotal;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_SummonPositionDevilID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SummonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_SummonPositionDevilID(int32 SummonIndex, int32 DevilID, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_SummonPositionDevilID");

	Params::BPI_AICommand_C_BI_Chk_SummonPositionDevilID Parms{};

	Parms.SummonIndex = SummonIndex;
	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarSmart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarSmart(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarSmart");

	Params::BPI_AICommand_C_BI_TarSmart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENTetraID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENTetraID(int32 DevilID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENTetraID");

	Params::BPI_AICommand_C_BI_ChkENTetraID Parms{};

	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENMakraID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENMakraID(int32 DevilID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENMakraID");

	Params::BPI_AICommand_C_BI_ChkENMakraID Parms{};

	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarHPRatioMIN
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarHPRatioMIN(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarHPRatioMIN");

	Params::BPI_AICommand_C_BI_TarHPRatioMIN Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarHPRatioMAX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarHPRatioMAX(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarHPRatioMAX");

	Params::BPI_AICommand_C_BI_TarHPRatioMAX Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetDekajaEffectiveTotal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Total                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetDekajaEffectiveTotal(int32* Total)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetDekajaEffectiveTotal");

	Params::BPI_AICommand_C_BI_GetDekajaEffectiveTotal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Total != nullptr)
		*Total = Parms.Total;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetDekundaEffectiveTotal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Total                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetDekundaEffectiveTotal(int32* Total)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetDekundaEffectiveTotal");

	Params::BPI_AICommand_C_BI_GetDekundaEffectiveTotal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Total != nullptr)
		*Total = Parms.Total;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetRandomIntegerInArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBtlAISkillData>          AISkillData                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetRandomIntegerInArray(TArray<struct FBtlAISkillData>& AISkillData, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetRandomIntegerInArray");

	Params::BPI_AICommand_C_BI_GetRandomIntegerInArray Parms{};

	Parms.AISkillData = std::move(AISkillData);

	UObject::ProcessEvent(Func, &Parms);

	AISkillData = std::move(Parms.AISkillData);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLBstCnt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Cnt                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLBstCnt(int32* Cnt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLBstCnt");

	Params::BPI_AICommand_C_BI_GetPLBstCnt Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Cnt != nullptr)
		*Cnt = Parms.Cnt;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPhysicalChargeEffectiveSkillID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPhysicalChargeEffectiveSkillID(int32* SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPhysicalChargeEffectiveSkillID");

	Params::BPI_AICommand_C_BI_GetPhysicalChargeEffectiveSkillID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkillId != nullptr)
		*SkillId = Parms.SkillId;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMagicChargeEffectiveSkillID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMagicChargeEffectiveSkillID(int32* SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMagicChargeEffectiveSkillID");

	Params::BPI_AICommand_C_BI_GetMagicChargeEffectiveSkillID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkillId != nullptr)
		*SkillId = Parms.SkillId;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyPhysicalCharge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyPhysicalCharge(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyPhysicalCharge");

	Params::BPI_AICommand_C_BI_ChkMyPhysicalCharge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkMyMagicCharge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkMyMagicCharge(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkMyMagicCharge");

	Params::BPI_AICommand_C_BI_ChkMyMagicCharge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetChargeSkillID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetChargeSkillID(int32* SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetChargeSkillID");

	Params::BPI_AICommand_C_BI_GetChargeSkillID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkillId != nullptr)
		*SkillId = Parms.SkillId;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetHojoSkillIDNotCharge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetHojoSkillIDNotCharge(int32* SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetHojoSkillIDNotCharge");

	Params::BPI_AICommand_C_BI_GetHojoSkillIDNotCharge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkillId != nullptr)
		*SkillId = Parms.SkillId;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetSkillOverwriteBst
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BAD_STATUS                            bst                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetSkillOverwriteBst(int32 SkillId, E_BAD_STATUS* bst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetSkillOverwriteBst");

	Params::BPI_AICommand_C_BI_GetSkillOverwriteBst Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (bst != nullptr)
		*bst = Parms.bst;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarENAnalyze
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarENAnalyze(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarENAnalyze");

	Params::BPI_AICommand_C_BI_TarENAnalyze Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetTarIdPLChohatsu_ENAnalyze
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetTarIdPLChohatsu_ENAnalyze(int32* DevilID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetTarIdPLChohatsu_ENAnalyze");

	Params::BPI_AICommand_C_BI_GetTarIdPLChohatsu_ENAnalyze Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DevilID != nullptr)
		*DevilID = Parms.DevilID;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLNumVaildAttr_ENAnalyze
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLNumVaildAttr_ENAnalyze(E_ATTRIBUTE_TYPE Attr, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLNumVaildAttr_ENAnalyze");

	Params::BPI_AICommand_C_BI_GetPLNumVaildAttr_ENAnalyze Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLNumVaildSkill_ENAnalyze
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLNumVaildSkill_ENAnalyze(int32 SkillId, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLNumVaildSkill_ENAnalyze");

	Params::BPI_AICommand_C_BI_GetPLNumVaildSkill_ENAnalyze Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkVaildAttrPLID_ENAnalyze
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkVaildAttrPLID_ENAnalyze(int32 DevilID, E_ATTRIBUTE_TYPE Attr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkVaildAttrPLID_ENAnalyze");

	Params::BPI_AICommand_C_BI_ChkVaildAttrPLID_ENAnalyze Parms{};

	Parms.DevilID = DevilID;
	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkVaildSkillPLID_ENAnalyze
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkVaildSkillPLID_ENAnalyze(int32 DevilID, int32 SkillId, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkVaildSkillPLID_ENAnalyze");

	Params::BPI_AICommand_C_BI_ChkVaildSkillPLID_ENAnalyze Parms{};

	Parms.DevilID = DevilID;
	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkDisabledAishou_ENAnalyze
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           CharaIdArray                                           (Parm, OutParm)
// TArray<bool>                            FlagCheckArray                                         (Parm, OutParm)

void IBPI_AICommand_C::BI_ChkDisabledAishou_ENAnalyze(TArray<int32>* CharaIdArray, TArray<bool>* FlagCheckArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkDisabledAishou_ENAnalyze");

	Params::BPI_AICommand_C_BI_ChkDisabledAishou_ENAnalyze Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharaIdArray != nullptr)
		*CharaIdArray = std::move(Parms.CharaIdArray);

	if (FlagCheckArray != nullptr)
		*FlagCheckArray = std::move(Parms.FlagCheckArray);
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ActSummon_EmptyPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID_1                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID_2                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DevilID_3                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsExclusionLeader                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ActSummon_EmptyPos(int32 DevilID_0, int32 DevilID_1, int32 DevilID_2, int32 DevilID_3, int32 SkillId, bool IsExclusionLeader, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ActSummon_EmptyPos");

	Params::BPI_AICommand_C_BI_ActSummon_EmptyPos Parms{};

	Parms.DevilID_0 = DevilID_0;
	Parms.DevilID_1 = DevilID_1;
	Parms.DevilID_2 = DevilID_2;
	Parms.DevilID_3 = DevilID_3;
	Parms.SkillId = SkillId;
	Parms.IsExclusionLeader = IsExclusionLeader;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarWeak(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarWeak");

	Params::BPI_AICommand_C_BI_TarWeak Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_BattleEventFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_BattleEventFlag(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_BattleEventFlag");

	Params::BPI_AICommand_C_BI_Chk_BattleEventFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkENUsedSkillIDTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Turn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Used                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkENUsedSkillIDTurn(int32 SkillId, int32 Turn, bool* Used)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkENUsedSkillIDTurn");

	Params::BPI_AICommand_C_BI_ChkENUsedSkillIDTurn Parms{};

	Parms.SkillId = SkillId;
	Parms.Turn = Turn;

	UObject::ProcessEvent(Func, &Parms);

	if (Used != nullptr)
		*Used = Parms.Used;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_Chk_BattleEventFlag2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_Chk_BattleEventFlag2(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_Chk_BattleEventFlag2");

	Params::BPI_AICommand_C_BI_Chk_BattleEventFlag2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMyMagatsuhiSkillIDArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           SkillIDArray                                           (Parm, OutParm)

void IBPI_AICommand_C::BI_GetMyMagatsuhiSkillIDArray(TArray<int32>* SkillIDArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMyMagatsuhiSkillIDArray");

	Params::BPI_AICommand_C_BI_GetMyMagatsuhiSkillIDArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkillIDArray != nullptr)
		*SkillIDArray = std::move(Parms.SkillIDArray);
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMagatsuhiDevilNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetMagatsuhiDevilNum(int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMagatsuhiDevilNum");

	Params::BPI_AICommand_C_BI_GetMagatsuhiDevilNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetStealDevilID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetStealDevilID(int32* DevilID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetStealDevilID");

	Params::BPI_AICommand_C_BI_GetStealDevilID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DevilID != nullptr)
		*DevilID = Parms.DevilID;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetDifficulty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_GAME_DIFFICULTY                       Difficulty                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetDifficulty(E_GAME_DIFFICULTY* Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetDifficulty");

	Params::BPI_AICommand_C_BI_GetDifficulty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Difficulty != nullptr)
		*Difficulty = Parms.Difficulty;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLAishouShield
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLAishouShield(E_ATTRIBUTE_TYPE Attr, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLAishouShield");

	Params::BPI_AICommand_C_BI_GetPLAishouShield Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLNumVaildSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLNumVaildSkill(int32 SkillId, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLNumVaildSkill");

	Params::BPI_AICommand_C_BI_GetPLNumVaildSkill Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLNumVaildAttr
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLNumVaildAttr(E_ATTRIBUTE_TYPE Attr, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLNumVaildAttr");

	Params::BPI_AICommand_C_BI_GetPLNumVaildAttr Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarValidSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarValidSkill(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarValidSkill");

	Params::BPI_AICommand_C_BI_TarValidSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarChohatsu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarChohatsu(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarChohatsu");

	Params::BPI_AICommand_C_BI_TarChohatsu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetTarIdPLChohatsu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Devil_id                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetTarIdPLChohatsu(int32* Devil_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetTarIdPLChohatsu");

	Params::BPI_AICommand_C_BI_GetTarIdPLChohatsu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Devil_id != nullptr)
		*Devil_id = Parms.Devil_id;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkVaildSkillPLID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkVaildSkillPLID(int32 DevilID, int32 SkillId, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkVaildSkillPLID");

	Params::BPI_AICommand_C_BI_ChkVaildSkillPLID Parms{};

	Parms.DevilID = DevilID;
	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkVaildAttrPLID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkVaildAttrPLID(int32 DevilID, E_ATTRIBUTE_TYPE Attr, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkVaildAttrPLID");

	Params::BPI_AICommand_C_BI_ChkVaildAttrPLID Parms{};

	Parms.DevilID = DevilID;
	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMyAishouChangeThisTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<E_ATTRIBUTE_TYPE>                List                                                   (Parm, OutParm)

void IBPI_AICommand_C::BI_GetMyAishouChangeThisTurn(TArray<E_ATTRIBUTE_TYPE>* List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMyAishouChangeThisTurn");

	Params::BPI_AICommand_C_BI_GetMyAishouChangeThisTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (List != nullptr)
		*List = std::move(Parms.List);
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetMyAisyouChangeAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<E_ATTRIBUTE_TYPE>                List                                                   (Parm, OutParm)

void IBPI_AICommand_C::BI_GetMyAisyouChangeAll(TArray<E_ATTRIBUTE_TYPE>* List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetMyAisyouChangeAll");

	Params::BPI_AICommand_C_BI_GetMyAisyouChangeAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (List != nullptr)
		*List = std::move(Parms.List);
}


// Function BPI_AICommand.BPI_AICommand_C.BI_TarENAnalyze2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_TarENAnalyze2(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_TarENAnalyze2");

	Params::BPI_AICommand_C_BI_TarENAnalyze2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLNumVaildAttr_ENAnalyze2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLNumVaildAttr_ENAnalyze2(E_ATTRIBUTE_TYPE Attr, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLNumVaildAttr_ENAnalyze2");

	Params::BPI_AICommand_C_BI_GetPLNumVaildAttr_ENAnalyze2 Parms{};

	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_GetPLNumVaildSkill_ENAnalyze2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_AICommand_C::BI_GetPLNumVaildSkill_ENAnalyze2(int32 SkillId, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_GetPLNumVaildSkill_ENAnalyze2");

	Params::BPI_AICommand_C_BI_GetPLNumVaildSkill_ENAnalyze2 Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkVaildAttrPLID_ENAnalyze2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ATTRIBUTE_TYPE                        Attr                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkVaildAttrPLID_ENAnalyze2(int32 DevilID, E_ATTRIBUTE_TYPE Attr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkVaildAttrPLID_ENAnalyze2");

	Params::BPI_AICommand_C_BI_ChkVaildAttrPLID_ENAnalyze2 Parms{};

	Parms.DevilID = DevilID;
	Parms.Attr = Attr;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkVaildSkillPLID_ENAnalyze2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_AICommand_C::BI_ChkVaildSkillPLID_ENAnalyze2(int32 DevilID, int32 SkillId, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkVaildSkillPLID_ENAnalyze2");

	Params::BPI_AICommand_C_BI_ChkVaildSkillPLID_ENAnalyze2 Parms{};

	Parms.DevilID = DevilID;
	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BPI_AICommand.BPI_AICommand_C.BI_ChkDisabledAishou_ENAnalyze2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           CharaIdArray                                           (Parm, OutParm)
// TArray<bool>                            FlagCheckArray                                         (Parm, OutParm)

void IBPI_AICommand_C::BI_ChkDisabledAishou_ENAnalyze2(TArray<int32>* CharaIdArray, TArray<bool>* FlagCheckArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_AICommand_C", "BI_ChkDisabledAishou_ENAnalyze2");

	Params::BPI_AICommand_C_BI_ChkDisabledAishou_ENAnalyze2 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharaIdArray != nullptr)
		*CharaIdArray = std::move(Parms.CharaIdArray);

	if (FlagCheckArray != nullptr)
		*FlagCheckArray = std::move(Parms.FlagCheckArray);
}

}

