#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleFieldCheckerBase

#include "Basic.hpp"

#include "BattleFieldCheckerBase_classes.hpp"
#include "BattleFieldCheckerBase_parameters.hpp"


namespace SDK
{

// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_TraceFailed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_TraceFailed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_TraceFailed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.EvtTraceSuccess__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::EvtTraceSuccess__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "EvtTraceSuccess__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_Err_OriginTrace__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_Err_OriginTrace__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_Err_OriginTrace__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.ExecuteUbergraph_BattleFieldCheckerBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::ExecuteUbergraph_BattleFieldCheckerBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "ExecuteUbergraph_BattleFieldCheckerBase");

	Params::BattleFieldCheckerBase_C_ExecuteUbergraph_BattleFieldCheckerBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_BattleFinished
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_BattleFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_BattleFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_Err_Bottom
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InMesh                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::Evt_Err_Bottom(class UObject* InMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_Err_Bottom");

	Params::BattleFieldCheckerBase_C_Evt_Err_Bottom Parms{};

	Parms.InMesh = InMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_CellingFinished
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_CellingFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_CellingFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_Err_Celling
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InMesh                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ErrorObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::Evt_Err_Celling(class UObject* InMesh, class UObject* ErrorObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_Err_Celling");

	Params::BattleFieldCheckerBase_C_Evt_Err_Celling Parms{};

	Parms.InMesh = InMesh;
	Parms.ErrorObject = ErrorObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_ChipAngleFinished
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_ChipAngleFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_ChipAngleFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_Err_ChipAngle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InMesh                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::Evt_Err_ChipAngle(class UObject* InMesh, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_Err_ChipAngle");

	Params::BattleFieldCheckerBase_C_Evt_Err_ChipAngle Parms{};

	Parms.InMesh = InMesh;
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_Err_Origin
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_Err_Origin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_Err_Origin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_Err_EFAngle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::Evt_Err_EFAngle(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_Err_EFAngle");

	Params::BattleFieldCheckerBase_C_Evt_Err_EFAngle Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_Err_PFAngle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::Evt_Err_PFAngle(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_Err_PFAngle");

	Params::BattleFieldCheckerBase_C_Evt_Err_PFAngle Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_AboutAngle
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_AboutAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_AboutAngle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_Success
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_Success()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_Success");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_TraceBottom
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_TraceBottom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_TraceBottom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_TraceCeiling
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_TraceCeiling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_TraceCeiling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_Failed
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_Failed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_Failed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Evt_TraceAngle
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Evt_TraceAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Evt_TraceAngle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.StartTrace
// (BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::StartTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "StartTrace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABattleFieldCheckerBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.TraceGroundObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Base                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDrawDebugTrace                         DrawDebugType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        Surface                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::TraceGroundObject(const struct FVector& Base, const struct FVector& Direction, float Length, float Radius, EDrawDebugTrace DrawDebugType, bool* Hit, struct FVector* Location, struct FVector* Normal, EPhysicalSurface* Surface, class AActor** HitActor, class UPrimitiveComponent** HitComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "TraceGroundObject");

	Params::BattleFieldCheckerBase_C_TraceGroundObject Parms{};

	Parms.Base = std::move(Base);
	Parms.Direction = std::move(Direction);
	Parms.Length = Length;
	Parms.Radius = Radius;
	Parms.DrawDebugType = DrawDebugType;

	UObject::ProcessEvent(Func, &Parms);

	if (Hit != nullptr)
		*Hit = Parms.Hit;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Normal != nullptr)
		*Normal = std::move(Parms.Normal);

	if (Surface != nullptr)
		*Surface = Parms.Surface;

	if (HitActor != nullptr)
		*HitActor = Parms.HitActor;

	if (HitComponent != nullptr)
		*HitComponent = Parms.HitComponent;
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.HiddenObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::HiddenObject(const class AActor*& Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "HiddenObject");

	Params::BattleFieldCheckerBase_C_HiddenObject Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.AroundSearch
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::AroundSearch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "AroundSearch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.TriNormal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          V0                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          V1                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          V2                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABattleFieldCheckerBase_C::TriNormal(const struct FVector& V0, const struct FVector& V1, const struct FVector& V2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "TriNormal");

	Params::BattleFieldCheckerBase_C_TriNormal Parms{};

	Parms.V0 = std::move(V0);
	Parms.V1 = std::move(V1);
	Parms.V2 = std::move(V2);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.ChipNormal
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  InChip                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::ChipNormal(class USceneComponent* InChip, bool* Hit, struct FVector* Location, struct FVector* Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "ChipNormal");

	Params::BattleFieldCheckerBase_C_ChipNormal Parms{};

	Parms.InChip = InChip;

	UObject::ProcessEvent(Func, &Parms);

	if (Hit != nullptr)
		*Hit = Parms.Hit;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Normal != nullptr)
		*Normal = std::move(Parms.Normal);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.Initialize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.SetAllVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleFieldCheckerBase_C::SetAllVisibility(bool Sw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "SetAllVisibility");

	Params::BattleFieldCheckerBase_C_SetAllVisibility Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.ChipTraceGround
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USceneComponent*>          ChipLocationPoint                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FVector                          UpVector                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::ChipTraceGround(TArray<class USceneComponent*>& ChipLocationPoint, const struct FVector& UpVector, bool* Hit, struct FVector* Location, struct FVector* Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "ChipTraceGround");

	Params::BattleFieldCheckerBase_C_ChipTraceGround Parms{};

	Parms.ChipLocationPoint = std::move(ChipLocationPoint);
	Parms.UpVector = std::move(UpVector);

	UObject::ProcessEvent(Func, &Parms);

	ChipLocationPoint = std::move(Parms.ChipLocationPoint);

	if (Hit != nullptr)
		*Hit = Parms.Hit;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Normal != nullptr)
		*Normal = std::move(Parms.Normal);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.DebugLog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::DebugLog(const class FString& Str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "DebugLog");

	Params::BattleFieldCheckerBase_C_DebugLog Parms{};

	Parms.Str = std::move(Str);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.DisableMeshCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleFieldCheckerBase_C::DisableMeshCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "DisableMeshCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.GetEncountIDStr
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           RetValue                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABattleFieldCheckerBase_C::GetEncountIDStr(int32 InValue, class FString* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "GetEncountIDStr");

	Params::BattleFieldCheckerBase_C_GetEncountIDStr Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleFieldCheckerBase.BattleFieldCheckerBase_C.ApplyEncountPostData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDone                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleFieldCheckerBase_C::ApplyEncountPostData(bool* IsDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleFieldCheckerBase_C", "ApplyEncountPostData");

	Params::BattleFieldCheckerBase_C_ApplyEncountPostData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDone != nullptr)
		*IsDone = Parms.IsDone;
}

}

