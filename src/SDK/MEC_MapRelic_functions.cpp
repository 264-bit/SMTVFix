#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MEC_MapRelic

#include "Basic.hpp"

#include "MEC_MapRelic_classes.hpp"
#include "MEC_MapRelic_parameters.hpp"


namespace SDK
{

// Function MEC_MapRelic.MEC_MapRelic_C.EvtDis_Result__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMEC_MapRelic_C::EvtDis_Result__DelegateSignature(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEC_MapRelic_C", "EvtDis_Result__DelegateSignature");

	Params::MEC_MapRelic_C_EvtDis_Result__DelegateSignature Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEC_MapRelic.MEC_MapRelic_C.ExecuteUbergraph_MEC_MapRelic
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMEC_MapRelic_C::ExecuteUbergraph_MEC_MapRelic(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEC_MapRelic_C", "ExecuteUbergraph_MEC_MapRelic");

	Params::MEC_MapRelic_C_ExecuteUbergraph_MEC_MapRelic Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEC_MapRelic.MEC_MapRelic_C.CallTask
// (BlueprintCallable, BlueprintEvent)

void UMEC_MapRelic_C::CallTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEC_MapRelic_C", "CallTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEC_MapRelic.MEC_MapRelic_C.AfterGetPiece
// (BlueprintCallable, BlueprintEvent)

void UMEC_MapRelic_C::AfterGetPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEC_MapRelic_C", "AfterGetPiece");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEC_MapRelic.MEC_MapRelic_C.LotItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMEC_MapRelic_C::LotItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEC_MapRelic_C", "LotItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEC_MapRelic.MEC_MapRelic_C.CheckHaveLimit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_ItemId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Add                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanHave                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMEC_MapRelic_C::CheckHaveLimit(int32 Param_ItemId, int32 Add, bool* CanHave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEC_MapRelic_C", "CheckHaveLimit");

	Params::MEC_MapRelic_C_CheckHaveLimit Parms{};

	Parms.Param_ItemId = Param_ItemId;
	Parms.Add = Add;

	UObject::ProcessEvent(Func, &Parms);

	if (CanHave != nullptr)
		*CanHave = Parms.CanHave;
}


// Function MEC_MapRelic.MEC_MapRelic_C.CureHpMp
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           NkmIndexList                                           (Parm, OutParm)
// TArray<int32>                           HPCureList                                             (Parm, OutParm)
// TArray<int32>                           MPCureList                                             (Parm, OutParm)

void UMEC_MapRelic_C::CureHpMp(TArray<int32>* NkmIndexList, TArray<int32>* HPCureList, TArray<int32>* MPCureList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEC_MapRelic_C", "CureHpMp");

	Params::MEC_MapRelic_C_CureHpMp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NkmIndexList != nullptr)
		*NkmIndexList = std::move(Parms.NkmIndexList);

	if (HPCureList != nullptr)
		*HPCureList = std::move(Parms.HPCureList);

	if (MPCureList != nullptr)
		*MPCureList = std::move(Parms.MPCureList);
}


// Function MEC_MapRelic.MEC_MapRelic_C.CureMagatsuhi
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PrevMagatsuhi                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AddMagatsuhi                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMEC_MapRelic_C::CureMagatsuhi(int32* PrevMagatsuhi, int32* AddMagatsuhi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEC_MapRelic_C", "CureMagatsuhi");

	Params::MEC_MapRelic_C_CureMagatsuhi Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PrevMagatsuhi != nullptr)
		*PrevMagatsuhi = Parms.PrevMagatsuhi;

	if (AddMagatsuhi != nullptr)
		*AddMagatsuhi = Parms.AddMagatsuhi;
}


// Function MEC_MapRelic.MEC_MapRelic_C.EffectCureHpMp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           NkmIndexList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           HPCureList                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           MPCureList                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UMEC_MapRelic_C::EffectCureHpMp(TArray<int32>& NkmIndexList, TArray<int32>& HPCureList, TArray<int32>& MPCureList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEC_MapRelic_C", "EffectCureHpMp");

	Params::MEC_MapRelic_C_EffectCureHpMp Parms{};

	Parms.NkmIndexList = std::move(NkmIndexList);
	Parms.HPCureList = std::move(HPCureList);
	Parms.MPCureList = std::move(MPCureList);

	UObject::ProcessEvent(Func, &Parms);

	NkmIndexList = std::move(Parms.NkmIndexList);
	HPCureList = std::move(Parms.HPCureList);
	MPCureList = std::move(Parms.MPCureList);
}


// Function MEC_MapRelic.MEC_MapRelic_C.EffectCureMagatsuhi
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PrevMagatsuhi                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AddMagatsuhi                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMEC_MapRelic_C::EffectCureMagatsuhi(int32 PrevMagatsuhi, int32 AddMagatsuhi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEC_MapRelic_C", "EffectCureMagatsuhi");

	Params::MEC_MapRelic_C_EffectCureMagatsuhi Parms{};

	Parms.PrevMagatsuhi = PrevMagatsuhi;
	Parms.AddMagatsuhi = AddMagatsuhi;

	UObject::ProcessEvent(Func, &Parms);
}

}

