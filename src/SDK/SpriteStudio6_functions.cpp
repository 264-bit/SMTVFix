#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpriteStudio6

#include "Basic.hpp"

#include "SpriteStudio6_classes.hpp"
#include "SpriteStudio6_parameters.hpp"


namespace SDK
{

// Function SpriteStudio6.SsStatics.SpawnSsPlayerAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USs6Project*                      SsProject                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AnimPackName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AnimationName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   UUPerPixel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TranslucencySortPriority                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASsPlayerActor*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASsPlayerActor* USsStatics::SpawnSsPlayerAtLocation(class UObject* WorldContextObject, class USs6Project* SsProject, class FName AnimPackName, class FName AnimationName, float UUPerPixel, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, int32 TranslucencySortPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SsStatics", "SpawnSsPlayerAtLocation");

	Params::SsStatics_SpawnSsPlayerAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SsProject = SsProject;
	Parms.AnimPackName = AnimPackName;
	Parms.AnimationName = AnimationName;
	Parms.UUPerPixel = UUPerPixel;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.bAutoDestroy = bAutoDestroy;
	Parms.TranslucencySortPriority = TranslucencySortPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsStatics.SpawnSsPlayerAtLocationByIndex
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USs6Project*                      SsProject                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimPackIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimationIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   UUPerPixel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TranslucencySortPriority                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASsPlayerActor*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASsPlayerActor* USsStatics::SpawnSsPlayerAtLocationByIndex(class UObject* WorldContextObject, class USs6Project* SsProject, int32 AnimPackIndex, int32 AnimationIndex, float UUPerPixel, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, int32 TranslucencySortPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SsStatics", "SpawnSsPlayerAtLocationByIndex");

	Params::SsStatics_SpawnSsPlayerAtLocationByIndex Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SsProject = SsProject;
	Parms.AnimPackIndex = AnimPackIndex;
	Parms.AnimationIndex = AnimationIndex;
	Parms.UUPerPixel = UUPerPixel;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.bAutoDestroy = bAutoDestroy;
	Parms.TranslucencySortPriority = TranslucencySortPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.Ss6Project.GetAnimationNames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InAnimPackName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> USs6Project::GetAnimationNames(class FName InAnimPackName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ss6Project", "GetAnimationNames");

	Params::Ss6Project_GetAnimationNames Parms{};

	Parms.InAnimPackName = InAnimPackName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.Ss6Project.GetAnimPackNames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> USs6Project::GetAnimPackNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ss6Project", "GetAnimPackNames");

	Params::Ss6Project_GetAnimPackNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerActor.OnEndPlay
// (Final, Native, Private)
// Parameters:
// class FName                             AnimPackName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AnimationName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimPackIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimationIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASsPlayerActor::Func_OnEndPlay(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerActor", "OnEndPlay");

	Params::SsPlayerActor_OnEndPlay Parms{};

	Parms.AnimPackName = AnimPackName;
	Parms.AnimationName = AnimationName;
	Parms.AnimPackIndex = AnimPackIndex;
	Parms.AnimationIndex = AnimationIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerActor.GetSsPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USsPlayerComponent*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USsPlayerComponent* ASsPlayerActor::GetSsPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerActor", "GetSsPlayer");

	Params::SsPlayerActor_GetSsPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.AddMaterialReplacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               InBaseMaterial                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::AddMaterialReplacement(class FName PartName, class UMaterialInterface* InBaseMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "AddMaterialReplacement");

	Params::SsPlayerComponent_AddMaterialReplacement Parms{};

	Parms.PartName = PartName;
	Parms.InBaseMaterial = InBaseMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.AddMaterialReplacementByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               InBaseMaterial                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::AddMaterialReplacementByIndex(int32 PartIndex, class UMaterialInterface* InBaseMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "AddMaterialReplacementByIndex");

	Params::SsPlayerComponent_AddMaterialReplacementByIndex Parms{};

	Parms.PartIndex = PartIndex;
	Parms.InBaseMaterial = InBaseMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.AddMaterialReplacementPerBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAlphaBlendType                         AlphaBlendMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EColorBlendType                         ColorBlendMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               InBaseMaterial                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::AddMaterialReplacementPerBlendMode(EAlphaBlendType AlphaBlendMode, EColorBlendType ColorBlendMode, class UMaterialInterface* InBaseMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "AddMaterialReplacementPerBlendMode");

	Params::SsPlayerComponent_AddMaterialReplacementPerBlendMode Parms{};

	Parms.AlphaBlendMode = AlphaBlendMode;
	Parms.ColorBlendMode = ColorBlendMode;
	Parms.InBaseMaterial = InBaseMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.AddTextureReplacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::AddTextureReplacement(class FName PartName, class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "AddTextureReplacement");

	Params::SsPlayerComponent_AddTextureReplacement Parms{};

	Parms.PartName = PartName;
	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.AddTextureReplacementByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::AddTextureReplacementByIndex(int32 PartIndex, class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "AddTextureReplacementByIndex");

	Params::SsPlayerComponent_AddTextureReplacementByIndex Parms{};

	Parms.PartIndex = PartIndex;
	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.GetPartColorLabel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USsPlayerComponent::GetPartColorLabel(class FName PartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetPartColorLabel");

	Params::SsPlayerComponent_GetPartColorLabel Parms{};

	Parms.PartName = PartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.GetPartColorLabelByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USsPlayerComponent::GetPartColorLabelByIndex(int32 PartIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetPartColorLabelByIndex");

	Params::SsPlayerComponent_GetPartColorLabelByIndex Parms{};

	Parms.PartIndex = PartIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.GetRenderTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* USsPlayerComponent::GetRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetRenderTarget");

	Params::SsPlayerComponent_GetRenderTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.Pause
// (Final, Native, Public, BlueprintCallable)

void USsPlayerComponent::Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "Pause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.Play
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             AnimPackName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AnimationName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StartFrame                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LoopCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRoundTrip                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerComponent::Play(class FName AnimPackName, class FName AnimationName, int32 StartFrame, float PlayRate, int32 LoopCount, bool bRoundTrip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "Play");

	Params::SsPlayerComponent_Play Parms{};

	Parms.AnimPackName = AnimPackName;
	Parms.AnimationName = AnimationName;
	Parms.StartFrame = StartFrame;
	Parms.PlayRate = PlayRate;
	Parms.LoopCount = LoopCount;
	Parms.bRoundTrip = bRoundTrip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.PlayByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AnimPackIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimationIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StartFrame                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LoopCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRoundTrip                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerComponent::PlayByIndex(int32 AnimPackIndex, int32 AnimationIndex, int32 StartFrame, float PlayRate, int32 LoopCount, bool bRoundTrip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "PlayByIndex");

	Params::SsPlayerComponent_PlayByIndex Parms{};

	Parms.AnimPackIndex = AnimPackIndex;
	Parms.AnimationIndex = AnimationIndex;
	Parms.StartFrame = StartFrame;
	Parms.PlayRate = PlayRate;
	Parms.LoopCount = LoopCount;
	Parms.bRoundTrip = bRoundTrip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.RemoveMaterialReplacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::RemoveMaterialReplacement(class FName PartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "RemoveMaterialReplacement");

	Params::SsPlayerComponent_RemoveMaterialReplacement Parms{};

	Parms.PartName = PartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.RemoveMaterialReplacementAll
// (Final, Native, Public, BlueprintCallable)

void USsPlayerComponent::RemoveMaterialReplacementAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "RemoveMaterialReplacementAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.RemoveMaterialReplacementAllPerBlendMode
// (Final, Native, Public, BlueprintCallable)

void USsPlayerComponent::RemoveMaterialReplacementAllPerBlendMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "RemoveMaterialReplacementAllPerBlendMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.RemoveMaterialReplacementByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::RemoveMaterialReplacementByIndex(int32 PartIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "RemoveMaterialReplacementByIndex");

	Params::SsPlayerComponent_RemoveMaterialReplacementByIndex Parms{};

	Parms.PartIndex = PartIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.RemoveMaterialReplacementPerBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAlphaBlendType                         AlphaBlendMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EColorBlendType                         ColorBlendMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::RemoveMaterialReplacementPerBlendMode(EAlphaBlendType AlphaBlendMode, EColorBlendType ColorBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "RemoveMaterialReplacementPerBlendMode");

	Params::SsPlayerComponent_RemoveMaterialReplacementPerBlendMode Parms{};

	Parms.AlphaBlendMode = AlphaBlendMode;
	Parms.ColorBlendMode = ColorBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.RemoveTextureReplacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::RemoveTextureReplacement(class FName PartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "RemoveTextureReplacement");

	Params::SsPlayerComponent_RemoveTextureReplacement Parms{};

	Parms.PartName = PartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.RemoveTextureReplacementAll
// (Final, Native, Public, BlueprintCallable)

void USsPlayerComponent::RemoveTextureReplacementAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "RemoveTextureReplacementAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.RemoveTextureReplacementByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::RemoveTextureReplacementByIndex(int32 PartIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "RemoveTextureReplacementByIndex");

	Params::SsPlayerComponent_RemoveTextureReplacementByIndex Parms{};

	Parms.PartIndex = PartIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.Resume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerComponent::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "Resume");

	Params::SsPlayerComponent_Resume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.SetFlipH
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InFlipH                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::SetFlipH(bool InFlipH)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "SetFlipH");

	Params::SsPlayerComponent_SetFlipH Parms{};

	Parms.InFlipH = InFlipH;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.SetFlipV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InFlipV                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::SetFlipV(bool InFlipV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "SetFlipV");

	Params::SsPlayerComponent_SetFlipV Parms{};

	Parms.InFlipV = InFlipV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.SetLoopCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InLoopCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::SetLoopCount(int32 InLoopCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "SetLoopCount");

	Params::SsPlayerComponent_SetLoopCount Parms{};

	Parms.InLoopCount = InLoopCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.SetPlayFrame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Frame                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::SetPlayFrame(float Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "SetPlayFrame");

	Params::SsPlayerComponent_SetPlayFrame Parms{};

	Parms.Frame = Frame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.SetPlayRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::SetPlayRate(float InRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "SetPlayRate");

	Params::SsPlayerComponent_SetPlayRate Parms{};

	Parms.InRate = InRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.SetRoundTrip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInRoundTrip                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::SetRoundTrip(bool bInRoundTrip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "SetRoundTrip");

	Params::SsPlayerComponent_SetRoundTrip Parms{};

	Parms.bInRoundTrip = bInRoundTrip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.UpdatePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::UpdatePlayer(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "UpdatePlayer");

	Params::SsPlayerComponent_UpdatePlayer Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerComponent.GetFlipH
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerComponent::GetFlipH() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetFlipH");

	Params::SsPlayerComponent_GetFlipH Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.GetFlipV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerComponent::GetFlipV() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetFlipV");

	Params::SsPlayerComponent_GetFlipV Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.GetLoopCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USsPlayerComponent::GetLoopCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetLoopCount");

	Params::SsPlayerComponent_GetLoopCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.GetNumAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             AnimPackName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USsPlayerComponent::GetNumAnimations(class FName AnimPackName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetNumAnimations");

	Params::SsPlayerComponent_GetNumAnimations Parms{};

	Parms.AnimPackName = AnimPackName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.GetNumAnimationsByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   AnimPackIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USsPlayerComponent::GetNumAnimationsByIndex(int32 AnimPackIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetNumAnimationsByIndex");

	Params::SsPlayerComponent_GetNumAnimationsByIndex Parms{};

	Parms.AnimPackIndex = AnimPackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.GetNumAnimPacks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USsPlayerComponent::GetNumAnimPacks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetNumAnimPacks");

	Params::SsPlayerComponent_GetNumAnimPacks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.GetPartAttachTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerComponent::GetPartAttachTransform(int32 PartIndex, struct FTransform* OutTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetPartAttachTransform");

	Params::SsPlayerComponent_GetPartAttachTransform Parms{};

	Parms.PartIndex = PartIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.GetPlayFrame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USsPlayerComponent::GetPlayFrame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetPlayFrame");

	Params::SsPlayerComponent_GetPlayFrame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.GetPlayingAnimationIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   OutAnimPackIndex                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutAnimationIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::GetPlayingAnimationIndex(int32* OutAnimPackIndex, int32* OutAnimationIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetPlayingAnimationIndex");

	Params::SsPlayerComponent_GetPlayingAnimationIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAnimPackIndex != nullptr)
		*OutAnimPackIndex = Parms.OutAnimPackIndex;

	if (OutAnimationIndex != nullptr)
		*OutAnimationIndex = Parms.OutAnimationIndex;
}


// Function SpriteStudio6.SsPlayerComponent.GetPlayingAnimationName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutAnimPackName                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutAnimationName                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerComponent::GetPlayingAnimationName(class FName* OutAnimPackName, class FName* OutAnimationName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetPlayingAnimationName");

	Params::SsPlayerComponent_GetPlayingAnimationName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAnimPackName != nullptr)
		*OutAnimPackName = Parms.OutAnimPackName;

	if (OutAnimationName != nullptr)
		*OutAnimationName = Parms.OutAnimationName;
}


// Function SpriteStudio6.SsPlayerComponent.GetPlayRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USsPlayerComponent::GetPlayRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "GetPlayRate");

	Params::SsPlayerComponent_GetPlayRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerComponent::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "IsPlaying");

	Params::SsPlayerComponent_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerComponent.IsRoundTrip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerComponent::IsRoundTrip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerComponent", "IsRoundTrip");

	Params::SsPlayerComponent_IsRoundTrip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerSlot.SetAttachPart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InNewPartName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerSlot::SetAttachPart(class FName InNewPartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerSlot", "SetAttachPart");

	Params::SsPlayerSlot_SetAttachPart Parms{};

	Parms.InNewPartName = InNewPartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.AddMaterialReplacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               InBaseMaterial                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::AddMaterialReplacement(class FName PartName, class UMaterialInterface* InBaseMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "AddMaterialReplacement");

	Params::SsPlayerWidget_AddMaterialReplacement Parms{};

	Parms.PartName = PartName;
	Parms.InBaseMaterial = InBaseMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.AddMaterialReplacementByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               InBaseMaterial                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::AddMaterialReplacementByIndex(int32 PartIndex, class UMaterialInterface* InBaseMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "AddMaterialReplacementByIndex");

	Params::SsPlayerWidget_AddMaterialReplacementByIndex Parms{};

	Parms.PartIndex = PartIndex;
	Parms.InBaseMaterial = InBaseMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.AddMaterialReplacementPerBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAlphaBlendType                         AlphaBlendMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EColorBlendType                         ColorBlendMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               InBaseMaterial                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::AddMaterialReplacementPerBlendMode(EAlphaBlendType AlphaBlendMode, EColorBlendType ColorBlendMode, class UMaterialInterface* InBaseMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "AddMaterialReplacementPerBlendMode");

	Params::SsPlayerWidget_AddMaterialReplacementPerBlendMode Parms{};

	Parms.AlphaBlendMode = AlphaBlendMode;
	Parms.ColorBlendMode = ColorBlendMode;
	Parms.InBaseMaterial = InBaseMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.AddTextureReplacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::AddTextureReplacement(class FName PartName, class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "AddTextureReplacement");

	Params::SsPlayerWidget_AddTextureReplacement Parms{};

	Parms.PartName = PartName;
	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.AddTextureReplacementByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::AddTextureReplacementByIndex(int32 PartIndex, class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "AddTextureReplacementByIndex");

	Params::SsPlayerWidget_AddTextureReplacementByIndex Parms{};

	Parms.PartIndex = PartIndex;
	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.GetPartColorLabel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USsPlayerWidget::GetPartColorLabel(class FName PartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetPartColorLabel");

	Params::SsPlayerWidget_GetPartColorLabel Parms{};

	Parms.PartName = PartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetPartColorLabelByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USsPlayerWidget::GetPartColorLabelByIndex(int32 PartIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetPartColorLabelByIndex");

	Params::SsPlayerWidget_GetPartColorLabelByIndex Parms{};

	Parms.PartIndex = PartIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetPartIndexFromName
// (Final, Native, Public)
// Parameters:
// class FName                             InPartName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USsPlayerWidget::GetPartIndexFromName(class FName InPartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetPartIndexFromName");

	Params::SsPlayerWidget_GetPartIndexFromName Parms{};

	Parms.InPartName = InPartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetRenderTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* USsPlayerWidget::GetRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetRenderTarget");

	Params::SsPlayerWidget_GetRenderTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.Pause
// (Final, Native, Public, BlueprintCallable)

void USsPlayerWidget::Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "Pause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.Play
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             AnimPackName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AnimationName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StartFrame                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LoopCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRoundTrip                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerWidget::Play(class FName AnimPackName, class FName AnimationName, int32 StartFrame, float PlayRate, int32 LoopCount, bool bRoundTrip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "Play");

	Params::SsPlayerWidget_Play Parms{};

	Parms.AnimPackName = AnimPackName;
	Parms.AnimationName = AnimationName;
	Parms.StartFrame = StartFrame;
	Parms.PlayRate = PlayRate;
	Parms.LoopCount = LoopCount;
	Parms.bRoundTrip = bRoundTrip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.PlayByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AnimPackIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AnimationIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StartFrame                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LoopCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRoundTrip                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerWidget::PlayByIndex(int32 AnimPackIndex, int32 AnimationIndex, int32 StartFrame, float PlayRate, int32 LoopCount, bool bRoundTrip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "PlayByIndex");

	Params::SsPlayerWidget_PlayByIndex Parms{};

	Parms.AnimPackIndex = AnimPackIndex;
	Parms.AnimationIndex = AnimationIndex;
	Parms.StartFrame = StartFrame;
	Parms.PlayRate = PlayRate;
	Parms.LoopCount = LoopCount;
	Parms.bRoundTrip = bRoundTrip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.RemoveMaterialReplacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::RemoveMaterialReplacement(class FName PartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "RemoveMaterialReplacement");

	Params::SsPlayerWidget_RemoveMaterialReplacement Parms{};

	Parms.PartName = PartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.RemoveMaterialReplacementAll
// (Final, Native, Public, BlueprintCallable)

void USsPlayerWidget::RemoveMaterialReplacementAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "RemoveMaterialReplacementAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.RemoveMaterialReplacementAllPerBlendMode
// (Final, Native, Public, BlueprintCallable)

void USsPlayerWidget::RemoveMaterialReplacementAllPerBlendMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "RemoveMaterialReplacementAllPerBlendMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.RemoveMaterialReplacementByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::RemoveMaterialReplacementByIndex(int32 PartIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "RemoveMaterialReplacementByIndex");

	Params::SsPlayerWidget_RemoveMaterialReplacementByIndex Parms{};

	Parms.PartIndex = PartIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.RemoveMaterialReplacementPerBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAlphaBlendType                         AlphaBlendMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EColorBlendType                         ColorBlendMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::RemoveMaterialReplacementPerBlendMode(EAlphaBlendType AlphaBlendMode, EColorBlendType ColorBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "RemoveMaterialReplacementPerBlendMode");

	Params::SsPlayerWidget_RemoveMaterialReplacementPerBlendMode Parms{};

	Parms.AlphaBlendMode = AlphaBlendMode;
	Parms.ColorBlendMode = ColorBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.RemoveTextureReplacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::RemoveTextureReplacement(class FName PartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "RemoveTextureReplacement");

	Params::SsPlayerWidget_RemoveTextureReplacement Parms{};

	Parms.PartName = PartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.RemoveTextureReplacementAll
// (Final, Native, Public, BlueprintCallable)

void USsPlayerWidget::RemoveTextureReplacementAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "RemoveTextureReplacementAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.RemoveTextureReplacementByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::RemoveTextureReplacementByIndex(int32 PartIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "RemoveTextureReplacementByIndex");

	Params::SsPlayerWidget_RemoveTextureReplacementByIndex Parms{};

	Parms.PartIndex = PartIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.Resume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerWidget::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "Resume");

	Params::SsPlayerWidget_Resume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.SetCanSlateTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInCanTick                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::SetCanSlateTick(bool bInCanTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "SetCanSlateTick");

	Params::SsPlayerWidget_SetCanSlateTick Parms{};

	Parms.bInCanTick = bInCanTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.SetFlipH
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InFlipH                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::SetFlipH(bool InFlipH)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "SetFlipH");

	Params::SsPlayerWidget_SetFlipH Parms{};

	Parms.InFlipH = InFlipH;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.SetFlipV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InFlipV                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::SetFlipV(bool InFlipV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "SetFlipV");

	Params::SsPlayerWidget_SetFlipV Parms{};

	Parms.InFlipV = InFlipV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.SetInstancePartPlayFrame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Frame                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::SetInstancePartPlayFrame(class FName PartName, float Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "SetInstancePartPlayFrame");

	Params::SsPlayerWidget_SetInstancePartPlayFrame Parms{};

	Parms.PartName = PartName;
	Parms.Frame = Frame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.SetLoopCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InLoopCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::SetLoopCount(int32 InLoopCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "SetLoopCount");

	Params::SsPlayerWidget_SetLoopCount Parms{};

	Parms.InLoopCount = InLoopCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.SetPlayFrame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Frame                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::SetPlayFrame(float Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "SetPlayFrame");

	Params::SsPlayerWidget_SetPlayFrame Parms{};

	Parms.Frame = Frame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.SetPlayRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::SetPlayRate(float InRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "SetPlayRate");

	Params::SsPlayerWidget_SetPlayRate Parms{};

	Parms.InRate = InRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.SetRoundTrip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInRoundTrip                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::SetRoundTrip(bool bInRoundTrip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "SetRoundTrip");

	Params::SsPlayerWidget_SetRoundTrip Parms{};

	Parms.bInRoundTrip = bInRoundTrip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.UpdatePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::UpdatePlayer(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "UpdatePlayer");

	Params::SsPlayerWidget_UpdatePlayer Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpriteStudio6.SsPlayerWidget.GetCanSlateTick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerWidget::GetCanSlateTick() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetCanSlateTick");

	Params::SsPlayerWidget_GetCanSlateTick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetFlipH
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerWidget::GetFlipH() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetFlipH");

	Params::SsPlayerWidget_GetFlipH Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetFlipV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerWidget::GetFlipV() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetFlipV");

	Params::SsPlayerWidget_GetFlipV Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetInstancePartPlayFrame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USsPlayerWidget::GetInstancePartPlayFrame(class FName PartName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetInstancePartPlayFrame");

	Params::SsPlayerWidget_GetInstancePartPlayFrame Parms{};

	Parms.PartName = PartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetLoopCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USsPlayerWidget::GetLoopCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetLoopCount");

	Params::SsPlayerWidget_GetLoopCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetNumAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             AnimPackName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USsPlayerWidget::GetNumAnimations(class FName AnimPackName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetNumAnimations");

	Params::SsPlayerWidget_GetNumAnimations Parms{};

	Parms.AnimPackName = AnimPackName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetNumAnimationsByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   AnimPackIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USsPlayerWidget::GetNumAnimationsByIndex(int32 AnimPackIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetNumAnimationsByIndex");

	Params::SsPlayerWidget_GetNumAnimationsByIndex Parms{};

	Parms.AnimPackIndex = AnimPackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetNumAnimPacks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USsPlayerWidget::GetNumAnimPacks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetNumAnimPacks");

	Params::SsPlayerWidget_GetNumAnimPacks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetPartTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             PartName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        OutPosition                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutAngle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        OutScale                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerWidget::GetPartTransform(class FName PartName, struct FVector2D* OutPosition, float* OutAngle, struct FVector2D* OutScale) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetPartTransform");

	Params::SsPlayerWidget_GetPartTransform Parms{};

	Parms.PartName = PartName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPosition != nullptr)
		*OutPosition = std::move(Parms.OutPosition);

	if (OutAngle != nullptr)
		*OutAngle = Parms.OutAngle;

	if (OutScale != nullptr)
		*OutScale = std::move(Parms.OutScale);

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetPartTransformByIndex
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PartIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        OutPosition                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutAngle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        OutScale                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerWidget::GetPartTransformByIndex(int32 PartIndex, struct FVector2D* OutPosition, float* OutAngle, struct FVector2D* OutScale) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetPartTransformByIndex");

	Params::SsPlayerWidget_GetPartTransformByIndex Parms{};

	Parms.PartIndex = PartIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPosition != nullptr)
		*OutPosition = std::move(Parms.OutPosition);

	if (OutAngle != nullptr)
		*OutAngle = Parms.OutAngle;

	if (OutScale != nullptr)
		*OutScale = std::move(Parms.OutScale);

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetPlayFrame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USsPlayerWidget::GetPlayFrame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetPlayFrame");

	Params::SsPlayerWidget_GetPlayFrame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.GetPlayingAnimationIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   OutAnimPackIndex                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutAnimationIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::GetPlayingAnimationIndex(int32* OutAnimPackIndex, int32* OutAnimationIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetPlayingAnimationIndex");

	Params::SsPlayerWidget_GetPlayingAnimationIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAnimPackIndex != nullptr)
		*OutAnimPackIndex = Parms.OutAnimPackIndex;

	if (OutAnimationIndex != nullptr)
		*OutAnimationIndex = Parms.OutAnimationIndex;
}


// Function SpriteStudio6.SsPlayerWidget.GetPlayingAnimationName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutAnimPackName                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutAnimationName                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USsPlayerWidget::GetPlayingAnimationName(class FName* OutAnimPackName, class FName* OutAnimationName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetPlayingAnimationName");

	Params::SsPlayerWidget_GetPlayingAnimationName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAnimPackName != nullptr)
		*OutAnimPackName = Parms.OutAnimPackName;

	if (OutAnimationName != nullptr)
		*OutAnimationName = Parms.OutAnimationName;
}


// Function SpriteStudio6.SsPlayerWidget.GetPlayRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USsPlayerWidget::GetPlayRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "GetPlayRate");

	Params::SsPlayerWidget_GetPlayRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerWidget::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "IsPlaying");

	Params::SsPlayerWidget_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpriteStudio6.SsPlayerWidget.IsRoundTrip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USsPlayerWidget::IsRoundTrip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SsPlayerWidget", "IsRoundTrip");

	Params::SsPlayerWidget_IsRoundTrip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

