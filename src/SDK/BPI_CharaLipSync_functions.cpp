#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CharaLipSync

#include "Basic.hpp"

#include "BPI_CharaLipSync_classes.hpp"
#include "BPI_CharaLipSync_parameters.hpp"


namespace SDK
{

// Function BPI_CharaLipSync.BPI_CharaLipSync_C.PlayLipSync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCharaLipSync*                    Param_PlayLipSync                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharaLipSync_C::PlayLipSync(class UCharaLipSync* Param_PlayLipSync, bool IsLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaLipSync_C", "PlayLipSync");

	Params::BPI_CharaLipSync_C_PlayLipSync Parms{};

	Parms.Param_PlayLipSync = Param_PlayLipSync;
	Parms.IsLoop = IsLoop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharaLipSync.BPI_CharaLipSync_C.StopLipSync
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharaLipSync_C::StopLipSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaLipSync_C", "StopLipSync");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharaLipSync.BPI_CharaLipSync_C.PlayDefaultBlink
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharaLipSync_C::PlayDefaultBlink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaLipSync_C", "PlayDefaultBlink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharaLipSync.BPI_CharaLipSync_C.StopDefaultBlink
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharaLipSync_C::StopDefaultBlink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaLipSync_C", "StopDefaultBlink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharaLipSync.BPI_CharaLipSync_C.PlaySpeakingMotion
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharaLipSync_C::PlaySpeakingMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaLipSync_C", "PlaySpeakingMotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharaLipSync.BPI_CharaLipSync_C.StopSpeakingMotion
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CharaLipSync_C::StopSpeakingMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaLipSync_C", "StopSpeakingMotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_CharaLipSync.BPI_CharaLipSync_C.BI_SetNPCCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharaLipSync_C::BI_SetNPCCollision(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaLipSync_C", "BI_SetNPCCollision");

	Params::BPI_CharaLipSync_C_BI_SetNPCCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_CharaLipSync.BPI_CharaLipSync_C.BI_SetHeadIKSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharaLipSync_C::BI_SetHeadIKSpeed(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaLipSync_C", "BI_SetHeadIKSpeed");

	Params::BPI_CharaLipSync_C_BI_SetHeadIKSpeed Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharaLipSync.BPI_CharaLipSync_C.BI_SetLipClearDelay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharaLipSync_C::BI_SetLipClearDelay(float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaLipSync_C", "BI_SetLipClearDelay");

	Params::BPI_CharaLipSync_C_BI_SetLipClearDelay Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}

}

