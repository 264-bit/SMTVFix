#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerManager

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "E_PLAYER_MANAGER_TYPE_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_PlayerManager.BPI_PlayerManager_C
// 0x0000 (0x0028 - 0x0028)
class IBPI_PlayerManager_C final : public IInterface
{
public:
	void BPI_SetGamePlayer(const TArray<class APawn*>& In);
	void BPI_GetGamePlayer(TArray<class APawn*>* List);
	void BPI_SetDeactiveLocation(E_PLAYER_MANAGER_TYPE PlayerType, const struct FTransform& Location);
	void BPI_GetDeactiveLocation(E_PLAYER_MANAGER_TYPE PlayerType, struct FTransform* Location);
	void BPI_SetActive(E_PLAYER_MANAGER_TYPE PlayerType, bool Active);
	void BPI_GetActive(E_PLAYER_MANAGER_TYPE PlayerType, bool* IsActive);
	void BPI_GetContlrolActivePawn(class APlayerBase_C** Pawn, E_PLAYER_MANAGER_TYPE* Type);
	void BPI_SetContlrolActivePawn(class APlayerBase_C* Pawn, E_PLAYER_MANAGER_TYPE Type);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_PlayerManager_C">();
	}
	static class IBPI_PlayerManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_PlayerManager_C>();
	}
};
static_assert(alignof(IBPI_PlayerManager_C) == 0x000008, "Wrong alignment on IBPI_PlayerManager_C");
static_assert(sizeof(IBPI_PlayerManager_C) == 0x000028, "Wrong size on IBPI_PlayerManager_C");

}

