#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DialogCtrl

#include "Basic.hpp"

#include "BP_DialogCtrl_classes.hpp"
#include "BP_DialogCtrl_parameters.hpp"


namespace SDK
{

// Function BP_DialogCtrl.BP_DialogCtrl_C.ExecuteUbergraph_BP_DialogCtrl
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::ExecuteUbergraph_BP_DialogCtrl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ExecuteUbergraph_BP_DialogCtrl");

	Params::BP_DialogCtrl_C_ExecuteUbergraph_BP_DialogCtrl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ReceiveEndPlay");

	Params::BP_DialogCtrl_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ReceiveTick");

	Params::BP_DialogCtrl_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DialogCtrl_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IDialogRunningIconOff
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InExecutionFlag                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::IDialogRunningIconOff(bool InExecutionFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IDialogRunningIconOff");

	Params::BP_DialogCtrl_C_IDialogRunningIconOff Parms{};

	Parms.InExecutionFlag = InExecutionFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IDialogRunningIconOn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InExecutionFlag                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::IDialogRunningIconOn(bool InExecutionFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IDialogRunningIconOn");

	Params::BP_DialogCtrl_C_IDialogRunningIconOn Parms{};

	Parms.InExecutionFlag = InExecutionFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IExecutionCloseDialog
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::IExecutionCloseDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IExecutionCloseDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IExecutionOpenDialog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InUseRunningIcon                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::IExecutionOpenDialog(bool InUseRunningIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IExecutionOpenDialog");

	Params::BP_DialogCtrl_C_IExecutionOpenDialog Parms{};

	Parms.InUseRunningIcon = InUseRunningIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.ICloseDialog
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::ICloseDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ICloseDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IDialogOn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_WIDGET_PRIO                           InPrio                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::IDialogOn(E_WIDGET_PRIO InPrio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IDialogOn");

	Params::BP_DialogCtrl_C_IDialogOn Parms{};

	Parms.InPrio = InPrio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IOpenDialog
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::IOpenDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IOpenDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.ISetDialogTextFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InExecution                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InBuild                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::ISetDialogTextFlag(bool InExecution, bool InBuild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ISetDialogTextFlag");

	Params::BP_DialogCtrl_C_ISetDialogTextFlag Parms{};

	Parms.InExecution = InExecution;
	Parms.InBuild = InBuild;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.ISetDialogText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              InScriptMessageAsset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InLabel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InBuildText                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::ISetDialogText(class UScriptMessageAsset* InScriptMessageAsset, class FName InLabel, bool InBuildText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ISetDialogText");

	Params::BP_DialogCtrl_C_ISetDialogText Parms{};

	Parms.InScriptMessageAsset = InScriptMessageAsset;
	Parms.InLabel = InLabel;
	Parms.InBuildText = InBuildText;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.OnAnyItemSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::OnAnyItemSelected(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "OnAnyItemSelected");

	Params::BP_DialogCtrl_C_OnAnyItemSelected Parms{};

	Parms.ItemIndex = ItemIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.OnAnyItemClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::OnAnyItemClicked(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "OnAnyItemClicked");

	Params::BP_DialogCtrl_C_OnAnyItemClicked Parms{};

	Parms.ItemIndex = ItemIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.BeginPlay_DialogSelect
// (BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::BeginPlay_DialogSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "BeginPlay_DialogSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IDialogSelectTextOff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::IDialogSelectTextOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IDialogSelectTextOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IMoveDialogSelectCursor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InParam                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::IMoveDialogSelectCursor(int32 InParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IMoveDialogSelectCursor");

	Params::BP_DialogCtrl_C_IMoveDialogSelectCursor Parms{};

	Parms.InParam = InParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.ISetDialogSelectTextByIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InMenuNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InInitCursorPosition                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UScriptMessageAsset*              InScriptMessageAsset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           InSelectItemIndex                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_DialogCtrl_C::ISetDialogSelectTextByIndex(int32 InMenuNumber, int32 InInitCursorPosition, class UScriptMessageAsset* InScriptMessageAsset, const TArray<int32>& InSelectItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ISetDialogSelectTextByIndex");

	Params::BP_DialogCtrl_C_ISetDialogSelectTextByIndex Parms{};

	Parms.InMenuNumber = InMenuNumber;
	Parms.InInitCursorPosition = InInitCursorPosition;
	Parms.InScriptMessageAsset = InScriptMessageAsset;
	Parms.InSelectItemIndex = std::move(InSelectItemIndex);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.ISetDialogSelectText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InMenuNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InInitCursorPosition                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UScriptMessageAsset*              InScriptMessageAsset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     InSelectItemName                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_DialogCtrl_C::ISetDialogSelectText(int32 InMenuNumber, int32 InInitCursorPosition, class UScriptMessageAsset* InScriptMessageAsset, const TArray<class FName>& InSelectItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ISetDialogSelectText");

	Params::BP_DialogCtrl_C_ISetDialogSelectText Parms{};

	Parms.InMenuNumber = InMenuNumber;
	Parms.InInitCursorPosition = InInitCursorPosition;
	Parms.InScriptMessageAsset = InScriptMessageAsset;
	Parms.InSelectItemName = std::move(InSelectItemName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IDialogSetProgramValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::IDialogSetProgramValue(int32 InIndex, const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IDialogSetProgramValue");

	Params::BP_DialogCtrl_C_IDialogSetProgramValue Parms{};

	Parms.InIndex = InIndex;
	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IDialogSetBuildText
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::IDialogSetBuildText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IDialogSetBuildText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IDialogSetValueParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValueParam                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::IDialogSetValueParam(int32 InIndex, int32 InValueParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IDialogSetValueParam");

	Params::BP_DialogCtrl_C_IDialogSetValueParam Parms{};

	Parms.InIndex = InIndex;
	Parms.InValueParam = InValueParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IClearDialogText
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::IClearDialogText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IClearDialogText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.ChangeGstatusParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_DIALOGCTRL_GSTATUS                    InGStatus                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InMain                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::ChangeGstatusParam(E_DIALOGCTRL_GSTATUS InGStatus, bool InMain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ChangeGstatusParam");

	Params::BP_DialogCtrl_C_ChangeGstatusParam Parms{};

	Parms.InGStatus = InGStatus;
	Parms.InMain = InMain;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.Gstatus_Init
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::Gstatus_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "Gstatus_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.Gstatus_WindowOpen
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::Gstatus_WindowOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "Gstatus_WindowOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.Gstatus_WaitWindowOpen
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::Gstatus_WaitWindowOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "Gstatus_WaitWindowOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.Gstatus_WaitWindowClose
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::Gstatus_WaitWindowClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "Gstatus_WaitWindowClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.ClearAllScriptMessageAsset
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::ClearAllScriptMessageAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "ClearAllScriptMessageAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IsOpenDialog
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutOpened                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::IsOpenDialog(bool* OutOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IsOpenDialog");

	Params::BP_DialogCtrl_C_IsOpenDialog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutOpened != nullptr)
		*OutOpened = Parms.OutOpened;
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.Gstatus_SetText
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::Gstatus_SetText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "Gstatus_SetText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.Gstatus_WaitText
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::Gstatus_WaitText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "Gstatus_WaitText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.CalcSelectMenuWheel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutWheel                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::CalcSelectMenuWheel(bool* OutWheel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "CalcSelectMenuWheel");

	Params::BP_DialogCtrl_C_CalcSelectMenuWheel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutWheel != nullptr)
		*OutWheel = Parms.OutWheel;
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.CalcClickedMenu
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::CalcClickedMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "CalcClickedMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.StartIconAnimation
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::StartIconAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "StartIconAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.StopIconAnimation
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::StopIconAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "StopIconAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IconAnimationProc
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::IconAnimationProc(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IconAnimationProc");

	Params::BP_DialogCtrl_C_IconAnimationProc Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.InitializeMouse
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_DialogCtrl_C::InitializeMouse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "InitializeMouse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IIsOpenedDialogWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::IIsOpenedDialogWindow(bool* OutFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IIsOpenedDialogWindow");

	Params::BP_DialogCtrl_C_IIsOpenedDialogWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFinished != nullptr)
		*OutFinished = Parms.OutFinished;
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IIsSetDialogText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::IIsSetDialogText(bool* OutFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IIsSetDialogText");

	Params::BP_DialogCtrl_C_IIsSetDialogText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFinished != nullptr)
		*OutFinished = Parms.OutFinished;
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IIsClosedDialogWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DialogCtrl_C::IIsClosedDialogWindow(bool* OutFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IIsClosedDialogWindow");

	Params::BP_DialogCtrl_C_IIsClosedDialogWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFinished != nullptr)
		*OutFinished = Parms.OutFinished;
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IGetDialogSelectedCursorPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OutIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::IGetDialogSelectedCursorPosition(int32* OutIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IGetDialogSelectedCursorPosition");

	Params::BP_DialogCtrl_C_IGetDialogSelectedCursorPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutIndex != nullptr)
		*OutIndex = Parms.OutIndex;
}


// Function BP_DialogCtrl.BP_DialogCtrl_C.IWasConfirmedByMouse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bConfirmed                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ItemIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DialogCtrl_C::IWasConfirmedByMouse(bool bReset, bool* bConfirmed, int32* ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DialogCtrl_C", "IWasConfirmedByMouse");

	Params::BP_DialogCtrl_C_IWasConfirmedByMouse Parms{};

	Parms.bReset = bReset;

	UObject::ProcessEvent(Func, &Parms);

	if (bConfirmed != nullptr)
		*bConfirmed = Parms.bConfirmed;

	if (ItemIndex != nullptr)
		*ItemIndex = Parms.ItemIndex;
}

}

