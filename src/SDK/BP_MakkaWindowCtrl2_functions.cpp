#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MakkaWindowCtrl2

#include "Basic.hpp"

#include "BP_MakkaWindowCtrl2_classes.hpp"
#include "BP_MakkaWindowCtrl2_parameters.hpp"


namespace SDK
{

// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.ExecuteUbergraph_BP_MakkaWindowCtrl2
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakkaWindowCtrl2_C::ExecuteUbergraph_BP_MakkaWindowCtrl2(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "ExecuteUbergraph_BP_MakkaWindowCtrl2");

	Params::BP_MakkaWindowCtrl2_C_ExecuteUbergraph_BP_MakkaWindowCtrl2 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.AddToScreenWidget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MakkaWindowCtrl2_C::AddToScreenWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "AddToScreenWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakkaWindowCtrl2_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "ReceiveTick");

	Params::BP_MakkaWindowCtrl2_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakkaWindowCtrl2_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "ReceiveEndPlay");

	Params::BP_MakkaWindowCtrl2_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MakkaWindowCtrl2_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_GetAnimState_Cost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MakkaWindowAnimState                  AnimState                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakkaWindowCtrl2_C::BPI_GetAnimState_Cost(E_MakkaWindowAnimState* AnimState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_GetAnimState_Cost");

	Params::BP_MakkaWindowCtrl2_C_BPI_GetAnimState_Cost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimState != nullptr)
		*AnimState = Parms.AnimState;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_GetAnimState_Total
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MakkaWindowAnimState                  AnimState                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakkaWindowCtrl2_C::BPI_GetAnimState_Total(E_MakkaWindowAnimState* AnimState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_GetAnimState_Total");

	Params::BP_MakkaWindowCtrl2_C_BPI_GetAnimState_Total Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimState != nullptr)
		*AnimState = Parms.AnimState;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_GetAnimState_Money
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MakkaWindowAnimState                  AnimState                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakkaWindowCtrl2_C::BPI_GetAnimState_Money(E_MakkaWindowAnimState* AnimState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_GetAnimState_Money");

	Params::BP_MakkaWindowCtrl2_C_BPI_GetAnimState_Money Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimState != nullptr)
		*AnimState = Parms.AnimState;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_IsPlayingNumberAnim_Cost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_IsPlayingNumberAnim_Cost(bool* IsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_IsPlayingNumberAnim_Cost");

	Params::BP_MakkaWindowCtrl2_C_BPI_IsPlayingNumberAnim_Cost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_IsPlayingNumberAnim_Total
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_IsPlayingNumberAnim_Total(bool* IsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_IsPlayingNumberAnim_Total");

	Params::BP_MakkaWindowCtrl2_C_BPI_IsPlayingNumberAnim_Total Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_IsPlayingNumberAnim_Money
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_IsPlayingNumberAnim_Money(bool* IsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_IsPlayingNumberAnim_Money");

	Params::BP_MakkaWindowCtrl2_C_BPI_IsPlayingNumberAnim_Money Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_OpenMoneyWindow2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSkipAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSetPartyMakka                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    WithOpenTotalWindow                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_OpenMoneyWindow2(bool IsSkipAnimation, bool IsSetPartyMakka, bool WithOpenTotalWindow, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_OpenMoneyWindow2");

	Params::BP_MakkaWindowCtrl2_C_BPI_OpenMoneyWindow2 Parms{};

	Parms.IsSkipAnimation = IsSkipAnimation;
	Parms.IsSetPartyMakka = IsSetPartyMakka;
	Parms.WithOpenTotalWindow = WithOpenTotalWindow;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_OpenTotalWIndow2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSkipAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_OpenTotalWIndow2(bool IsSkipAnimation, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_OpenTotalWIndow2");

	Params::BP_MakkaWindowCtrl2_C_BPI_OpenTotalWIndow2 Parms{};

	Parms.IsSkipAnimation = IsSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_OpenCostWIndow2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSkipAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_OpenCostWIndow2(bool IsSkipAnimation, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_OpenCostWIndow2");

	Params::BP_MakkaWindowCtrl2_C_BPI_OpenCostWIndow2 Parms{};

	Parms.IsSkipAnimation = IsSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_CloseMoneyWindow2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSkipAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_CloseMoneyWindow2(bool IsSkipAnimation, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_CloseMoneyWindow2");

	Params::BP_MakkaWindowCtrl2_C_BPI_CloseMoneyWindow2 Parms{};

	Parms.IsSkipAnimation = IsSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_CloseTotalWindow2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSkipAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_CloseTotalWindow2(bool IsSkipAnimation, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_CloseTotalWindow2");

	Params::BP_MakkaWindowCtrl2_C_BPI_CloseTotalWindow2 Parms{};

	Parms.IsSkipAnimation = IsSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_CloseCostWindow2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSkipAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_CloseCostWindow2(bool IsSkipAnimation, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_CloseCostWindow2");

	Params::BP_MakkaWindowCtrl2_C_BPI_CloseCostWindow2 Parms{};

	Parms.IsSkipAnimation = IsSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_SetMoney
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNumber                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   InDelayBeforeAnim                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlaySE                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsReflectGameData                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_SetMoney(int32 InNumber, bool IsPlayAnimation, float InDelayBeforeAnim, bool IsPlaySE, bool IsReflectGameData, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_SetMoney");

	Params::BP_MakkaWindowCtrl2_C_BPI_SetMoney Parms{};

	Parms.InNumber = InNumber;
	Parms.IsPlayAnimation = IsPlayAnimation;
	Parms.InDelayBeforeAnim = InDelayBeforeAnim;
	Parms.IsPlaySE = IsPlaySE;
	Parms.IsReflectGameData = IsReflectGameData;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_SetTotal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNumber                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   InDelayBeforeAnim                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_SetTotal(int32 InNumber, bool IsPlayAnimation, float InDelayBeforeAnim, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_SetTotal");

	Params::BP_MakkaWindowCtrl2_C_BPI_SetTotal Parms{};

	Parms.InNumber = InNumber;
	Parms.IsPlayAnimation = IsPlayAnimation;
	Parms.InDelayBeforeAnim = InDelayBeforeAnim;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_SetCost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNumber                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   InDelayBeforeAnim                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_SetCost(int32 InNumber, bool IsPlayAnimation, float InDelayBeforeAnim, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_SetCost");

	Params::BP_MakkaWindowCtrl2_C_BPI_SetCost Parms{};

	Parms.InNumber = InNumber;
	Parms.IsPlayAnimation = IsPlayAnimation;
	Parms.InDelayBeforeAnim = InDelayBeforeAnim;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_AddMoney
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNumber                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   InDelayBeforeAnim                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlaySE                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsReflectGameData                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_AddMoney(int32 InNumber, bool IsPlayAnimation, float InDelayBeforeAnim, bool IsPlaySE, bool IsReflectGameData, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_AddMoney");

	Params::BP_MakkaWindowCtrl2_C_BPI_AddMoney Parms{};

	Parms.InNumber = InNumber;
	Parms.IsPlayAnimation = IsPlayAnimation;
	Parms.InDelayBeforeAnim = InDelayBeforeAnim;
	Parms.IsPlaySE = IsPlaySE;
	Parms.IsReflectGameData = IsReflectGameData;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_AddTotal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNumber                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   InDelayBeforeAnim                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_AddTotal(int32 InNumber, bool IsPlayAnimation, float InDelayBeforeAnim, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_AddTotal");

	Params::BP_MakkaWindowCtrl2_C_BPI_AddTotal Parms{};

	Parms.InNumber = InNumber;
	Parms.IsPlayAnimation = IsPlayAnimation;
	Parms.InDelayBeforeAnim = InDelayBeforeAnim;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_AddCost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNumber                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayAnimation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   InDelayBeforeAnim                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_AddCost(int32 InNumber, bool IsPlayAnimation, float InDelayBeforeAnim, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_AddCost");

	Params::BP_MakkaWindowCtrl2_C_BPI_AddCost Parms{};

	Parms.InNumber = InNumber;
	Parms.IsPlayAnimation = IsPlayAnimation;
	Parms.InDelayBeforeAnim = InDelayBeforeAnim;

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_SkipNumberAnim_Money
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_SkipNumberAnim_Money(bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_SkipNumberAnim_Money");

	Params::BP_MakkaWindowCtrl2_C_BPI_SkipNumberAnim_Money Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_SkipNumberAnim_Total
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_SkipNumberAnim_Total(bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_SkipNumberAnim_Total");

	Params::BP_MakkaWindowCtrl2_C_BPI_SkipNumberAnim_Total Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_SkipNumberAnim_Cost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_SkipNumberAnim_Cost(bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_SkipNumberAnim_Cost");

	Params::BP_MakkaWindowCtrl2_C_BPI_SkipNumberAnim_Cost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}


// Function BP_MakkaWindowCtrl2.BP_MakkaWindowCtrl2_C.BPI_SetCostColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColor                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NotUse                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakkaWindowCtrl2_C::BPI_SetCostColor(const struct FLinearColor& InColor, bool* NotUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakkaWindowCtrl2_C", "BPI_SetCostColor");

	Params::BP_MakkaWindowCtrl2_C_BPI_SetCostColor Parms{};

	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);

	if (NotUse != nullptr)
		*NotUse = Parms.NotUse;
}

}

