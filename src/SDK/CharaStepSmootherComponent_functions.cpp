#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaStepSmootherComponent

#include "Basic.hpp"

#include "CharaStepSmootherComponent_classes.hpp"
#include "CharaStepSmootherComponent_parameters.hpp"


namespace SDK
{

// Function CharaStepSmootherComponent.CharaStepSmootherComponent_C.Update
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkinnedMeshComponent*            Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IKEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCharaStepSmootherComponent_C::Update(float DeltaTime, class USkinnedMeshComponent* Mesh, bool IKEnable, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaStepSmootherComponent_C", "Update");

	Params::CharaStepSmootherComponent_C_Update Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.Mesh = Mesh;
	Parms.IKEnable = IKEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function CharaStepSmootherComponent.CharaStepSmootherComponent_C.MakeRotation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkinnedMeshComponent*            Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalBefore                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalAfter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UCharaStepSmootherComponent_C::MakeRotation(class USkinnedMeshComponent* Mesh, const struct FVector& NormalBefore, const struct FVector& NormalAfter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaStepSmootherComponent_C", "MakeRotation");

	Params::CharaStepSmootherComponent_C_MakeRotation Parms{};

	Parms.Mesh = Mesh;
	Parms.NormalBefore = std::move(NormalBefore);
	Parms.NormalAfter = std::move(NormalAfter);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

