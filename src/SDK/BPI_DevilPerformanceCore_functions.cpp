#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DevilPerformanceCore

#include "Basic.hpp"

#include "BPI_DevilPerformanceCore_classes.hpp"
#include "BPI_DevilPerformanceCore_parameters.hpp"


namespace SDK
{

// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_BeginDeathAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   InOption                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DeadTimingOverride                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DeadTiming                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_BeginDeathAction(uint8 InOption, bool DeadTimingOverride, float DeadTiming, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_BeginDeathAction");

	Params::BPI_DevilPerformanceCore_C_BI_BeginDeathAction Parms{};

	Parms.InOption = InOption;
	Parms.DeadTimingOverride = DeadTimingOverride;
	Parms.DeadTiming = DeadTiming;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Dead_Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeadMaterialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateMateialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Dead_Update(float DeadMaterialValue, float StateMateialValue, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Dead_Update");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Dead_Update Parms{};

	Parms.DeadMaterialValue = DeadMaterialValue;
	Parms.StateMateialValue = StateMateialValue;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Dead_Update_Freeze
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeadMaterialValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StateMaterialValue                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Dead_Update_Freeze(float DeadMaterialValue, float StateMaterialValue, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Dead_Update_Freeze");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Dead_Update_Freeze Parms{};

	Parms.DeadMaterialValue = DeadMaterialValue;
	Parms.StateMaterialValue = StateMaterialValue;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Dead_Update_Freeze_DMDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DitherRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Dead_Update_Freeze_DMDither(float DitherRate, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Dead_Update_Freeze_DMDither");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Dead_Update_Freeze_DMDither Parms{};

	Parms.DitherRate = DitherRate;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Dead_BreakDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Dead_BreakDown(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Dead_BreakDown");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Dead_BreakDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Dead_Finished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Dead_Finished(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Dead_Finished");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Dead_Finished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Dead_SpawnParticle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Dead_SpawnParticle(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Dead_SpawnParticle");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Dead_SpawnParticle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Dead_StopMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Dead_StopMotion(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Dead_StopMotion");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Dead_StopMotion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Dead_Dead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Dead_Dead(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Dead_Dead");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Dead_Dead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_BeginReviveAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_BeginReviveAction(bool IsSymbol, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_BeginReviveAction");

	Params::BPI_DevilPerformanceCore_C_BI_BeginReviveAction Parms{};

	Parms.IsSymbol = IsSymbol;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Revive_Update_Enemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Revive_Update_Enemy(float Value, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Revive_Update_Enemy");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Revive_Update_Enemy Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Revive_Finished_Enemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Revive_Finished_Enemy(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Revive_Finished_Enemy");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Revive_Finished_Enemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Revive_ParticleOn_Enemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Revive_ParticleOn_Enemy(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Revive_ParticleOn_Enemy");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Revive_ParticleOn_Enemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Revive_Update_Nakama
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Revive_Update_Nakama(float Value, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Revive_Update_Nakama");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Revive_Update_Nakama Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Revive_Finished_Nakama
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Revive_Finished_Nakama(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Revive_Finished_Nakama");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Revive_Finished_Nakama Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Revive_ParticleOn_Nakama
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Revive_ParticleOn_Nakama(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Revive_ParticleOn_Nakama");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Revive_ParticleOn_Nakama Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_BeginSpawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PlayMotion                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsInstantEvent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_BeginSpawn(bool IsSymbol, bool PlayMotion, bool IsInstantEvent, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_BeginSpawn");

	Params::BPI_DevilPerformanceCore_C_BI_BeginSpawn Parms{};

	Parms.IsSymbol = IsSymbol;
	Parms.PlayMotion = PlayMotion;
	Parms.IsInstantEvent = IsInstantEvent;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Spawn_Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Spawn_Update(float Value, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Spawn_Update");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Spawn_Update Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Spawn_Finished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Spawn_Finished(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Spawn_Finished");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Spawn_Finished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Spawn_SpawnDecal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Spawn_SpawnDecal(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Spawn_SpawnDecal");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Spawn_SpawnDecal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Spawn_SpawnEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Spawn_SpawnEffect(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Spawn_SpawnEffect");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Spawn_SpawnEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Spawn_SpawnMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Spawn_SpawnMotion(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Spawn_SpawnMotion");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Spawn_SpawnMotion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Spawn_SpawnEffectVisibleOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Spawn_SpawnEffectVisibleOn(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Spawn_SpawnEffectVisibleOn");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Spawn_SpawnEffectVisibleOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_BeginReturnAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsInstantEvnet                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_BeginReturnAction(float PlayRate, bool IsInstantEvnet, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_BeginReturnAction");

	Params::BPI_DevilPerformanceCore_C_BI_BeginReturnAction Parms{};

	Parms.PlayRate = PlayRate;
	Parms.IsInstantEvnet = IsInstantEvnet;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Return_Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Return_Update(float Value, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Return_Update");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Return_Update Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Return_Finished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Return_Finished(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Return_Finished");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Return_Finished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Return_ParticleOff
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Return_ParticleOff(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Return_ParticleOff");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Return_ParticleOff Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_BeginSummonAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentStatus                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsInstantEvent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_BeginSummonAction(int32 CurrentStatus, bool IsSymbol, bool Immediate, bool IsInstantEvent, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_BeginSummonAction");

	Params::BPI_DevilPerformanceCore_C_BI_BeginSummonAction Parms{};

	Parms.CurrentStatus = CurrentStatus;
	Parms.IsSymbol = IsSymbol;
	Parms.Immediate = Immediate;
	Parms.IsInstantEvent = IsInstantEvent;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Summon_Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Summon_Update(float Value, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Summon_Update");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Summon_Update Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Summon_Finished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Summon_Finished(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Summon_Finished");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Summon_Finished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Summon_ApplyBadStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Summon_ApplyBadStatus(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Summon_ApplyBadStatus");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Summon_ApplyBadStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_AdjustMeshScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReset                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_AdjustMeshScale(bool IsReset, bool IsSymbol, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_AdjustMeshScale");

	Params::BPI_DevilPerformanceCore_C_BI_AdjustMeshScale Parms{};

	Parms.IsReset = IsReset;
	Parms.IsSymbol = IsSymbol;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_ResetDeadMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_ResetDeadMaterial(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_ResetDeadMaterial");

	Params::BPI_DevilPerformanceCore_C_BI_ResetDeadMaterial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Spawn_Update_Sub
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Spawn_Update_Sub(float Value, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Spawn_Update_Sub");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Spawn_Update_Sub Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Spawn_SpawnMotion_Sub
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Spawn_SpawnMotion_Sub(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Spawn_SpawnMotion_Sub");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Spawn_SpawnMotion_Sub Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_BeginRapidReturnAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_BeginRapidReturnAction(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_BeginRapidReturnAction");

	Params::BPI_DevilPerformanceCore_C_BI_BeginRapidReturnAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_BeginRapidSummonAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentStatus                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSymbol                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsImmediately                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_BeginRapidSummonAction(int32 CurrentStatus, bool IsSymbol, bool IsImmediately, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_BeginRapidSummonAction");

	Params::BPI_DevilPerformanceCore_C_BI_BeginRapidSummonAction Parms{};

	Parms.CurrentStatus = CurrentStatus;
	Parms.IsSymbol = IsSymbol;
	Parms.IsImmediately = IsImmediately;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Dead_CharaEffectDeactivate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Dead_CharaEffectDeactivate(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Dead_CharaEffectDeactivate");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Dead_CharaEffectDeactivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_TimeLine_Summon_EndOfSummon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_TimeLine_Summon_EndOfSummon(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_TimeLine_Summon_EndOfSummon");

	Params::BPI_DevilPerformanceCore_C_BI_TimeLine_Summon_EndOfSummon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_DevilPerformanceCore.BPI_DevilPerformanceCore_C.BI_SetReturnPerformance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_DEVIL_PERFORMANCE_TYPE                Return                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DevilPerformanceCore_C::BI_SetReturnPerformance(E_DEVIL_PERFORMANCE_TYPE Return, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DevilPerformanceCore_C", "BI_SetReturnPerformance");

	Params::BPI_DevilPerformanceCore_C_BI_SetReturnPerformance Parms{};

	Parms.Return = Return;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}

}

