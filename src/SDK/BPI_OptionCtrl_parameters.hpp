#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_OptionCtrl

#include "Basic.hpp"

#include "E_OptionUseType_structs.hpp"


namespace SDK::Params
{

// Function BPI_OptionCtrl.BPI_OptionCtrl_C.InitializeOption
// 0x0001 (0x0001 - 0x0000)
struct BPI_OptionCtrl_C_InitializeOption final
{
public:
	E_OptionUseType                               UseType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_OptionCtrl_C_InitializeOption) == 0x000001, "Wrong alignment on BPI_OptionCtrl_C_InitializeOption");
static_assert(sizeof(BPI_OptionCtrl_C_InitializeOption) == 0x000001, "Wrong size on BPI_OptionCtrl_C_InitializeOption");
static_assert(offsetof(BPI_OptionCtrl_C_InitializeOption, UseType) == 0x000000, "Member 'BPI_OptionCtrl_C_InitializeOption::UseType' has a wrong offset!");

// Function BPI_OptionCtrl.BPI_OptionCtrl_C.IsCompleteInitialize
// 0x0001 (0x0001 - 0x0000)
struct BPI_OptionCtrl_C_IsCompleteInitialize final
{
public:
	bool                                          IsComplete;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_OptionCtrl_C_IsCompleteInitialize) == 0x000001, "Wrong alignment on BPI_OptionCtrl_C_IsCompleteInitialize");
static_assert(sizeof(BPI_OptionCtrl_C_IsCompleteInitialize) == 0x000001, "Wrong size on BPI_OptionCtrl_C_IsCompleteInitialize");
static_assert(offsetof(BPI_OptionCtrl_C_IsCompleteInitialize, IsComplete) == 0x000000, "Member 'BPI_OptionCtrl_C_IsCompleteInitialize::IsComplete' has a wrong offset!");

// Function BPI_OptionCtrl.BPI_OptionCtrl_C.IsEndOptionCtrl
// 0x0001 (0x0001 - 0x0000)
struct BPI_OptionCtrl_C_IsEndOptionCtrl final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_OptionCtrl_C_IsEndOptionCtrl) == 0x000001, "Wrong alignment on BPI_OptionCtrl_C_IsEndOptionCtrl");
static_assert(sizeof(BPI_OptionCtrl_C_IsEndOptionCtrl) == 0x000001, "Wrong size on BPI_OptionCtrl_C_IsEndOptionCtrl");
static_assert(offsetof(BPI_OptionCtrl_C_IsEndOptionCtrl, IsEnd) == 0x000000, "Member 'BPI_OptionCtrl_C_IsEndOptionCtrl::IsEnd' has a wrong offset!");

// Function BPI_OptionCtrl.BPI_OptionCtrl_C.GetFlagGotoTitle
// 0x0001 (0x0001 - 0x0000)
struct BPI_OptionCtrl_C_GetFlagGotoTitle final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_OptionCtrl_C_GetFlagGotoTitle) == 0x000001, "Wrong alignment on BPI_OptionCtrl_C_GetFlagGotoTitle");
static_assert(sizeof(BPI_OptionCtrl_C_GetFlagGotoTitle) == 0x000001, "Wrong size on BPI_OptionCtrl_C_GetFlagGotoTitle");
static_assert(offsetof(BPI_OptionCtrl_C_GetFlagGotoTitle, Flag) == 0x000000, "Member 'BPI_OptionCtrl_C_GetFlagGotoTitle::Flag' has a wrong offset!");

}

