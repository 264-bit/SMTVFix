#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LocationWinCtrl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Project_structs.hpp"
#include "Project_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LocationWinCtrl.BP_LocationWinCtrl_C
// 0x0018 (0x0270 - 0x0258)
class ABP_LocationWinCtrl_C final : public ALocationWindowBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWB_LocationWin_C*                      LocationWin;                                       // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LocationWinCtrl(int32 EntryPoint);
	void AddToScreenWidget();
	void BPI_setAutomapName(const class FText& InName);
	void BPI_setMapName(const class FText& InName);
	void BPI_setNormalColor();
	void BPI_setOtherColor();
	void BPI_setTokyoLargeMapPlaceName(const class FText& InName);
	void BPI_setFacilityName(const class FText& InName);
	void Close(bool PlayAnim);
	void Open(E_LOCATION_WINDOW_TYPE InType, bool PlayAnim);
	void ReceiveBeginPlay();
	void BPI_getCurrentName(class FText* OutText);
	void BPI_getState(E_LOCATION_WINDOW_STATE* State);

	class FText GetCurrentName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LocationWinCtrl_C">();
	}
	static class ABP_LocationWinCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LocationWinCtrl_C>();
	}
};
static_assert(alignof(ABP_LocationWinCtrl_C) == 0x000008, "Wrong alignment on ABP_LocationWinCtrl_C");
static_assert(sizeof(ABP_LocationWinCtrl_C) == 0x000270, "Wrong size on ABP_LocationWinCtrl_C");
static_assert(offsetof(ABP_LocationWinCtrl_C, UberGraphFrame) == 0x000258, "Member 'ABP_LocationWinCtrl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LocationWinCtrl_C, DefaultSceneRoot) == 0x000260, "Member 'ABP_LocationWinCtrl_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LocationWinCtrl_C, LocationWin) == 0x000268, "Member 'ABP_LocationWinCtrl_C::LocationWin' has a wrong offset!");

}

