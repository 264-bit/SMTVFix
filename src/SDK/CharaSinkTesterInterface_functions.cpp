#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaSinkTesterInterface

#include "Basic.hpp"

#include "CharaSinkTesterInterface_classes.hpp"
#include "CharaSinkTesterInterface_parameters.hpp"


namespace SDK
{

// Function CharaSinkTesterInterface.CharaSinkTesterInterface_C.TestSink
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USkinnedMeshComponent*            Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SinkLimit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   SinkMin                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SinkMax                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCharaSinkTesterInterface_C::TestSink(class USkinnedMeshComponent* Mesh, float SinkLimit, bool Debug, float* SinkMin, float* SinkMax) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaSinkTesterInterface_C", "TestSink");

	Params::CharaSinkTesterInterface_C_TestSink Parms{};

	Parms.Mesh = Mesh;
	Parms.SinkLimit = SinkLimit;
	Parms.Debug = Debug;

	UObject::ProcessEvent(Func, &Parms);

	if (SinkMin != nullptr)
		*SinkMin = Parms.SinkMin;

	if (SinkMax != nullptr)
		*SinkMax = Parms.SinkMax;
}

}

