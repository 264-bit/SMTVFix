#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_RandomInputDebugger

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_RandomInputDebugger.BPL_RandomInputDebugger_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_RandomInputDebugger_C final : public UBlueprintFunctionLibrary
{
public:
	static void AddDebugMenu_RandomInput(class UObject* __WorldContext);
	static void SpawnDebugMenu_RandomInput(class UObject* __WorldContext);
	static void GetRandomInputDebuggerActionSetMax(class UObject* __WorldContext, int32* SetMax);
	static void GetRandomInputDebugger_MappingRootPath(bool ActionMapping, class UObject* __WorldContext, class FString* Path);
	static void GetRandomInputDebugger_ActionPath(int32 Set, class UObject* __WorldContext, class FString* RootPath, class FString* MappingPath, class FString* MinTimePath, class FString* MaxTimePath, class FString* HoldMinTimePath, class FString* HoldMaxTimePath);
	static void GetRandomInputDebugger_AnalogStickPath(bool LeftStick, bool AxisX, class UObject* __WorldContext, class FString* RootPath, class FString* Enable, class FString* MinPushTimePath, class FString* MaxPushTimePath, class FString* MinPopTimePath, class FString* MaxPopTimePath, class FString* MinValue, class FString* MaxValue, class FString* MaxValueRate, class FString* ReverseRate);
	static void ConvertRandomInputDebugger_AnalogStickType(int32 Param_Index, class UObject* __WorldContext, bool* LeftStick, bool* AxisX);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_RandomInputDebugger_C">();
	}
	static class UBPL_RandomInputDebugger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_RandomInputDebugger_C>();
	}
};
static_assert(alignof(UBPL_RandomInputDebugger_C) == 0x000008, "Wrong alignment on UBPL_RandomInputDebugger_C");
static_assert(sizeof(UBPL_RandomInputDebugger_C) == 0x000028, "Wrong size on UBPL_RandomInputDebugger_C");

}

