#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventMiman

#include "Basic.hpp"

#include "BP_EventMiman_classes.hpp"
#include "BP_EventMiman_parameters.hpp"


namespace SDK
{

// Function BP_EventMiman.BP_EventMiman_C.ExecuteUbergraph_BP_EventMiman
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventMiman_C::ExecuteUbergraph_BP_EventMiman(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "ExecuteUbergraph_BP_EventMiman");

	Params::BP_EventMiman_C_ExecuteUbergraph_BP_EventMiman Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventMiman.BP_EventMiman_C.OnMontageEnded_
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventMiman_C::OnMontageEnded_(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "OnMontageEnded_");

	Params::BP_EventMiman_C_OnMontageEnded_ Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventMiman.BP_EventMiman_C.Func5
// (BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::Func5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "Func5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.Func4
// (BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::Func4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "Func4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.Func1
// (BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::Func1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "Func1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.Func3
// (BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::Func3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "Func3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.Func2
// (BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::Func2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "Func2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.BPI_UpdateIconView
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::BPI_UpdateIconView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "BPI_UpdateIconView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.BPI_HideMiman
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::BPI_HideMiman()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "BPI_HideMiman");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.BPI_ShowAgainMiman
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::BPI_ShowAgainMiman()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "BPI_ShowAgainMiman");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.QuestExecute
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::QuestExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "QuestExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EventMiman_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.BPI_CheckMiman
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Miman                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventMiman_C::BPI_CheckMiman(bool* Miman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "BPI_CheckMiman");

	Params::BP_EventMiman_C_BPI_CheckMiman Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Miman != nullptr)
		*Miman = Parms.Miman;
}


// Function BP_EventMiman.BP_EventMiman_C.ShiftCameraCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Shift                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Rotate                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventMiman_C::ShiftCameraCheck(bool* Shift, struct FRotator* Rotate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "ShiftCameraCheck");

	Params::BP_EventMiman_C_ShiftCameraCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Shift != nullptr)
		*Shift = Parms.Shift;

	if (Rotate != nullptr)
		*Rotate = std::move(Parms.Rotate);
}


// Function BP_EventMiman.BP_EventMiman_C.AddGardenPoint
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::AddGardenPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "AddGardenPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.CheckMimanFoundNum
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::CheckMimanFoundNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "CheckMimanFoundNum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.SetMinimapIconTableRow
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMinimapIconTableRow             OutRow                                                 (Parm, OutParm)
// bool                                    NeedToAddMore                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventMiman_C::SetMinimapIconTableRow(int32 Param_Index, struct FMinimapIconTableRow* OutRow, bool* NeedToAddMore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "SetMinimapIconTableRow");

	Params::BP_EventMiman_C_SetMinimapIconTableRow Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);

	if (NeedToAddMore != nullptr)
		*NeedToAddMore = Parms.NeedToAddMore;
}


// Function BP_EventMiman.BP_EventMiman_C.ActionIn
// (BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::ActionIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "ActionIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.CallDeactivate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::CallDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "CallDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventMiman.BP_EventMiman_C.CheckActive
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventMiman_C::CheckActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventMiman_C", "CheckActive");

	UObject::ProcessEvent(Func, nullptr);
}

}

