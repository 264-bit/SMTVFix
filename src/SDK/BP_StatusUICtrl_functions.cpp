#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StatusUICtrl

#include "Basic.hpp"

#include "BP_StatusUICtrl_classes.hpp"
#include "BP_StatusUICtrl_parameters.hpp"


namespace SDK
{

// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_Init_SimpleStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          StatusData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_WIDGET_PRIO                           WidgetPriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_Init_SimpleStatus(class UObject* StatusData, E_WIDGET_PRIO WidgetPriority, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_Init_SimpleStatus");

	Params::BP_StatusUICtrl_C_BPI_Init_SimpleStatus Parms{};

	Parms.StatusData = StatusData;
	Parms.WidgetPriority = WidgetPriority;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_Open_SimpleStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_Open_SimpleStatus(bool Immediate, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_Open_SimpleStatus");

	Params::BP_StatusUICtrl_C_BPI_Open_SimpleStatus Parms{};

	Parms.Immediate = Immediate;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_Close_SimpleStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_Close_SimpleStatus(bool Immediate, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_Close_SimpleStatus");

	Params::BP_StatusUICtrl_C_BPI_Close_SimpleStatus Parms{};

	Parms.Immediate = Immediate;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_IsEndAnimation_SimpleStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_IsEndAnimation_SimpleStatus(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_IsEndAnimation_SimpleStatus");

	Params::BP_StatusUICtrl_C_BPI_IsEndAnimation_SimpleStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_ChangeStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_ChangeStatus(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_ChangeStatus");

	Params::BP_StatusUICtrl_C_BPI_ChangeStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_ChangeBtnHelpStatus_StatusUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_ChangeBtnHelpStatus_StatusUI(bool Visibility, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_ChangeBtnHelpStatus_StatusUI");

	Params::BP_StatusUICtrl_C_BPI_ChangeBtnHelpStatus_StatusUI Parms{};

	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_SetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_SetVisibility(ESlateVisibility Visibility, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_SetVisibility");

	Params::BP_StatusUICtrl_C_BPI_SetVisibility Parms{};

	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_GetHoverIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Main                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Sub                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::BPI_GetHoverIndex(int32* Main, int32* Sub)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_GetHoverIndex");

	Params::BP_StatusUICtrl_C_BPI_GetHoverIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Main != nullptr)
		*Main = Parms.Main;

	if (Sub != nullptr)
		*Sub = Parms.Sub;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_CheckMouseHoverList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Main                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Sub                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_CheckMouseHoverList(bool* Main, bool* Sub)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_CheckMouseHoverList");

	Params::BP_StatusUICtrl_C_BPI_CheckMouseHoverList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Main != nullptr)
		*Main = Parms.Main;

	if (Sub != nullptr)
		*Sub = Parms.Sub;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_ClearMouseMediator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_ClearMouseMediator(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_ClearMouseMediator");

	Params::BP_StatusUICtrl_C_BPI_ClearMouseMediator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_SetMouseMediator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          MouseMediator                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_SetMouseMediator(class UObject* MouseMediator, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_SetMouseMediator");

	Params::BP_StatusUICtrl_C_BPI_SetMouseMediator Parms{};

	Parms.MouseMediator = MouseMediator;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_RestartResultCtrl_FromMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_RestartResultCtrl_FromMessage(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_RestartResultCtrl_FromMessage");

	Params::BP_StatusUICtrl_C_BPI_RestartResultCtrl_FromMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_TickFunc_InheritResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Decide                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Cancel                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_TickFunc_InheritResult(bool* Decide, bool* Cancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_TickFunc_InheritResult");

	Params::BP_StatusUICtrl_C_BPI_TickFunc_InheritResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Decide != nullptr)
		*Decide = Parms.Decide;

	if (Cancel != nullptr)
		*Cancel = Parms.Cancel;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_ShowResistancesInheritResultUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_ShowResistancesInheritResultUI(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_ShowResistancesInheritResultUI");

	Params::BP_StatusUICtrl_C_BPI_ShowResistancesInheritResultUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_IsEndAnimation_InheritStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_IsEndAnimation_InheritStatus(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_IsEndAnimation_InheritStatus");

	Params::BP_StatusUICtrl_C_BPI_IsEndAnimation_InheritStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_InitInheritUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          CharaChanger                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          UIStatusCtrlDataObjUnite                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_InitInheritUI(class UObject* CharaChanger, class UObject* UIStatusCtrlDataObjUnite, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_InitInheritUI");

	Params::BP_StatusUICtrl_C_BPI_InitInheritUI Parms{};

	Parms.CharaChanger = CharaChanger;
	Parms.UIStatusCtrlDataObjUnite = UIStatusCtrlDataObjUnite;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_ShowInheritUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ParentTop                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FirstCursorIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChildTop                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseCostWindow                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_ShowInheritUI(int32 ParentTop, int32 FirstCursorIndex, int32 ChildTop, bool UseCostWindow, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_ShowInheritUI");

	Params::BP_StatusUICtrl_C_BPI_ShowInheritUI Parms{};

	Parms.ParentTop = ParentTop;
	Parms.FirstCursorIndex = FirstCursorIndex;
	Parms.ChildTop = ChildTop;
	Parms.UseCostWindow = UseCostWindow;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_UpdateInheritUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ParentTop                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ParentCurrent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChildTop                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChildCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChildCurrent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_UpdateInheritUI(int32 ParentTop, int32 ParentCurrent, int32 ChildTop, int32 ChildCategory, int32 ChildCurrent, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_UpdateInheritUI");

	Params::BP_StatusUICtrl_C_BPI_UpdateInheritUI Parms{};

	Parms.ParentTop = ParentTop;
	Parms.ParentCurrent = ParentCurrent;
	Parms.ChildTop = ChildTop;
	Parms.ChildCategory = ChildCategory;
	Parms.ChildCurrent = ChildCurrent;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_CloseInheritUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CloseUI                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnCamera                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_CloseInheritUI(bool CloseUI, bool ReturnCamera, bool Immediate, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_CloseInheritUI");

	Params::BP_StatusUICtrl_C_BPI_CloseInheritUI Parms{};

	Parms.CloseUI = CloseUI;
	Parms.ReturnCamera = ReturnCamera;
	Parms.Immediate = Immediate;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_ShowFusionResultUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_ShowFusionResultUI(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_ShowFusionResultUI");

	Params::BP_StatusUICtrl_C_BPI_ShowFusionResultUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_TickFunc_InheritStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_TickFunc_InheritStatus(float DeltaTime, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_TickFunc_InheritStatus");

	Params::BP_StatusUICtrl_C_BPI_TickFunc_InheritStatus Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_SetTaskBeforeViewEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Runner                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_SetTaskBeforeViewEnd(class UObject* Runner, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_SetTaskBeforeViewEnd");

	Params::BP_StatusUICtrl_C_BPI_SetTaskBeforeViewEnd Parms{};

	Parms.Runner = Runner;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_StartCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIStatusCtrlDataObjBase*         DataObj                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_UI_STATUS_CTRL_TYPE                   CtrlType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_StatusCharaChanger_C>StatusCharaChanger                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_WIDGET_PRIO                           WidgetPriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_StartCtrl(class UUIStatusCtrlDataObjBase* DataObj, E_UI_STATUS_CTRL_TYPE CtrlType, TScriptInterface<class IBPI_StatusCharaChanger_C> StatusCharaChanger, E_WIDGET_PRIO WidgetPriority, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_StartCtrl");

	Params::BP_StatusUICtrl_C_BPI_StartCtrl Parms{};

	Parms.DataObj = DataObj;
	Parms.CtrlType = CtrlType;
	Parms.StatusCharaChanger = StatusCharaChanger;
	Parms.WidgetPriority = WidgetPriority;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_TickEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    StatusEnd                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_TickEvent(float DeltaSeconds, bool* StatusEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_TickEvent");

	Params::BP_StatusUICtrl_C_BPI_TickEvent Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (StatusEnd != nullptr)
		*StatusEnd = Parms.StatusEnd;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BPI_IsComplete
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsComplete                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::BPI_IsComplete(bool* IsComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BPI_IsComplete");

	Params::BP_StatusUICtrl_C_BPI_IsComplete Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsComplete != nullptr)
		*IsComplete = Parms.IsComplete;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.ButtonHelpOut
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SkipAnimation                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::ButtonHelpOut(const bool SkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "ButtonHelpOut");

	Params::BP_StatusUICtrl_C_ButtonHelpOut Parms{};

	Parms.SkipAnimation = SkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.ButtonHelpIn
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSkipAnim                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_UI_STATUS_PAGE_TYPE                   PageType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_UI_STATUS_CTRL_TYPE                   InCtrlType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::ButtonHelpIn(bool InSkipAnim, E_UI_STATUS_PAGE_TYPE PageType, E_UI_STATUS_CTRL_TYPE InCtrlType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "ButtonHelpIn");

	Params::BP_StatusUICtrl_C_ButtonHelpIn Parms{};

	Parms.InSkipAnim = InSkipAnim;
	Parms.PageType = PageType;
	Parms.InCtrlType = InCtrlType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.UpdateButtonHelp
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::UpdateButtonHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "UpdateButtonHelp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BindFunc_OnClickedFaceIcon
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::BindFunc_OnClickedFaceIcon(int32 Move)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BindFunc_OnClickedFaceIcon");

	Params::BP_StatusUICtrl_C_BindFunc_OnClickedFaceIcon Parms{};

	Parms.Move = Move;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.DataStep
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InMove                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Moved                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::DataStep(int32 InMove, int32* Moved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "DataStep");

	Params::BP_StatusUICtrl_C_DataStep Parms{};

	Parms.InMove = InMove;

	UObject::ProcessEvent(Func, &Parms);

	if (Moved != nullptr)
		*Moved = Parms.Moved;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BindFunc_OnClickedFaceBtnLR
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::BindFunc_OnClickedFaceBtnLR(int32 Move)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BindFunc_OnClickedFaceBtnLR");

	Params::BP_StatusUICtrl_C_BindFunc_OnClickedFaceBtnLR Parms{};

	Parms.Move = Move;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BindFunc_OnClickedParentSlot
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::BindFunc_OnClickedParentSlot(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BindFunc_OnClickedParentSlot");

	Params::BP_StatusUICtrl_C_BindFunc_OnClickedParentSlot Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BindFunc_OnHoveredParentSlot
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::BindFunc_OnHoveredParentSlot(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BindFunc_OnHoveredParentSlot");

	Params::BP_StatusUICtrl_C_BindFunc_OnHoveredParentSlot Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BindFunc_OnClickedRightSlot
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::BindFunc_OnClickedRightSlot(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BindFunc_OnClickedRightSlot");

	Params::BP_StatusUICtrl_C_BindFunc_OnClickedRightSlot Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BindFunc_OnHoveredRightSlot
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::BindFunc_OnHoveredRightSlot(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BindFunc_OnHoveredRightSlot");

	Params::BP_StatusUICtrl_C_BindFunc_OnHoveredRightSlot Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.Calc Move Index by Wheel
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InOffset                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMove                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CursorDataIndex                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ScrollStack                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CurosrMoved                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::Calc_Move_Index_by_Wheel(int32 InOffset, int32 InMove, int32* CursorDataIndex, int32* ScrollStack, bool* CurosrMoved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "Calc Move Index by Wheel");

	Params::BP_StatusUICtrl_C_Calc_Move_Index_by_Wheel Parms{};

	Parms.InOffset = InOffset;
	Parms.InMove = InMove;

	UObject::ProcessEvent(Func, &Parms);

	if (CursorDataIndex != nullptr)
		*CursorDataIndex = Parms.CursorDataIndex;

	if (ScrollStack != nullptr)
		*ScrollStack = Parms.ScrollStack;

	if (CurosrMoved != nullptr)
		*CurosrMoved = Parms.CurosrMoved;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BindFunc_OnMovedParentScrollBarByMouse
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::BindFunc_OnMovedParentScrollBarByMouse(int32 NewOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BindFunc_OnMovedParentScrollBarByMouse");

	Params::BP_StatusUICtrl_C_BindFunc_OnMovedParentScrollBarByMouse Parms{};

	Parms.NewOffset = NewOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.BindFunc_OnMovedRightScrollBarByMouse
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::BindFunc_OnMovedRightScrollBarByMouse(int32 NewOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "BindFunc_OnMovedRightScrollBarByMouse");

	Params::BP_StatusUICtrl_C_BindFunc_OnMovedRightScrollBarByMouse Parms{};

	Parms.NewOffset = NewOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.GetEnableMouseCtrl
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::GetEnableMouseCtrl(bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "GetEnableMouseCtrl");

	Params::BP_StatusUICtrl_C_GetEnableMouseCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.IsActivePartySkillSwap
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_StatusUICtrl_C::IsActivePartySkillSwap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "IsActivePartySkillSwap");

	Params::BP_StatusUICtrl_C_IsActivePartySkillSwap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.IsActiveBibleSkillSwap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_StatusUICtrl_C::IsActiveBibleSkillSwap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "IsActiveBibleSkillSwap");

	Params::BP_StatusUICtrl_C_IsActiveBibleSkillSwap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.SkillPageChangeCursorButtonHelp
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::SkillPageChangeCursorButtonHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "SkillPageChangeCursorButtonHelp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.GetHoldInputButton
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InputNum                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Repeat                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::GetHoldInputButton(int32* InputNum, bool* Repeat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "GetHoldInputButton");

	Params::BP_StatusUICtrl_C_GetHoldInputButton Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InputNum != nullptr)
		*InputNum = Parms.InputNum;

	if (Repeat != nullptr)
		*Repeat = Parms.Repeat;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.CloseHelpWindow
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Immediate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::CloseHelpWindow(bool Immediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "CloseHelpWindow");

	Params::BP_StatusUICtrl_C_CloseHelpWindow Parms{};

	Parms.Immediate = Immediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.CheckOpenFlag
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   OpenFlag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_UI_STATUS_OPEN                        Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Open                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::CheckOpenFlag(int32 OpenFlag, E_UI_STATUS_OPEN Status, bool* Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "CheckOpenFlag");

	Params::BP_StatusUICtrl_C_CheckOpenFlag Parms{};

	Parms.OpenFlag = OpenFlag;
	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);

	if (Open != nullptr)
		*Open = Parms.Open;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.SetHelpWindow
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIStatusCtrlDataObjBase*         InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::SetHelpWindow(class UUIStatusCtrlDataObjBase* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "SetHelpWindow");

	Params::BP_StatusUICtrl_C_SetHelpWindow Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.SlotType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MovableSkill                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    SwitchableKamui                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::SlotType(bool* MovableSkill, bool* SwitchableKamui)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "SlotType");

	Params::BP_StatusUICtrl_C_SlotType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MovableSkill != nullptr)
		*MovableSkill = Parms.MovableSkill;

	if (SwitchableKamui != nullptr)
		*SwitchableKamui = Parms.SwitchableKamui;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.ResetCursorPos
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_UI_STATUS_PAGE_TYPE                   PageType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::ResetCursorPos(E_UI_STATUS_PAGE_TYPE PageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "ResetCursorPos");

	Params::BP_StatusUICtrl_C_ResetCursorPos Parms{};

	Parms.PageType = PageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.CommonTickFunc
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InputNum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::CommonTickFunc(int32 InputNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "CommonTickFunc");

	Params::BP_StatusUICtrl_C_CommonTickFunc Parms{};

	Parms.InputNum = InputNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.GetInputButton
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableA                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    EnableX                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   InputNum                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Repeat                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::GetInputButton(bool EnableA, bool EnableX, int32* InputNum, bool* Repeat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "GetInputButton");

	Params::BP_StatusUICtrl_C_GetInputButton Parms{};

	Parms.EnableA = EnableA;
	Parms.EnableX = EnableX;

	UObject::ProcessEvent(Func, &Parms);

	if (InputNum != nullptr)
		*InputNum = Parms.InputNum;

	if (Repeat != nullptr)
		*Repeat = Parms.Repeat;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.MyMakkaWindowClose
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InShowTotalWindow                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InAnimation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::MyMakkaWindowClose(bool InShowTotalWindow, bool InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "MyMakkaWindowClose");

	Params::BP_StatusUICtrl_C_MyMakkaWindowClose Parms{};

	Parms.InShowTotalWindow = InShowTotalWindow;
	Parms.InAnimation = InAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.CloseCommonWindow
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::CloseCommonWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "CloseCommonWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.OpenCommonWindow
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::OpenCommonWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "OpenCommonWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.GetCostColor
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Difference                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor ABP_StatusUICtrl_C::GetCostColor(int32 Difference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "GetCostColor");

	Params::BP_StatusUICtrl_C_GetCostColor Parms{};

	Parms.Difference = Difference;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.GetWithTitle
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_StatusUICtrl_C::GetWithTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "GetWithTitle");

	Params::BP_StatusUICtrl_C_GetWithTitle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.ChangeCost
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::ChangeCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "ChangeCost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.IsHolding
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_StatusUICtrl_C::IsHolding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "IsHolding");

	Params::BP_StatusUICtrl_C_IsHolding Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.UpdateAnalyzeNewIcon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::UpdateAnalyzeNewIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "UpdateAnalyzeNewIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.Change Button Help Page Change
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_UI_STATUS_PAGE_TYPE                   PageType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_UI_STATUS_CTRL_TYPE                   CtrlType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceChange                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::Change_Button_Help_Page_Change(E_UI_STATUS_PAGE_TYPE PageType, E_UI_STATUS_CTRL_TYPE CtrlType, bool ForceChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "Change Button Help Page Change");

	Params::BP_StatusUICtrl_C_Change_Button_Help_Page_Change Parms{};

	Parms.PageType = PageType;
	Parms.CtrlType = CtrlType;
	Parms.ForceChange = ForceChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.CreateStatusWidget
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::CreateStatusWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "CreateStatusWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.CloseUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::CloseUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "CloseUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.IsEnableButtonR
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsTrigger                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_StatusUICtrl_C::IsEnableButtonR(bool IsTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "IsEnableButtonR");

	Params::BP_StatusUICtrl_C_IsEnableButtonR Parms{};

	Parms.IsTrigger = IsTrigger;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.IsEnableButtonL
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsTrigger                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_StatusUICtrl_C::IsEnableButtonL(bool IsTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "IsEnableButtonL");

	Params::BP_StatusUICtrl_C_IsEnableButtonL Parms{};

	Parms.IsTrigger = IsTrigger;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.FuncHideUITick
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::FuncHideUITick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "FuncHideUITick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.FuncTWindowTick
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::FuncTWindowTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "FuncTWindowTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.FuncBiographyTick
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableChangeNewOld                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Pushed                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::FuncBiographyTick(bool EnableChangeNewOld, bool* Pushed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "FuncBiographyTick");

	Params::BP_StatusUICtrl_C_FuncBiographyTick Parms{};

	Parms.EnableChangeNewOld = EnableChangeNewOld;

	UObject::ProcessEvent(Func, &Parms);

	if (Pushed != nullptr)
		*Pushed = Parms.Pushed;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.FuncConditionTick
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableChangeNewOld                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Pushed                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::FuncConditionTick(bool EnableChangeNewOld, bool* Pushed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "FuncConditionTick");

	Params::BP_StatusUICtrl_C_FuncConditionTick Parms{};

	Parms.EnableChangeNewOld = EnableChangeNewOld;

	UObject::ProcessEvent(Func, &Parms);

	if (Pushed != nullptr)
		*Pushed = Parms.Pushed;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.FuncSkillTick
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableSkillSwap                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    EnableChangeNewOld                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::FuncSkillTick(bool EnableSkillSwap, bool EnableChangeNewOld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "FuncSkillTick");

	Params::BP_StatusUICtrl_C_FuncSkillTick Parms{};

	Parms.EnableSkillSwap = EnableSkillSwap;
	Parms.EnableChangeNewOld = EnableChangeNewOld;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.NewTickFunc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StatusEnd                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::NewTickFunc(bool* StatusEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "NewTickFunc");

	Params::BP_StatusUICtrl_C_NewTickFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StatusEnd != nullptr)
		*StatusEnd = Parms.StatusEnd;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.NewInit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIStatusCtrlDataObjBase*         UIStatusData                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_UI_STATUS_CTRL_TYPE                   ControlType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_StatusCharaChanger_C>StatusCharaChanger                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::NewInit(class UUIStatusCtrlDataObjBase*& UIStatusData, E_UI_STATUS_CTRL_TYPE ControlType, TScriptInterface<class IBPI_StatusCharaChanger_C>& StatusCharaChanger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "NewInit");

	Params::BP_StatusUICtrl_C_NewInit Parms{};

	Parms.UIStatusData = UIStatusData;
	Parms.ControlType = ControlType;
	Parms.StatusCharaChanger = StatusCharaChanger;

	UObject::ProcessEvent(Func, &Parms);

	UIStatusData = Parms.UIStatusData;
	StatusCharaChanger = Parms.StatusCharaChanger;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.GetIsComplete
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsComplete                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::GetIsComplete(bool* IsComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "GetIsComplete");

	Params::BP_StatusUICtrl_C_GetIsComplete Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsComplete != nullptr)
		*IsComplete = Parms.IsComplete;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.EndViewStatus
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::EndViewStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "EndViewStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.StartViewStatus
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_StatusUICtrl_C::StartViewStatus(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "StartViewStatus");

	Params::BP_StatusUICtrl_C_StartViewStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_StatusUICtrl_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "ReceiveEndPlay");

	Params::BP_StatusUICtrl_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.private_AnimStart
// (BlueprintCallable, BlueprintEvent)

void ABP_StatusUICtrl_C::Private_AnimStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "private_AnimStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.private_InheritAnimStart
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::Private_InheritAnimStart(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "private_InheritAnimStart");

	Params::BP_StatusUICtrl_C_Private_InheritAnimStart Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatusUICtrl.BP_StatusUICtrl_C.ExecuteUbergraph_BP_StatusUICtrl
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StatusUICtrl_C::ExecuteUbergraph_BP_StatusUICtrl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatusUICtrl_C", "ExecuteUbergraph_BP_StatusUICtrl");

	Params::BP_StatusUICtrl_C_ExecuteUbergraph_BP_StatusUICtrl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

