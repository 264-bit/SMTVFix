#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleMain

#include "Basic.hpp"

#include "BattleMain_classes.hpp"
#include "BattleMain_parameters.hpp"


namespace SDK
{

// Function BattleMain.BattleMain_C.SetStepNone__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepNone__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepNone__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepNone__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepNone__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepNone__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepPre__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepPre__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepPre__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepPre__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepPre__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepPre__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepEncount__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepEncount__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepEncount__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepEncount__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepEncount__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepEncount__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepExit__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepExit__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepExit__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepExit__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepExit__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepExit__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepPreTurn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepPreTurn__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepPreTurn__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepPreTurn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepPreTurn__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepPreTurn__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepTurnEffect__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepTurnEffect__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepTurnEffect__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepTurnEffect__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepTurnEffect__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepTurnEffect__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepActionPre__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepActionPre__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepActionPre__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepActionPre__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepActionPre__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepActionPre__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepAction__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepAction__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepAction__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepAction__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepAction__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepAction__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepCheckEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepCheckEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepCheckEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepCheckEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepCheckEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepCheckEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepCheckTurn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepCheckTurn__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepCheckTurn__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepCheckTurn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepCheckTurn__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepCheckTurn__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepResult__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepResult__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepResult__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepResult__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepResult__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepResult__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepStartEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepStartEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepStartEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepStartEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepStartEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepStartEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepDebug_1__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepDebug_1__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepDebug_1__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepDebug_1__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepDebug_1__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepDebug_1__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepTurnStartEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepTurnStartEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepTurnStartEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepTurnStartEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepTurnStartEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepTurnStartEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepTurnEndEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepTurnEndEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepTurnEndEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepTurnEndEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepTurnEndEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepTurnEndEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepTurnEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepTurnEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepTurnEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepTurnEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepTurnEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepTurnEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepInochigoi__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepInochigoi__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepInochigoi__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepInochigoi__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepInochigoi__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepInochigoi__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepEndEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepEndEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepEndEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepEndEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepEndEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepEndEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepPost__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepPost__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepPost__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepPost__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepPost__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepPost__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepDebug2__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepDebug2__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepDebug2__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepDebug2__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepDebug2__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepDebug2__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepRenzoku__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepRenzoku__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepRenzoku__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepRenzoku__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepRenzoku__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepRenzoku__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepEscape__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepEscape__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepEscape__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepEscape__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepEscape__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepEscape__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepGameOver__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepGameOver__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepGameOver__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepGameOver__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepGameOver__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepGameOver__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ExecuteUbergraph_BattleMain
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::ExecuteUbergraph_BattleMain(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ExecuteUbergraph_BattleMain");

	Params::BattleMain_C_ExecuteUbergraph_BattleMain Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.Evt_SpawnSubActor
// (BlueprintCallable, BlueprintEvent)

void ABattleMain_C::Evt_SpawnSubActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "Evt_SpawnSubActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.OnWindowActivationChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::OnWindowActivationChanged(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "OnWindowActivationChanged");

	Params::BattleMain_C_OnWindowActivationChanged Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ReceiveEndPlay");

	Params::BattleMain_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetRenzokuEncount
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetRenzokuEncount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetRenzokuEncount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqRenzokuEncount
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqRenzokuEncount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqRenzokuEncount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_SeqStepFuncEnemyTurnStartReturn
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_SeqStepFuncEnemyTurnStartReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_SeqStepFuncEnemyTurnStartReturn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_SetStepFuncEnemyTurnStartReturn
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_SetStepFuncEnemyTurnStartReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_SetStepFuncEnemyTurnStartReturn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ReceiveTick");

	Params::BattleMain_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqTalkEndFriend
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqTalkEndFriend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqTalkEndFriend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetTalkEndFriend
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetTalkEndFriend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetTalkEndFriend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqEnemyTurnEndReturn
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqEnemyTurnEndReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqEnemyTurnEndReturn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetEnemyTurnEndReturn
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetEnemyTurnEndReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetEnemyTurnEndReturn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqTurnChange
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqTurnChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqTurnChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetTurnChange
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetTurnChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetTurnChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqMercyTalk
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqMercyTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqMercyTalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetMercyTalk
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetMercyTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetMercyTalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqInochigoi
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqInochigoi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqInochigoi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetInochigoi
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetInochigoi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetInochigoi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqUpliftingTurn
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqUpliftingTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqUpliftingTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetUpliftingTurn
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetUpliftingTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetUpliftingTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_DebugBattleOnlySetting
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_DebugBattleOnlySetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_DebugBattleOnlySetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqTurnEndEvent
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqTurnEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqTurnEndEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetTurnEndEvent
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetTurnEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetTurnEndEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqActionEvent
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqActionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqActionEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetActionEvent
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetActionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetActionEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetEnemyUplifting
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetEnemyUplifting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetEnemyUplifting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqEnemyUplifting
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqEnemyUplifting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqEnemyUplifting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABattleMain_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqTurnEnd
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqTurnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqTurnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetTurnEnd
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetTurnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetTurnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetCheckTurn
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetCheckTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetCheckTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqCheckTurn
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqCheckTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqCheckTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqCheckEnd
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqCheckEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqCheckEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetCheckEnd
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetCheckEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetCheckEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqPressPre
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqPressPre()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqPressPre");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetPressPre
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetPressPre()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetPressPre");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqTurnStartEvent
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqTurnStartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqTurnStartEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetTurnStartEvent
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetTurnStartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetTurnStartEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetEscape
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetEscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetEscape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqEscape
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqEscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqEscape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetEndEvent
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetEndEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqEndEvent
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqEndEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqActionAfter
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqActionAfter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqActionAfter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetActionAfter
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetActionAfter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetActionAfter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_TickCheckDebugMenu
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_TickCheckDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_TickCheckDebugMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_TickMainCalcAfter
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BP_TickMainCalcAfter(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_TickMainCalcAfter");

	Params::BattleMain_C_BP_TickMainCalcAfter Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetGameOver
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetGameOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqGameOver
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqGameOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqResult
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetResult
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqAction
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetAction
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqStartEvent
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqStartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqStartEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetStartEvent
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetStartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetStartEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqPre
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqPre()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqPre");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetPre
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetPre()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetPre");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqReady
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetReady
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_BattleSeqStart
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_BattleSeqStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_BattleSeqStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSeqActionPre
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSeqActionPre()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSeqActionPre");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_StepFuncSetActionPre
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_StepFuncSetActionPre()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_StepFuncSetActionPre");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_ActionPreActCheckBattleEnd
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_ActionPreActCheckBattleEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_ActionPreActCheckBattleEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_ActionPreActEndByBadStatusTask
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_ActionPreActEndByBadStatusTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_ActionPreActEndByBadStatusTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_ActionPreBadStatusCureTask
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_ActionPreBadStatusCureTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_ActionPreBadStatusCureTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_ActionPreCamChangeTask
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_ActionPreCamChangeTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_ActionPreCamChangeTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_ActionPreTaskWait
// (Event, Public, BlueprintEvent)

void ABattleMain_C::BP_ActionPreTaskWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_ActionPreTaskWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BP_CaptureBeforeResult
// (BlueprintCallable, BlueprintEvent)

void ABattleMain_C::BP_CaptureBeforeResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BP_CaptureBeforeResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.Evt_FinishBossRushField
// (BlueprintCallable, BlueprintEvent)

void ABattleMain_C::Evt_FinishBossRushField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "Evt_FinishBossRushField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.Evt_RenzokuEncountSceneCtrlFinished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::Evt_RenzokuEncountSceneCtrlFinished(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "Evt_RenzokuEncountSceneCtrlFinished");

	Params::BattleMain_C_Evt_RenzokuEncountSceneCtrlFinished Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.Evt_StartRenzokuEncount
// (BlueprintCallable, BlueprintEvent)

void ABattleMain_C::Evt_StartRenzokuEncount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "Evt_StartRenzokuEncount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.Evt_LoadRenzokuBattleField
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncountID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::Evt_LoadRenzokuBattleField(int32 EncountID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "Evt_LoadRenzokuBattleField");

	Params::BattleMain_C_Evt_LoadRenzokuBattleField Parms{};

	Parms.EncountID = EncountID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.DestroyBattle
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::DestroyBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DestroyBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABattleMain_C::OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3");

	Params::BattleMain_C_OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.OnLoaded_835A81AF4678BE6200179DA326564AD5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABattleMain_C::OnLoaded_835A81AF4678BE6200179DA326564AD5(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "OnLoaded_835A81AF4678BE6200179DA326564AD5");

	Params::BattleMain_C_OnLoaded_835A81AF4678BE6200179DA326564AD5 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.OnLoaded_21384D1541B55E375CB766960F4D5D72
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABattleMain_C::OnLoaded_21384D1541B55E375CB766960F4D5D72(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "OnLoaded_21384D1541B55E375CB766960F4D5D72");

	Params::BattleMain_C_OnLoaded_21384D1541B55E375CB766960F4D5D72 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.OnLoaded_57169B0B42D693905D24FCB1D48A2BBA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABattleMain_C::OnLoaded_57169B0B42D693905D24FCB1D48A2BBA(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "OnLoaded_57169B0B42D693905D24FCB1D48A2BBA");

	Params::BattleMain_C_OnLoaded_57169B0B42D693905D24FCB1D48A2BBA Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.Seq Step Pre Func
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::Seq_Step_Pre_Func()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "Seq Step Pre Func");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepRenzokuFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepRenzokuFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepRenzokuFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepRenzokuFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepRenzokuFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepRenzokuFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BattleStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBTL_DESC                        InDesc                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABattleMain_C::BattleStart(const struct FBTL_DESC& InDesc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BattleStart");

	Params::BattleMain_C_BattleStart Parms{};

	Parms.InDesc = std::move(InDesc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.ClearActionStack
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ClearActionStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ClearActionStack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepExitFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepExitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepExitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepExitFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepExitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepExitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.DestroySubActor
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::DestroySubActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DestroySubActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetBtlSubActorNum
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetBtlSubActorNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetBtlSubActorNum");

	Params::BattleMain_C_GetBtlSubActorNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetPartyAccessor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattlePartySystem_C*             RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetPartyAccessor(class UBattlePartySystem_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetPartyAccessor");

	Params::BattleMain_C_GetPartyAccessor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.SeqStepTestFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepTestFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepTestFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepTestFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepTestFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepTestFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepActionPreFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepActionPreFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepActionPreFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepActionPreFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepActionPreFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepActionPreFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.PushAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlActionStack                  InDesc                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void ABattleMain_C::PushAction(const struct FBtlActionStack& InDesc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "PushAction");

	Params::BattleMain_C_PushAction Parms{};

	Parms.InDesc = std::move(InDesc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.SetStepActionFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepActionFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepActionFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepActionFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepActionFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepActionFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.PopAction
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlActionStack                  RetValue                                               (Parm, OutParm)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::PopAction(struct FBtlActionStack* RetValue, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "PopAction");

	Params::BattleMain_C_PopAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BattleMain.BattleMain_C.CheckErrorActionAtack
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::CheckErrorActionAtack(int32 InValue, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckErrorActionAtack");

	Params::BattleMain_C_CheckErrorActionAtack Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetCharAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABattleCharAction_C*              RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetCharAction(bool* Success, class ABattleCharAction_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetCharAction");

	Params::BattleMain_C_GetCharAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetTaskFactory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleActionTaskFactory_C*       RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetTaskFactory(class UBattleActionTaskFactory_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetTaskFactory");

	Params::BattleMain_C_GetTaskFactory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.SetStepCheckEndFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepCheckEndFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepCheckEndFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepCheckEndFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepCheckEndFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepCheckEndFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckExistActionStack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::CheckExistActionStack(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckExistActionStack");

	Params::BattleMain_C_CheckExistActionStack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.SetCheckTurnFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetCheckTurnFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetCheckTurnFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqCheckTurnFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqCheckTurnFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqCheckTurnFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetCameraAccessor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABattleCamera_C*                  RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetCameraAccessor(class ABattleCamera_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetCameraAccessor");

	Params::BattleMain_C_GetCameraAccessor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetRandom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetRandom(int32 Max, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetRandom");

	Params::BattleMain_C_GetRandom Parms{};

	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.SetStepResultFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepResultFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepResultFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepResultFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepResultFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepResultFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetTalkResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_TALK_RET                          RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetTalkResult(E_BTL_TALK_RET* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetTalkResult");

	Params::BattleMain_C_GetTalkResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.SetEndType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_END                               Param_M_EndType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::SetEndType(E_BTL_END Param_M_EndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetEndType");

	Params::BattleMain_C_SetEndType Parms{};

	Parms.Param_M_EndType = Param_M_EndType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.GetEndType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_END                               RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetEndType(E_BTL_END* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetEndType");

	Params::BattleMain_C_GetEndType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetRandom2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetRandom2(int32 Min, int32 Max, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetRandom2");

	Params::BattleMain_C_GetRandom2 Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetRandomF
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetRandomF(float Max, float* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetRandomF");

	Params::BattleMain_C_GetRandomF Parms{};

	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetRandomF2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetRandomF2(float Min, float Max, float* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetRandomF2");

	Params::BattleMain_C_GetRandomF2 Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetCurrentCameraTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABattleMain_C::GetCurrentCameraTransform(struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetCurrentCameraTransform");

	Params::BattleMain_C_GetCurrentCameraTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.GetTurnActValidNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetTurnActValidNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetTurnActValidNum");

	Params::BattleMain_C_GetTurnActValidNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetCharActionFactory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleCharActionFactory_C*       RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetCharActionFactory(class UBattleCharActionFactory_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetCharActionFactory");

	Params::BattleMain_C_GetCharActionFactory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetAICommand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleAICommand_C*               RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetAICommand(class UBattleAICommand_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetAICommand");

	Params::BattleMain_C_GetAICommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetCalc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleCalc_C*                    RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetCalc(class UBattleCalc_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetCalc");

	Params::BattleMain_C_GetCalc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetTargetSelect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleTargetSelect_C*            Param_BattleTargetSelect                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetTargetSelect(class UBattleTargetSelect_C** Param_BattleTargetSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetTargetSelect");

	Params::BattleMain_C_GetTargetSelect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_BattleTargetSelect != nullptr)
		*Param_BattleTargetSelect = Parms.Param_BattleTargetSelect;
}


// Function BattleMain.BattleMain_C.SetStepStartEventFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepStartEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepStartEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepStartEventFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepStartEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepStartEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepTurnStartEventFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepTurnStartEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepTurnStartEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepTurnStartEventFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepTurnStartEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepTurnStartEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepInochigoiFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepInochigoiFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepInochigoiFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepInochigoiFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepInochigoiFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepInochigoiFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepEndEventFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepEndEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepEndEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepEndEventFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepEndEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepEndEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetDbgHitParc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetDbgHitParc(bool IsPlayer, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetDbgHitParc");

	Params::BattleMain_C_GetDbgHitParc Parms{};

	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetDbgCriticalParc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<uint8>                           RetValue                                               (Parm, OutParm)

void ABattleMain_C::GetDbgCriticalParc(bool IsPlayer, TArray<uint8>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetDbgCriticalParc");

	Params::BattleMain_C_GetDbgCriticalParc Parms{};

	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.GetDbgCriticalBaseParc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetDbgCriticalBaseParc(bool IsPlayer, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetDbgCriticalBaseParc");

	Params::BattleMain_C_GetDbgCriticalBaseParc Parms{};

	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.SetKuiUsedList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlParty                        InParty                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// E_KUISHIBARI_LEVEL                      Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::SetKuiUsedList(const struct FBtlParty& InParty, E_KUISHIBARI_LEVEL Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetKuiUsedList");

	Params::BattleMain_C_SetKuiUsedList Parms{};

	Parms.InParty = std::move(InParty);
	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.CheckKuiUsedList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FBtlParty                        InParty                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// E_KUISHIBARI_LEVEL                      Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::CheckKuiUsedList(const struct FBtlParty& InParty, E_KUISHIBARI_LEVEL Level, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckKuiUsedList");

	Params::BattleMain_C_CheckKuiUsedList Parms{};

	Parms.InParty = std::move(InParty);
	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.DelKuiUsedListHP1gift
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::DelKuiUsedListHP1gift(bool IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DelKuiUsedListHP1gift");

	Params::BattleMain_C_DelKuiUsedListHP1gift Parms{};

	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.SetEnemyKillList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EnemyID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::SetEnemyKillList(int32 EnemyID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetEnemyKillList");

	Params::BattleMain_C_SetEnemyKillList Parms{};

	Parms.EnemyID = EnemyID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.AddResultData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlParty                        InParty                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABattleMain_C::AddResultData(const struct FBtlParty& InParty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "AddResultData");

	Params::BattleMain_C_AddResultData Parms{};

	Parms.InParty = std::move(InParty);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.CheckBattleEnd
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_END                               RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::CheckBattleEnd(E_BTL_END* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckBattleEnd");

	Params::BattleMain_C_CheckBattleEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetCharActionForPartyIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABattleCharAction_C*              RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetCharActionForPartyIndex(int32 PartyIndex, class ABattleCharAction_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetCharActionForPartyIndex");

	Params::BattleMain_C_GetCharActionForPartyIndex Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetOriginTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABattleMain_C::GetOriginTransform(struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetOriginTransform");

	Params::BattleMain_C_GetOriginTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.GetCamActorFactory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleCamActorFactory_C*         RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetCamActorFactory(class UBattleCamActorFactory_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetCamActorFactory");

	Params::BattleMain_C_GetCamActorFactory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.PrintExistTask
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::PrintExistTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "PrintExistTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetEffectManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleEffectManager_C*           RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetEffectManager(class UBattleEffectManager_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetEffectManager");

	Params::BattleMain_C_GetEffectManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.RemoveBattleUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::RemoveBattleUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "RemoveBattleUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.AddAIFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   In_Value                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::AddAIFlag(uint8 In_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "AddAIFlag");

	Params::BattleMain_C_AddAIFlag Parms{};

	Parms.In_Value = In_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.CheckAIFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   In_Value                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret_Value                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::CheckAIFlag(uint8 In_Value, bool* Ret_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckAIFlag");

	Params::BattleMain_C_CheckAIFlag Parms{};

	Parms.In_Value = In_Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Value != nullptr)
		*Ret_Value = Parms.Ret_Value;
}


// Function BattleMain.BattleMain_C.DelAIFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   In_Value                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::DelAIFlag(uint8 In_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DelAIFlag");

	Params::BattleMain_C_DelAIFlag Parms{};

	Parms.In_Value = In_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.ClearAIFlag
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ClearAIFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ClearAIFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetNowTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetNowTurn(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetNowTurn");

	Params::BattleMain_C_GetNowTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.GetBattleResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleResult_C*                  Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetBattleResult(class UBattleResult_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetBattleResult");

	Params::BattleMain_C_GetBattleResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BattleMain.BattleMain_C.IsDebugMenuOpen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::IsDebugMenuOpen(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "IsDebugMenuOpen");

	Params::BattleMain_C_IsDebugMenuOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.ClearDebugMenu
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ClearDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ClearDebugMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenu
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyAvoid
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuEnemyAvoid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuEnemyAvoid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerAvoid
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuPlayerAvoid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuPlayerAvoid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyDamage0
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuEnemyDamage0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuEnemyDamage0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerDamage0
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuPlayerDamage0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuPlayerDamage0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuDamageMax
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuDamageMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuDamageMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetSkillInfoMess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWB_BtlInfoMess_C*                RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetSkillInfoMess(class UWB_BtlInfoMess_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetSkillInfoMess");

	Params::BattleMain_C_GetSkillInfoMess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.SetStepEscapeFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepEscapeFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepEscapeFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepEscapeFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepEscapeFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepEscapeFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepGameOverFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepGameOverFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepGameOverFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepGameOverFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepGameOverFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepGameOverFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyBad0
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuEnemyBad0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuEnemyBad0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyBad100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuEnemyBad100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuEnemyBad100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerBad0
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuPlayerBad0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuPlayerBad0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerBad100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuPlayerBad100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuPlayerBad100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SpawnDebugObj
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SpawnDebugObj()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SpawnDebugObj");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.RemoveDebugObj
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::RemoveDebugObj()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "RemoveDebugObj");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuNumPartyIndex
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuNumPartyIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuNumPartyIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyCritical
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuEnemyCritical()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuEnemyCritical");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerCritical
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuPlayerCritical()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuPlayerCritical");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.DebugFrameWork
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::DebugFrameWork(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DebugFrameWork");

	Params::BattleMain_C_DebugFrameWork Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuPartnerAct100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuPartnerAct100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuPartnerAct100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuLogOn
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuLogOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuLogOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuSetMagGauge
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuSetMagGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuSetMagGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BattleLog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABattleMain_C::BattleLog(const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BattleLog");

	Params::BattleMain_C_BattleLog Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.UpDateBattleTempo
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::UpDateBattleTempo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "UpDateBattleTempo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyHit100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuEnemyHit100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuEnemyHit100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerHit100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuPlayerHit100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuPlayerHit100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuPartyParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuPartyParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuPartyParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetPostProcessCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattlePostProcessCtrl_C*         Param_BattlePostProcessCtrl                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetPostProcessCtrl(class UBattlePostProcessCtrl_C** Param_BattlePostProcessCtrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetPostProcessCtrl");

	Params::BattleMain_C_GetPostProcessCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_BattlePostProcessCtrl != nullptr)
		*Param_BattlePostProcessCtrl = Parms.Param_BattlePostProcessCtrl;
}


// Function BattleMain.BattleMain_C.CheckDebugMenuInochigoi100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuInochigoi100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuInochigoi100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetSaveTargetIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::SetSaveTargetIndex(int32 PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetSaveTargetIndex");

	Params::BattleMain_C_SetSaveTargetIndex Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.GetSaveTargetIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetSaveTargetIndex(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetSaveTargetIndex");

	Params::BattleMain_C_GetSaveTargetIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.ClearSaveTargetIndex
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ClearSaveTargetIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ClearSaveTargetIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.EndSaveHeroType
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::EndSaveHeroType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "EndSaveHeroType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.AddResultDataForTalk
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlParty                        InParty                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABattleMain_C::AddResultDataForTalk(const struct FBtlParty& InParty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "AddResultDataForTalk");

	Params::BattleMain_C_AddResultDataForTalk Parms{};

	Parms.InParty = std::move(InParty);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.GetSoundManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleSoundManager_C*            Param_BattleSoundManager                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetSoundManager(class UBattleSoundManager_C** Param_BattleSoundManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetSoundManager");

	Params::BattleMain_C_GetSoundManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_BattleSoundManager != nullptr)
		*Param_BattleSoundManager = Parms.Param_BattleSoundManager;
}


// Function BattleMain.BattleMain_C.MakeRenzokuBattle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEvent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class ACharaBase_C*>             MemberUnitList                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::MakeRenzokuBattle(int32 EncID, bool IsEvent, TArray<class ACharaBase_C*>& MemberUnitList, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "MakeRenzokuBattle");

	Params::BattleMain_C_MakeRenzokuBattle Parms{};

	Parms.EncID = EncID;
	Parms.IsEvent = IsEvent;
	Parms.MemberUnitList = std::move(MemberUnitList);

	UObject::ProcessEvent(Func, &Parms);

	MemberUnitList = std::move(Parms.MemberUnitList);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BattleUISwitch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IncludeMoonAge                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BattleUISwitch(bool Sw, bool IncludeMoonAge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BattleUISwitch");

	Params::BattleMain_C_BattleUISwitch Parms{};

	Parms.Sw = Sw;
	Parms.IncludeMoonAge = IncludeMoonAge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.ClearSummonList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ClearSummonList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ClearSummonList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetSummonDevilID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SummonPosID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::SetSummonDevilID(int32 DevilID, int32 SummonPosID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetSummonDevilID");

	Params::BattleMain_C_SetSummonDevilID Parms{};

	Parms.DevilID = DevilID;
	Parms.SummonPosID = SummonPosID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.GetSummonList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FBtlSummonData>           RetValue                                               (Parm, OutParm)

void ABattleMain_C::GetSummonList(TArray<struct FBtlSummonData>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetSummonList");

	Params::BattleMain_C_GetSummonList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.SetSummonPartyIndex
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ArrayIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::SetSummonPartyIndex(int32 ArrayIndex, int32 PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetSummonPartyIndex");

	Params::BattleMain_C_SetSummonPartyIndex Parms{};

	Parms.ArrayIndex = ArrayIndex;
	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.SetSummonTaskID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ArrayIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TaskID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::SetSummonTaskID(int32 ArrayIndex, int32 TaskID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetSummonTaskID");

	Params::BattleMain_C_SetSummonTaskID Parms{};

	Parms.ArrayIndex = ArrayIndex;
	Parms.TaskID = TaskID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.SetSaveCommandPage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_UI_COMM_STEP                      Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::SetSaveCommandPage(E_BTL_UI_COMM_STEP Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetSaveCommandPage");

	Params::BattleMain_C_SetSaveCommandPage Parms{};

	Parms.Command = Command;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.GetSaveCommandPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_UI_COMM_STEP                      RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetSaveCommandPage(E_BTL_UI_COMM_STEP* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetSaveCommandPage");

	Params::BattleMain_C_GetSaveCommandPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.ClearSaveCommandPage
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ClearSaveCommandPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ClearSaveCommandPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetAIValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   In_Value                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::SetAIValue(int32 In_Value, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetAIValue");

	Params::BattleMain_C_SetAIValue Parms{};

	Parms.In_Value = In_Value;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.DelAIValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::DelAIValue(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DelAIValue");

	Params::BattleMain_C_DelAIValue Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.ClearAIValueAll
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ClearAIValueAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ClearAIValueAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetAIValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetAIValue(int32 Param_Index, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetAIValue");

	Params::BattleMain_C_GetAIValue Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.CheckDebugMenuEscapeSuccess
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuEscapeSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuEscapeSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuEscapeFail
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuEscapeFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuEscapeFail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetCharActionNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetCharActionNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetCharActionNum");

	Params::BattleMain_C_GetCharActionNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.EventWaitSeq
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_STEP                              Step                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::EventWaitSeq(E_BTL_STEP Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "EventWaitSeq");

	Params::BattleMain_C_EventWaitSeq Parms{};

	Parms.Step = Step;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.IsBattleLogON
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Ret_Value                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::IsBattleLogON(bool* Ret_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "IsBattleLogON");

	Params::BattleMain_C_IsBattleLogON Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret_Value != nullptr)
		*Ret_Value = Parms.Ret_Value;
}


// Function BattleMain.BattleMain_C.CheckDebugMenuCriticalCnt
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuCriticalCnt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuCriticalCnt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuOnlyMyTurn
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuOnlyMyTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuOnlyMyTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.IsGameOver
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::IsGameOver(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "IsGameOver");

	Params::BattleMain_C_IsGameOver Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.SetAutoBattleValid
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetAutoBattleValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetAutoBattleValid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenu_Close
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenu_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenu_Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuPartyParam_Close
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuPartyParam_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuPartyParam_Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.DebugChangeUnit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::DebugChangeUnit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DebugChangeUnit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckRenzokuBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::CheckRenzokuBattle(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckRenzokuBattle");

	Params::BattleMain_C_CheckRenzokuBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.CheckDebugMenuFreeEnemy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuFreeEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuFreeEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ApplyDebugMenuTask
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ApplyDebugMenuTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ApplyDebugMenuTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.DebugTimeStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::DebugTimeStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DebugTimeStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.DebugTimeEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::DebugTimeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DebugTimeEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.DebugJsonLog
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSkillActionDesc                 InDesc                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsCounter                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::DebugJsonLog(const struct FSkillActionDesc& InDesc, bool IsCounter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DebugJsonLog");

	Params::BattleMain_C_DebugJsonLog Parms{};

	Parms.InDesc = std::move(InDesc);
	Parms.IsCounter = IsCounter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.DebugJsonLogTalkSuccess
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::DebugJsonLogTalkSuccess(int32 DevilID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "DebugJsonLogTalkSuccess");

	Params::BattleMain_C_DebugJsonLogTalkSuccess Parms{};

	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.CheckDebugFovyOverride
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugFovyOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugFovyOverride");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ActionPreCamTask
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ActionPreCamTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ActionPreCamTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ActionPrevTaskWait
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ActionPrevTaskWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ActionPrevTaskWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ActionPrevBadStatusCureTask
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ActionPrevBadStatusCureTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ActionPrevBadStatusCureTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ActionPrevActEndTask
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ActionPrevActEndTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ActionPrevActEndTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepActionAfterFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepActionAfterFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepActionAfterFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepActionAfterFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepActionAfterFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepActionAfterFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ActionPrevCheckBattleEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ActionPrevCheckBattleEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ActionPrevCheckBattleEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.MatchToBattleCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::MatchToBattleCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "MatchToBattleCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetEventSubLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetEventSubLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetEventSubLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuActOrderOn
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuActOrderOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuActOrderOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuCommandUIChange
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuCommandUIChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuCommandUIChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuForceParty
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuForceParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuForceParty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuCycleLogOn
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuCycleLogOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuCycleLogOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.UpdatePartyPanelData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::UpdatePartyPanelData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "UpdatePartyPanelData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ChangeActorPartyPanel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IntActiveIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::ChangeActorPartyPanel(int32 IntActiveIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ChangeActorPartyPanel");

	Params::BattleMain_C_ChangeActorPartyPanel Parms{};

	Parms.IntActiveIndex = IntActiveIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.ToCommandBox
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ToCommandBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ToCommandBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ActionPrevUpdateUnit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ActionPrevUpdateUnit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ActionPrevUpdateUnit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetDebugUseSkillID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetDebugUseSkillID(int32 PartyIndex, int32* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetDebugUseSkillID");

	Params::BattleMain_C_GetDebugUseSkillID Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BattleMain.BattleMain_C.CheckDebugMenuNoCostOn
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuNoCostOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuNoCostOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetBattleField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleField_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::GetBattleField(TScriptInterface<class IBPI_BattleField_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetBattleField");

	Params::BattleMain_C_GetBattleField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.CheckDebugMenuDrawUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuDrawUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuDrawUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuFieldEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuFieldEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuFieldEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepTurnEndEventFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepTurnEndEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepTurnEndEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CastToCharaBaseList
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>>BPI_List                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class ACharaBase_C*>             Actor_List                                             (Parm, OutParm)

void ABattleMain_C::CastToCharaBaseList(TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>>& BPI_List, TArray<class ACharaBase_C*>* Actor_List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CastToCharaBaseList");

	Params::BattleMain_C_CastToCharaBaseList Parms{};

	Parms.BPI_List = std::move(BPI_List);

	UObject::ProcessEvent(Func, &Parms);

	BPI_List = std::move(Parms.BPI_List);

	if (Actor_List != nullptr)
		*Actor_List = std::move(Parms.Actor_List);
}


// Function BattleMain.BattleMain_C.SeqStepTurnEndEventFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepTurnEndEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepTurnEndEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepPressPreFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepPressPreFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepPressPreFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepPressPreFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepPressPreFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepPressPreFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepTurnEndFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepTurnEndFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepTurnEndFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepTurnEndFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepTurnEndFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepTurnEndFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.AddDrawPressIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::AddDrawPressIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "AddDrawPressIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenu2NoPress
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenu2NoPress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenu2NoPress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugBattleSpeedOverride
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugBattleSpeedOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugBattleSpeedOverride");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugPlayerUpliftingGauge
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugPlayerUpliftingGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugPlayerUpliftingGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugEnemyUpliftingGauge
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugEnemyUpliftingGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugEnemyUpliftingGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.GetParticleManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBattleParticleManager_C*         ParticleManager                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::GetParticleManager(class UBattleParticleManager_C** ParticleManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GetParticleManager");

	Params::BattleMain_C_GetParticleManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ParticleManager != nullptr)
		*ParticleManager = Parms.ParticleManager;
}


// Function BattleMain.BattleMain_C.CheckDebugMenuAllReflex
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuAllReflex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuAllReflex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuAllAbsorb
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuAllAbsorb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuAllAbsorb");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuAllBlock
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuAllBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuAllBlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepEnemyUpliftingFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepEnemyUpliftingFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepEnemyUpliftingFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepEnemyUpliftingFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepEnemyUpliftingFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepEnemyUpliftingFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepActionEventFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepActionEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepActionEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepActionEventFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepActionEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepActionEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuNoDamage
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuNoDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuNoDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuAllSkill
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuAllSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuAllSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugExpRate
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugExpRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugExpRate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMakkaRate
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMakkaRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMakkaRate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerFirst
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuPlayerFirst()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuPlayerFirst");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyFirst
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuEnemyFirst()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuEnemyFirst");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuCanUseRecome
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuCanUseRecome()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuCanUseRecome");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuCharm
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuCharm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuCharm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuConfuse
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuConfuse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuConfuse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuNotCureBstTimeout
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuNotCureBstTimeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuNotCureBstTimeout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuMercyTalk100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuMercyTalk100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuMercyTalk100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepUpliftingTurnFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepUpliftingTurnFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepUpliftingTurnFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepUpliftingTurnFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepUpliftingTurnFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepUpliftingTurnFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepMercyTalkFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepMercyTalkFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepMercyTalkFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepMercyTalkFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepMercyTalkFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepMercyTalkFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.TakeOverCameraFromCurrent
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::TakeOverCameraFromCurrent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "TakeOverCameraFromCurrent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepTurnChange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepTurnChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepTurnChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepTurnChange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepTurnChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepTurnChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepEnemyTurnEndReturnFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepEnemyTurnEndReturnFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepEnemyTurnEndReturnFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepEnemyTurnEndReturnFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepEnemyTurnEndReturnFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepEnemyTurnEndReturnFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuItemDropLoop100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuItemDropLoop100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuItemDropLoop100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuParameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Pass                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::CheckDebugMenuParameter(const class FString& Pass, int32 PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuParameter");

	Params::BattleMain_C_CheckDebugMenuParameter Parms{};

	Parms.Pass = std::move(Pass);
	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Pass                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::CheckDebugMenuLevel(const class FString& Pass, int32 PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuLevel");

	Params::BattleMain_C_CheckDebugMenuLevel Parms{};

	Parms.Pass = std::move(Pass);
	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuResultSkip
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuResultSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuResultSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuBstHitLoop100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuBstHitLoop100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuBstHitLoop100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.AddResultDataFujimi
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::AddResultDataFujimi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "AddResultDataFujimi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepTalkEndFriendFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepTalkEndFriendFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepTalkEndFriendFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepTalkEndFriendFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepTalkEndFriendFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepTalkEndFriendFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuAllUseSkill
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuAllUseSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuAllUseSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.ReadyDebugMenu
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::ReadyDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "ReadyDebugMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SetStepEnemyTurnStartReturnFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SetStepEnemyTurnStartReturnFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SetStepEnemyTurnStartReturnFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SeqStepEnemyTurnStartReturnFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SeqStepEnemyTurnStartReturnFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SeqStepEnemyTurnStartReturnFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuNoDamageOnlyHero
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuNoDamageOnlyHero()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuNoDamageOnlyHero");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuNoUpliftingGauge
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuNoUpliftingGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuNoUpliftingGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CalcStatusListEnemyOrder
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           PartyIndex                                             (Parm, OutParm)

void ABattleMain_C::CalcStatusListEnemyOrder(TArray<int32>* PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CalcStatusListEnemyOrder");

	Params::BattleMain_C_CalcStatusListEnemyOrder Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PartyIndex != nullptr)
		*PartyIndex = std::move(Parms.PartyIndex);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuCounter100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuCounter100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuCounter100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.BattleMainUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BattleMainUpdate(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BattleMainUpdate");

	Params::BattleMain_C_BattleMainUpdate Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuAutoLogOn
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuAutoLogOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuAutoLogOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuForceEncount
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuForceEncount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuForceEncount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuNotForceEncount
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuNotForceEncount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuNotForceEncount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuRenzokuEncountID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::CheckDebugMenuRenzokuEncountID(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuRenzokuEncountID");

	Params::BattleMain_C_CheckDebugMenuRenzokuEncountID Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.SettingMagatsuhiDevilData
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SettingMagatsuhiDevilData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SettingMagatsuhiDevilData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.MakeUniqueSkillInfoMess
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// E_SKILL_INFO_MESS_TIMING                Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::MakeUniqueSkillInfoMess(TArray<int32>& WaitTaskList, E_SKILL_INFO_MESS_TIMING Timing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "MakeUniqueSkillInfoMess");

	Params::BattleMain_C_MakeUniqueSkillInfoMess Parms{};

	Parms.WaitTaskList = std::move(WaitTaskList);
	Parms.Timing = Timing;

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskList = std::move(Parms.WaitTaskList);
}


// Function BattleMain.BattleMain_C.Unique Skill Turn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTurnStart                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::Unique_Skill_Turn(bool IsTurnStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "Unique Skill Turn");

	Params::BattleMain_C_Unique_Skill_Turn Parms{};

	Parms.IsTurnStart = IsTurnStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuForceChallengeMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuForceChallengeMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuForceChallengeMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.SettingStealSkillData
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::SettingStealSkillData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "SettingStealSkillData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuProvoke100
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuProvoke100()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuProvoke100");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuSkillSelectIcon
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuSkillSelectIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuSkillSelectIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.UniqueSkill_ActionEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAllAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsDeadOnly                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ReserveDeadPartyIndex                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::UniqueSkill_ActionEnd(bool IsAllAction, bool IsDeadOnly, int32 ReserveDeadPartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "UniqueSkill_ActionEnd");

	Params::BattleMain_C_UniqueSkill_ActionEnd Parms{};

	Parms.IsAllAction = IsAllAction;
	Parms.IsDeadOnly = IsDeadOnly;
	Parms.ReserveDeadPartyIndex = ReserveDeadPartyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuNoDeath
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuNoDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuNoDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuCancelBadStatusTutorial
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuCancelBadStatusTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuCancelBadStatusTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.CheckDebugMenuAIProgramLog
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleMain_C::CheckDebugMenuAIProgramLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "CheckDebugMenuAIProgramLog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleMain.BattleMain_C.MakeKamuiIhuInfoMess
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABattleMain_C::MakeKamuiIhuInfoMess(TArray<int32>& WaitTaskList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "MakeKamuiIhuInfoMess");

	Params::BattleMain_C_MakeKamuiIhuInfoMess Parms{};

	Parms.WaitTaskList = std::move(WaitTaskList);

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskList = std::move(Parms.WaitTaskList);
}


// Function BattleMain.BattleMain_C.IsExistUniqueSkill
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<int32>                           DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// E_AUTO_SKILL_EXTRA_EFFECT               SkillExtraEffect                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Exsit                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::IsExistUniqueSkill(TArray<int32>& DevilID, E_AUTO_SKILL_EXTRA_EFFECT SkillExtraEffect, bool* Exsit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "IsExistUniqueSkill");

	Params::BattleMain_C_IsExistUniqueSkill Parms{};

	Parms.DevilID = std::move(DevilID);
	Parms.SkillExtraEffect = SkillExtraEffect;

	UObject::ProcessEvent(Func, &Parms);

	DevilID = std::move(Parms.DevilID);

	if (Exsit != nullptr)
		*Exsit = Parms.Exsit;
}


// Function BattleMain.BattleMain_C.IsWhiteOutFinishBlow
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABattleMain_C::IsWhiteOutFinishBlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "IsWhiteOutFinishBlow");

	Params::BattleMain_C_IsWhiteOutFinishBlow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattleMain.BattleMain_C.BI_GetPartySystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleParty_C>Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetPartySystem(TScriptInterface<class IBPI_BattleParty_C>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetPartySystem");

	Params::BattleMain_C_BI_GetPartySystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_BattleLog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BattleLog(const class FString& String, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BattleLog");

	Params::BattleMain_C_BI_BattleLog Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_IsBattleLogOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_IsBattleLogOn(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_IsBattleLogOn");

	Params::BattleMain_C_BI_IsBattleLogOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetTurnActValidNum
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetTurnActValidNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetTurnActValidNum");

	Params::BattleMain_C_BI_GetTurnActValidNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SetBattleCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetBattleCamera(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetBattleCamera");

	Params::BattleMain_C_BI_SetBattleCamera Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetBattleCameraFieldOfView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetBattleCameraFieldOfView(float* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetBattleCameraFieldOfView");

	Params::BattleMain_C_BI_GetBattleCameraFieldOfView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetBattleCameraTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetBattleCameraTransform(struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetBattleCameraTransform");

	Params::BattleMain_C_BI_GetBattleCameraTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_TurnDrawWidgetSetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_TurnDrawWidgetSetVisibility(ESlateVisibility Value, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TurnDrawWidgetSetVisibility");

	Params::BattleMain_C_BI_TurnDrawWidgetSetVisibility Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_PartyPanelSetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_PartyPanelSetVisibility(ESlateVisibility Value, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_PartyPanelSetVisibility");

	Params::BattleMain_C_BI_PartyPanelSetVisibility Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UICommandStartSeq
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCounterActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_BTL_UI_COMM_STEP                      Step                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TopIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_WIDGET_PRIO                           Prio                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCameraNoMove                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FSkillCriticalValueOne>   SettleCriticalInfo                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UICommandStartSeq(int32 PartyIndex, bool IsCounterActor, E_BTL_UI_COMM_STEP Step, int32 CallIndex, int32 TopIndex, E_WIDGET_PRIO Prio, bool IsCameraNoMove, TArray<struct FSkillCriticalValueOne>& SettleCriticalInfo, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UICommandStartSeq");

	Params::BattleMain_C_BI_UICommandStartSeq Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.IsCounterActor = IsCounterActor;
	Parms.Step = Step;
	Parms.CallIndex = CallIndex;
	Parms.TopIndex = TopIndex;
	Parms.Prio = Prio;
	Parms.IsCameraNoMove = IsCameraNoMove;
	Parms.SettleCriticalInfo = std::move(SettleCriticalInfo);

	UObject::ProcessEvent(Func, &Parms);

	SettleCriticalInfo = std::move(Parms.SettleCriticalInfo);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UICommandIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UICommandIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UICommandIsFinished");

	Params::BattleMain_C_BI_UICommandIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UICommandGetResult
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlCommand                      RetValue                                               (Parm, OutParm)

void ABattleMain_C::BI_UICommandGetResult(struct FBtlCommand* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UICommandGetResult");

	Params::BattleMain_C_BI_UICommandGetResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_UICommandRemove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UICommandRemove(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UICommandRemove");

	Params::BattleMain_C_BI_UICommandRemove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UICommandEndSeq
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UICommandEndSeq(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UICommandEndSeq");

	Params::BattleMain_C_BI_UICommandEndSeq Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UICommandGetSkillMenuCursor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CursorIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TopIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_UICommandGetSkillMenuCursor(int32* CursorIndex, int32* TopIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UICommandGetSkillMenuCursor");

	Params::BattleMain_C_BI_UICommandGetSkillMenuCursor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CursorIndex != nullptr)
		*CursorIndex = Parms.CursorIndex;

	if (TopIndex != nullptr)
		*TopIndex = Parms.TopIndex;
}


// Function BattleMain.BattleMain_C.BI_UICommandGetItemMenuCursor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CursorIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TopIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_UICommandGetItemMenuCursor(int32* CursorIndex, int32* TopIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UICommandGetItemMenuCursor");

	Params::BattleMain_C_BI_UICommandGetItemMenuCursor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CursorIndex != nullptr)
		*CursorIndex = Parms.CursorIndex;

	if (TopIndex != nullptr)
		*TopIndex = Parms.TopIndex;
}


// Function BattleMain.BattleMain_C.BI_GetCalcMakeBstArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InBst                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<E_BAD_STATUS>                    RetValue                                               (Parm, OutParm)

void ABattleMain_C::BI_GetCalcMakeBstArray(int32 InBst, TArray<E_BAD_STATUS>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetCalcMakeBstArray");

	Params::BattleMain_C_BI_GetCalcMakeBstArray Parms{};

	Parms.InBst = InBst;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_SetBattleCameraSkillCam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetBattleCameraSkillCam(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetBattleCameraSkillCam");

	Params::BattleMain_C_BI_SetBattleCameraSkillCam Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SetBattleCameraHome
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetBattleCameraHome(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetBattleCameraHome");

	Params::BattleMain_C_BI_SetBattleCameraHome Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SetPartyPanelEmpty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetPartyPanelEmpty(int32 Param_Index, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetPartyPanelEmpty");

	Params::BattleMain_C_BI_SetPartyPanelEmpty Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_CamFactorySpawnRailActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_CAM_TYPE                          CamType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_RailActor_C*                  RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_CamFactorySpawnRailActor(E_BTL_CAM_TYPE CamType, int32 PartyIndex, class ABP_RailActor_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_CamFactorySpawnRailActor");

	Params::BattleMain_C_BI_CamFactorySpawnRailActor Parms{};

	Parms.CamType = CamType;
	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_IsBattleCameraInterp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_IsBattleCameraInterp(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_IsBattleCameraInterp");

	Params::BattleMain_C_BI_IsBattleCameraInterp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_IsBattleCameraRailArrived
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_IsBattleCameraRailArrived(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_IsBattleCameraRailArrived");

	Params::BattleMain_C_BI_IsBattleCameraRailArrived Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SetBattleCameraTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   blendSpeed                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetBattleCameraTarget(const struct FVector& Target, float blendSpeed, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetBattleCameraTarget");

	Params::BattleMain_C_BI_SetBattleCameraTarget Parms{};

	Parms.Target = std::move(Target);
	Parms.blendSpeed = blendSpeed;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UITurnDrawIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UITurnDrawIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UITurnDrawIsFinished");

	Params::BattleMain_C_BI_UITurnDrawIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SetBattleCameraFovy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Fovy                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Blend                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetBattleCameraFovy(float Fovy, float Blend, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetBattleCameraFovy");

	Params::BattleMain_C_BI_SetBattleCameraFovy Parms{};

	Parms.Fovy = Fovy;
	Parms.Blend = Blend;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_CamFactorySpawnRailActorSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TargetPartyIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_SKILL_CAM_TYPE                    Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   ActorIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsConsiderActorLocation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsOverrideHokanSpeed                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHokanSpeedMax                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DoNotResetUnitAveLocation                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_CamFactorySpawnRailActorSkill(int32 TargetPartyIndex, E_BTL_SKILL_CAM_TYPE Type, const class FString& Param_Name, int32 ActorIndex, bool IsConsiderActorLocation, bool IsOverrideHokanSpeed, bool IsHokanSpeedMax, bool DoNotResetUnitAveLocation, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_CamFactorySpawnRailActorSkill");

	Params::BattleMain_C_BI_CamFactorySpawnRailActorSkill Parms{};

	Parms.TargetPartyIndex = TargetPartyIndex;
	Parms.Type = Type;
	Parms.Param_Name = std::move(Param_Name);
	Parms.ActorIndex = ActorIndex;
	Parms.IsConsiderActorLocation = IsConsiderActorLocation;
	Parms.IsOverrideHokanSpeed = IsOverrideHokanSpeed;
	Parms.IsHokanSpeedMax = IsHokanSpeedMax;
	Parms.DoNotResetUnitAveLocation = DoNotResetUnitAveLocation;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BattleMain.BattleMain_C.BI_SetBattleCameraShake
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           InShakeClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetBattleCameraShake(class UClass* InShakeClass, bool Sw, float Scale, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetBattleCameraShake");

	Params::BattleMain_C_BI_SetBattleCameraShake Parms{};

	Parms.InShakeClass = InShakeClass;
	Parms.Sw = Sw;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_PartyPanelCtrl
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_PANEL_CTRL                        Ctrl                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Value2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_PartyPanelCtrl(int32 PartyIndex, E_BTL_PANEL_CTRL Ctrl, int32 Value, bool Value2, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_PartyPanelCtrl");

	Params::BattleMain_C_BI_PartyPanelCtrl Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Ctrl = Ctrl;
	Parms.Value = Value;
	Parms.Value2 = Value2;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_PartyPanelUpDataChara_BtlPartyData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlParty                        PartyData                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    InOptionCheck                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_PartyPanelUpDataChara_BtlPartyData(const struct FBtlParty& PartyData, bool InOptionCheck, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_PartyPanelUpDataChara_BtlPartyData");

	Params::BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData Parms{};

	Parms.PartyData = std::move(PartyData);
	Parms.InOptionCheck = InOptionCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetOriginTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetOriginTransform(struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetOriginTransform");

	Params::BattleMain_C_BI_GetOriginTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_TaskFactoryMakeTalkPartyInTask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WaitTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           ParentName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_TaskFactoryMakeTalkPartyInTask(TArray<int32>& WaitTaskList, const class FString& ParentName, int32 PartyIndex, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TaskFactoryMakeTalkPartyInTask");

	Params::BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask Parms{};

	Parms.WaitTaskList = std::move(WaitTaskList);
	Parms.ParentName = std::move(ParentName);
	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	WaitTaskList = std::move(Parms.WaitTaskList);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetTaskFactoryParentNameTaskCnt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ParentName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetTaskFactoryParentNameTaskCnt(const class FString& ParentName, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetTaskFactoryParentNameTaskCnt");

	Params::BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt Parms{};

	Parms.ParentName = std::move(ParentName);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_StockSelectSeqStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_PTYPNL_TYPE                       Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_StockSelectSeqStart(E_BTL_PTYPNL_TYPE Type, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_StockSelectSeqStart");

	Params::BattleMain_C_BI_StockSelectSeqStart Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_StockSelectGetResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_StockSelectGetResult(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_StockSelectGetResult");

	Params::BattleMain_C_BI_StockSelectGetResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_StockSelectIsCancel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_StockSelectIsCancel(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_StockSelectIsCancel");

	Params::BattleMain_C_BI_StockSelectIsCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_StockSelectIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_StockSelectIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_StockSelectIsFinished");

	Params::BattleMain_C_BI_StockSelectIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetPaticleManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleParticleManager_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetPaticleManager(TScriptInterface<class IBPI_BattleParticleManager_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetPaticleManager");

	Params::BattleMain_C_BI_GetPaticleManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_TaskUnitModelAdd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TaskIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_CharaBaseAccessor_C>InUnit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_TaskUnitModelAdd(int32 TaskIndex, TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TaskUnitModelAdd");

	Params::BattleMain_C_BI_TaskUnitModelAdd Parms{};

	Parms.TaskIndex = TaskIndex;
	Parms.InUnit = InUnit;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_TaskUnitModelGet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TaskIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_CharaBaseAccessor_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_TaskUnitModelGet(int32 TaskIndex, TScriptInterface<class IBPI_CharaBaseAccessor_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TaskUnitModelGet");

	Params::BattleMain_C_BI_TaskUnitModelGet Parms{};

	Parms.TaskIndex = TaskIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_TaskUnitModelIsExist
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TaskIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_TaskUnitModelIsExist(int32 TaskIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TaskUnitModelIsExist");

	Params::BattleMain_C_BI_TaskUnitModelIsExist Parms{};

	Parms.TaskIndex = TaskIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SummonSelectGetResult
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           SrcList                                                (Parm, OutParm)
// TArray<int32>                           DstList                                                (Parm, OutParm)

void ABattleMain_C::BI_SummonSelectGetResult(TArray<int32>* SrcList, TArray<int32>* DstList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SummonSelectGetResult");

	Params::BattleMain_C_BI_SummonSelectGetResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SrcList != nullptr)
		*SrcList = std::move(Parms.SrcList);

	if (DstList != nullptr)
		*DstList = std::move(Parms.DstList);
}


// Function BattleMain.BattleMain_C.BI_SummonSelectIsCancel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SummonSelectIsCancel(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SummonSelectIsCancel");

	Params::BattleMain_C_BI_SummonSelectIsCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SummonSelectIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SummonSelectIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SummonSelectIsFinished");

	Params::BattleMain_C_BI_SummonSelectIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SummonSelectSeqStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SummonSelectSeqStart(int32 PartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SummonSelectSeqStart");

	Params::BattleMain_C_BI_SummonSelectSeqStart Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SummonSelectClose
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SummonSelectClose(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SummonSelectClose");

	Params::BattleMain_C_BI_SummonSelectClose Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_TaskUnitModelDelete
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PecID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_TaskUnitModelDelete(int32 PecID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TaskUnitModelDelete");

	Params::BattleMain_C_BI_TaskUnitModelDelete Parms{};

	Parms.PecID = PecID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_StockSelectClose
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_StockSelectClose(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_StockSelectClose");

	Params::BattleMain_C_BI_StockSelectClose Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_TaskFactoryAddCamRailTask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           WiatTaskList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           ParentName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_CAM_TYPE                          Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InterpWait                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           ManualName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    StopWait                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DeltaWait                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_TaskFactoryAddCamRailTask(TArray<int32>& WiatTaskList, const class FString& ParentName, int32 PartyIndex, E_BTL_CAM_TYPE Type, bool InterpWait, const class FString& ManualName, bool StopWait, float DeltaWait, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TaskFactoryAddCamRailTask");

	Params::BattleMain_C_BI_TaskFactoryAddCamRailTask Parms{};

	Parms.WiatTaskList = std::move(WiatTaskList);
	Parms.ParentName = std::move(ParentName);
	Parms.PartyIndex = PartyIndex;
	Parms.Type = Type;
	Parms.InterpWait = InterpWait;
	Parms.ManualName = std::move(ManualName);
	Parms.StopWait = StopWait;
	Parms.DeltaWait = DeltaWait;

	UObject::ProcessEvent(Func, &Parms);

	WiatTaskList = std::move(Parms.WiatTaskList);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_BattleIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BattleIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BattleIsFinished");

	Params::BattleMain_C_BI_BattleIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_TaskUnitManagerAddReserveDestroy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_CharaBaseAccessor_C>InUnit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_TaskUnitManagerAddReserveDestroy(TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TaskUnitManagerAddReserveDestroy");

	Params::BattleMain_C_BI_TaskUnitManagerAddReserveDestroy Parms{};

	Parms.InUnit = InUnit;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetTaskFactory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleTaskFactory_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetTaskFactory(TScriptInterface<class IBPI_BattleTaskFactory_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetTaskFactory");

	Params::BattleMain_C_BI_GetTaskFactory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetRadialForce
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URadialForceComponent*            RetValue                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetRadialForce(class URadialForceComponent** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetRadialForce");

	Params::BattleMain_C_BI_GetRadialForce Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_EffectManagerGetResidentAssetByName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_EffectManagerGetResidentAssetByName(class FName Param_Name, class UParticleSystem** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_EffectManagerGetResidentAssetByName");

	Params::BattleMain_C_BI_EffectManagerGetResidentAssetByName Parms{};

	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetPostProcessCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattlePostProcessCtrl_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetPostProcessCtrl(TScriptInterface<class IBPI_BattlePostProcessCtrl_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetPostProcessCtrl");

	Params::BattleMain_C_BI_GetPostProcessCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetRandom2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetRandom2(int32 Min, int32 Max, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetRandom2");

	Params::BattleMain_C_BI_GetRandom2 Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetRandom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetRandom(int32 Max, int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetRandom");

	Params::BattleMain_C_BI_GetRandom Parms{};

	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetRandomF2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetRandomF2(float Min, float Max, float* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetRandomF2");

	Params::BattleMain_C_BI_GetRandomF2 Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetRandomF
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetRandomF(float Max, float* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetRandomF");

	Params::BattleMain_C_BI_GetRandomF Parms{};

	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_BattleCameraIsNoMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BattleCameraIsNoMove(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BattleCameraIsNoMove");

	Params::BattleMain_C_BI_BattleCameraIsNoMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_AddResultDataForTalk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlParty                        Party                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_AddResultDataForTalk(const struct FBtlParty& Party, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_AddResultDataForTalk");

	Params::BattleMain_C_BI_AddResultDataForTalk Parms{};

	Parms.Party = std::move(Party);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetBattleSoundManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleSoundManager_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetBattleSoundManager(TScriptInterface<class IBPI_BattleSoundManager_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetBattleSoundManager");

	Params::BattleMain_C_BI_GetBattleSoundManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetBattleEventUnitList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>>RetValue                                               (Parm, OutParm)

void ABattleMain_C::BI_GetBattleEventUnitList(TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetBattleEventUnitList");

	Params::BattleMain_C_BI_GetBattleEventUnitList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_BattleCameraCurrentForce
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BattleCameraCurrentForce(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BattleCameraCurrentForce");

	Params::BattleMain_C_BI_BattleCameraCurrentForce Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI EffectManagerGetResidentSkillActionEffectByName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSkillActionEffect               RetVal                                                 (Parm, OutParm)

void ABattleMain_C::BI_EffectManagerGetResidentSkillActionEffectByName(class FName Param_Name, struct FSkillActionEffect* RetVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI EffectManagerGetResidentSkillActionEffectByName");

	Params::BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName Parms{};

	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);

	if (RetVal != nullptr)
		*RetVal = std::move(Parms.RetVal);
}


// Function BattleMain.BattleMain_C.BI_ClearSaveCommandPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_ClearSaveCommandPage(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_ClearSaveCommandPage");

	Params::BattleMain_C_BI_ClearSaveCommandPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetSaveCommandPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_UI_COMM_STEP                      RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetSaveCommandPage(E_BTL_UI_COMM_STEP* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetSaveCommandPage");

	Params::BattleMain_C_BI_GetSaveCommandPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SetSaveCommandPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_UI_COMM_STEP                      Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetSaveCommandPage(E_BTL_UI_COMM_STEP Command, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetSaveCommandPage");

	Params::BattleMain_C_BI_SetSaveCommandPage Parms{};

	Parms.Command = Command;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_InfoMessShowByCommonMess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MessID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_InfoMessShowByCommonMess(int32 MessID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_InfoMessShowByCommonMess");

	Params::BattleMain_C_BI_InfoMessShowByCommonMess Parms{};

	Parms.MessID = MessID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_InfoMessHide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_InfoMessHide(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_InfoMessHide");

	Params::BattleMain_C_BI_InfoMessHide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_InfoMessExtAct
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_EXTRA_ACTION                      MessageIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   ProgramStr                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_InfoMessExtAct(E_BTL_EXTRA_ACTION MessageIndex, TArray<class FString>& ProgramStr, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_InfoMessExtAct");

	Params::BattleMain_C_BI_InfoMessExtAct Parms{};

	Parms.MessageIndex = MessageIndex;
	Parms.ProgramStr = std::move(ProgramStr);

	UObject::ProcessEvent(Func, &Parms);

	ProgramStr = std::move(Parms.ProgramStr);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_InfoMessShowBySkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SrcActorName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           DstActorName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsMaster                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   OverwriteID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_InfoMessShowBySkill(int32 SkillId, const class FString& SrcActorName, const class FString& DstActorName, bool IsMaster, int32 OverwriteID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_InfoMessShowBySkill");

	Params::BattleMain_C_BI_InfoMessShowBySkill Parms{};

	Parms.SkillId = SkillId;
	Parms.SrcActorName = std::move(SrcActorName);
	Parms.DstActorName = std::move(DstActorName);
	Parms.IsMaster = IsMaster;
	Parms.OverwriteID = OverwriteID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_IsHugeBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   DevID                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_IsHugeBattle(bool* RetValue, int32* DevID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_IsHugeBattle");

	Params::BattleMain_C_BI_IsHugeBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;

	if (DevID != nullptr)
		*DevID = Parms.DevID;
}


// Function BattleMain.BattleMain_C.BI_EncountIsNoDeadEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_EncountIsNoDeadEffect(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_EncountIsNoDeadEffect");

	Params::BattleMain_C_BI_EncountIsNoDeadEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetMapOutChara
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<E_BTL_CHAR_TYPE, TScriptInterface<class IBPI_CharaBaseAccessor_C>>RetValue                                               (Parm, OutParm)

void ABattleMain_C::BI_GetMapOutChara(TMap<E_BTL_CHAR_TYPE, TScriptInterface<class IBPI_CharaBaseAccessor_C>>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetMapOutChara");

	Params::BattleMain_C_BI_GetMapOutChara Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_SetBattlePlayRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetBattlePlayRate(float PlayRate, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetBattlePlayRate");

	Params::BattleMain_C_BI_SetBattlePlayRate Parms{};

	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_GetBattlePlayRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetBattlePlayRate(float* PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetBattlePlayRate");

	Params::BattleMain_C_BI_GetBattlePlayRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayRate != nullptr)
		*PlayRate = Parms.PlayRate;
}


// Function BattleMain.BattleMain_C.BI_DestroyBattleCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_DestroyBattleCamera(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_DestroyBattleCamera");

	Params::BattleMain_C_BI_DestroyBattleCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UICommandGetMenuStep
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_UI_COMM_STEP                      RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_UICommandGetMenuStep(E_BTL_UI_COMM_STEP* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UICommandGetMenuStep");

	Params::BattleMain_C_BI_UICommandGetMenuStep Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetApplyResultData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlApllyResultData              RetValue                                               (Parm, OutParm)

void ABattleMain_C::BI_GetApplyResultData(struct FBtlApllyResultData* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetApplyResultData");

	Params::BattleMain_C_BI_GetApplyResultData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_GetFinishedState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_FINISHED_STATE                    State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SaveSlot                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetFinishedState(E_BTL_FINISHED_STATE* State, int32* SaveSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetFinishedState");

	Params::BattleMain_C_BI_GetFinishedState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;

	if (SaveSlot != nullptr)
		*SaveSlot = Parms.SaveSlot;
}


// Function BattleMain.BattleMain_C.BI EffectManagerGetResidentBstEffect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BAD_STATUS                            bst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CHARA_BAD_STATUS_APPEAR               Apper                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBattleResidentEffect            RetValue                                               (Parm, OutParm, HasGetValueTypeHash)

void ABattleMain_C::BI_EffectManagerGetResidentBstEffect(E_BAD_STATUS bst, E_CHARA_BAD_STATUS_APPEAR Apper, struct FBattleResidentEffect* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI EffectManagerGetResidentBstEffect");

	Params::BattleMain_C_BI_EffectManagerGetResidentBstEffect Parms{};

	Parms.bst = bst;
	Parms.Apper = Apper;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_TaskUnitManagerAddKeepRefUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_CharaBaseAccessor_C>InUnit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_TaskUnitManagerAddKeepRefUnit(TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TaskUnitManagerAddKeepRefUnit");

	Params::BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit Parms{};

	Parms.InUnit = InUnit;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_DebugTimeStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_DebugTimeStart(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_DebugTimeStart");

	Params::BattleMain_C_BI_DebugTimeStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_DebugTimeEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_DebugTimeEnd(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_DebugTimeEnd");

	Params::BattleMain_C_BI_DebugTimeEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_AutoSeqPause
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pause                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_AutoSeqPause(bool Pause, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_AutoSeqPause");

	Params::BattleMain_C_BI_AutoSeqPause Parms{};

	Parms.Pause = Pause;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_DebugJsonLogTalkSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_DebugJsonLogTalkSuccess(int32 DevilID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_DebugJsonLogTalkSuccess");

	Params::BattleMain_C_BI_DebugJsonLogTalkSuccess Parms{};

	Parms.DevilID = DevilID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_TargetSelectPause
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPause                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_TargetSelectPause(bool IsPause, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TargetSelectPause");

	Params::BattleMain_C_BI_TargetSelectPause Parms{};

	Parms.IsPause = IsPause;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetPartyUtilInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_PTUtilInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetPartyUtilInterface(TScriptInterface<class IBPI_PTUtilInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetPartyUtilInterface");

	Params::BattleMain_C_BI_GetPartyUtilInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetPartyMemInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_PTMemDataInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetPartyMemInterface(TScriptInterface<class IBPI_PTMemDataInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetPartyMemInterface");

	Params::BattleMain_C_BI_GetPartyMemInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetMainInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_MainInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetMainInterface(TScriptInterface<class IBPI_MainInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetMainInterface");

	Params::BattleMain_C_BI_GetMainInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetPartyFlagInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_PTFlagInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetPartyFlagInterface(TScriptInterface<class IBPI_PTFlagInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetPartyFlagInterface");

	Params::BattleMain_C_BI_GetPartyFlagInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_StartBlendOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_StartBlendOverride(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_StartBlendOverride");

	Params::BattleMain_C_BI_StartBlendOverride Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_EndBlendOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_EndBlendOverride(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_EndBlendOverride");

	Params::BattleMain_C_BI_EndBlendOverride Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_StartFovyOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_StartFovyOverride(float BlendTime, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_StartFovyOverride");

	Params::BattleMain_C_BI_StartFovyOverride Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_EndFovyOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_EndFovyOverride(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_EndFovyOverride");

	Params::BattleMain_C_BI_EndFovyOverride Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SetRailCam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_RailActor_C*                  SplineActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EyeTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EnableCharaDitherCtrl                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetRailCam(class ABP_RailActor_C* SplineActor, const struct FVector& EyeTarget, class AActor* TargetActor, bool EnableCharaDitherCtrl, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetRailCam");

	Params::BattleMain_C_BI_SetRailCam Parms{};

	Parms.SplineActor = SplineActor;
	Parms.EyeTarget = std::move(EyeTarget);
	Parms.TargetActor = TargetActor;
	Parms.EnableCharaDitherCtrl = EnableCharaDitherCtrl;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_TargetSelectGetCurrentTargetType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SKILL_TARGET                          NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_TargetSelectGetCurrentTargetType(E_SKILL_TARGET* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TargetSelectGetCurrentTargetType");

	Params::BattleMain_C_BI_TargetSelectGetCurrentTargetType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BattleMain.BattleMain_C.BI_GetBattleTargetSelect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleTargetSelect_C>BPI                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetBattleTargetSelect(TScriptInterface<class IBPI_BattleTargetSelect_C>* BPI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetBattleTargetSelect");

	Params::BattleMain_C_BI_GetBattleTargetSelect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BPI != nullptr)
		*BPI = Parms.BPI;
}


// Function BattleMain.BattleMain_C.BI_TargetSelectStartSelect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPartyIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCounter                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsInvTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCursorEnable                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_TargetSelectStartSelect(int32 InPartyIndex, bool IsCounter, bool IsInvTarget, bool IsCursorEnable, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TargetSelectStartSelect");

	Params::BattleMain_C_BI_TargetSelectStartSelect Parms{};

	Parms.InPartyIndex = InPartyIndex;
	Parms.IsCounter = IsCounter;
	Parms.IsInvTarget = IsInvTarget;
	Parms.IsCursorEnable = IsCursorEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_TargetSelectSetTargetAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Inside                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_TargetSelectSetTargetAll(E_BTL_SIDE Inside, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_TargetSelectSetTargetAll");

	Params::BattleMain_C_BI_TargetSelectSetTargetAll Parms{};

	Parms.Inside = Inside;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetPTUnitIniterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_PTBPInterface_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetPTUnitIniterface(TScriptInterface<class IBPI_PTBPInterface_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetPTUnitIniterface");

	Params::BattleMain_C_BI_GetPTUnitIniterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetPartyBadStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_PTBadStatusInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetPartyBadStatus(TScriptInterface<class IBPI_PTBadStatusInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetPartyBadStatus");

	Params::BattleMain_C_BI_GetPartyBadStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_InfoMessSetProgramStr
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_InfoMessSetProgramStr(int32 Param_Index, const class FString& String, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_InfoMessSetProgramStr");

	Params::BattleMain_C_BI_InfoMessSetProgramStr Parms{};

	Parms.Param_Index = Param_Index;
	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetBossCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleBossCtrl_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetBossCtrl(TScriptInterface<class IBPI_BattleBossCtrl_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetBossCtrl");

	Params::BattleMain_C_BI_GetBossCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_OverrideCameraTargetSocket
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OverrideSocket                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_OverrideCameraTargetSocket(class FName OverrideSocket, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_OverrideCameraTargetSocket");

	Params::BattleMain_C_BI_OverrideCameraTargetSocket Parms{};

	Parms.OverrideSocket = OverrideSocket;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_FieldPlayerReplace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           InDevilList                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_FieldPlayerReplace(const TArray<int32>& InDevilList, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_FieldPlayerReplace");

	Params::BattleMain_C_BI_FieldPlayerReplace Parms{};

	Parms.InDevilList = std::move(InDevilList);

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_FieldPlayerReplaceFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_FieldPlayerReplaceFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_FieldPlayerReplaceFinished");

	Params::BattleMain_C_BI_FieldPlayerReplaceFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_FieldPlayerReplaceResult
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<int32, struct FTransform>          RetValue                                               (Parm, OutParm)

void ABattleMain_C::BI_FieldPlayerReplaceResult(TMap<int32, struct FTransform>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_FieldPlayerReplaceResult");

	Params::BattleMain_C_BI_FieldPlayerReplaceResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_FieldEnemyAddSpawnPost
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_FieldEnemyAddSpawnPost(int32 Param_Index, struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_FieldEnemyAddSpawnPost");

	Params::BattleMain_C_BI_FieldEnemyAddSpawnPost Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_GetMapCameraActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetMapCameraActor(class AActor** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetMapCameraActor");

	Params::BattleMain_C_BI_GetMapCameraActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_FieldGetComandBoxTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       RetValue                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_FieldGetComandBoxTransform(struct FTransform* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_FieldGetComandBoxTransform");

	Params::BattleMain_C_BI_FieldGetComandBoxTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = std::move(Parms.RetValue);
}


// Function BattleMain.BattleMain_C.BI_UIInfomationShow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UIInfomationShow(int32 SkillId, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UIInfomationShow");

	Params::BattleMain_C_BI_UIInfomationShow Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UIInfomationHide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UIInfomationHide(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UIInfomationHide");

	Params::BattleMain_C_BI_UIInfomationHide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UIInfomationEndSeq
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UIInfomationEndSeq(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UIInfomationEndSeq");

	Params::BattleMain_C_BI_UIInfomationEndSeq Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UIInfomationIsAnimationExcuting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UIInfomationIsAnimationExcuting(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UIInfomationIsAnimationExcuting");

	Params::BattleMain_C_BI_UIInfomationIsAnimationExcuting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetCharAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class IBPI_BattleCharAction_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetCharAction(bool* Success, TScriptInterface<class IBPI_BattleCharAction_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetCharAction");

	Params::BattleMain_C_BI_GetCharAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_AddAIFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_AddAIFlag(uint8 Flag, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_AddAIFlag");

	Params::BattleMain_C_BI_AddAIFlag Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_DelAIFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_DelAIFlag(uint8 Flag, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_DelAIFlag");

	Params::BattleMain_C_BI_DelAIFlag Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_CheckAIFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_CheckAIFlag(uint8 Flag, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_CheckAIFlag");

	Params::BattleMain_C_BI_CheckAIFlag Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_ClearAIFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_ClearAIFlag(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_ClearAIFlag");

	Params::BattleMain_C_BI_ClearAIFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_SetAIValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_SetAIValue(int32 Value, int32 Param_Index, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetAIValue");

	Params::BattleMain_C_BI_SetAIValue Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_GetAIValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetAIValue(int32 Param_Index, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetAIValue");

	Params::BattleMain_C_BI_GetAIValue Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BattleMain.BattleMain_C.BI_DelAIValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_DelAIValue(int32 Param_Index, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_DelAIValue");

	Params::BattleMain_C_BI_DelAIValue Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_ClearAIValueAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_ClearAIValueAll(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_ClearAIValueAll");

	Params::BattleMain_C_BI_ClearAIValueAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_GetSummonList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBtlSummonData>           List                                                   (Parm, OutParm)

void ABattleMain_C::BI_GetSummonList(TArray<struct FBtlSummonData>* List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetSummonList");

	Params::BattleMain_C_BI_GetSummonList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (List != nullptr)
		*List = std::move(Parms.List);
}


// Function BattleMain.BattleMain_C.BI_ClearSummonList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_ClearSummonList(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_ClearSummonList");

	Params::BattleMain_C_BI_ClearSummonList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_SetSummonDevilID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SummonPosID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_SetSummonDevilID(int32 DevilID, int32 SummonPosID, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetSummonDevilID");

	Params::BattleMain_C_BI_SetSummonDevilID Parms{};

	Parms.DevilID = DevilID;
	Parms.SummonPosID = SummonPosID;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_AddDrawPressIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_AddDrawPressIcon(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_AddDrawPressIcon");

	Params::BattleMain_C_BI_AddDrawPressIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_GetAITurnNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TurnNum                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetAITurnNum(int32* TurnNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetAITurnNum");

	Params::BattleMain_C_BI_GetAITurnNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TurnNum != nullptr)
		*TurnNum = Parms.TurnNum;
}


// Function BattleMain.BattleMain_C.BI_CommonInfoMessReserveTagParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_CommonInfoMessReserveTagParam(int32 Param_Index, const class FString& String, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_CommonInfoMessReserveTagParam");

	Params::BattleMain_C_BI_CommonInfoMessReserveTagParam Parms{};

	Parms.Param_Index = Param_Index;
	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_GetCurrentBGMID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetCurrentBGMID(int32* ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetCurrentBGMID");

	Params::BattleMain_C_BI_GetCurrentBGMID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;
}


// Function BattleMain.BattleMain_C.BI_ToCommandBox
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_ToCommandBox(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_ToCommandBox");

	Params::BattleMain_C_BI_ToCommandBox Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_DrawPlayerUpliftingGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNowUplifting                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    SpendGaugeOnly                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_DrawPlayerUpliftingGauge(bool IsNowUplifting, bool SpendGaugeOnly, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_DrawPlayerUpliftingGauge");

	Params::BattleMain_C_BI_DrawPlayerUpliftingGauge Parms{};

	Parms.IsNowUplifting = IsNowUplifting;
	Parms.SpendGaugeOnly = SpendGaugeOnly;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_SetSummonList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBtlSummonData>           SummonData                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_SetSummonList(TArray<struct FBtlSummonData>& SummonData, int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetSummonList");

	Params::BattleMain_C_BI_SetSummonList Parms{};

	Parms.SummonData = std::move(SummonData);

	UObject::ProcessEvent(Func, &Parms);

	SummonData = std::move(Parms.SummonData);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_GetBattleUIManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleUIManager_C>Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetBattleUIManager(TScriptInterface<class IBPI_BattleUIManager_C>* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetBattleUIManager");

	Params::BattleMain_C_BI_GetBattleUIManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_BeginAutoBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BeginAutoBattle(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BeginAutoBattle");

	Params::BattleMain_C_BI_BeginAutoBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.GI_GetUIMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleMessage_C>ActionPanel                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::GI_GetUIMessage(TScriptInterface<class IBPI_BattleMessage_C>* ActionPanel, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "GI_GetUIMessage");

	Params::BattleMain_C_GI_GetUIMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActionPanel != nullptr)
		*ActionPanel = Parms.ActionPanel;

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BattleMain.BattleMain_C.BI_BattleStatusCreatePanel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StartPartyIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BattleStatusCreatePanel(int32 StartPartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BattleStatusCreatePanel");

	Params::BattleMain_C_BI_BattleStatusCreatePanel Parms{};

	Parms.StartPartyIndex = StartPartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_BattleStatusIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BattleStatusIsFinished(bool* OutFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BattleStatusIsFinished");

	Params::BattleMain_C_BI_BattleStatusIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFinished != nullptr)
		*OutFinished = Parms.OutFinished;
}


// Function BattleMain.BattleMain_C.BI_BattleStatusGetSelectedPartyIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OutPartyIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_BattleStatusGetSelectedPartyIndex(int32* OutPartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BattleStatusGetSelectedPartyIndex");

	Params::BattleMain_C_BI_BattleStatusGetSelectedPartyIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutPartyIndex != nullptr)
		*OutPartyIndex = Parms.OutPartyIndex;
}


// Function BattleMain.BattleMain_C.BI_BattleStatusIsCanseled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutCanseled                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BattleStatusIsCanseled(bool* OutCanseled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BattleStatusIsCanseled");

	Params::BattleMain_C_BI_BattleStatusIsCanseled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutCanseled != nullptr)
		*OutCanseled = Parms.OutCanseled;
}


// Function BattleMain.BattleMain_C.BI_InfoMessShowByCommonMessLabel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MessLabel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SelectSkillScriptMessage                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_InfoMessShowByCommonMessLabel(class FName MessLabel, bool SelectSkillScriptMessage, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_InfoMessShowByCommonMessLabel");

	Params::BattleMain_C_BI_InfoMessShowByCommonMessLabel Parms{};

	Parms.MessLabel = MessLabel;
	Parms.SelectSkillScriptMessage = SelectSkillScriptMessage;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetPlayerUpliftingGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetPlayerUpliftingGauge(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetPlayerUpliftingGauge");

	Params::BattleMain_C_BI_GetPlayerUpliftingGauge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_ChkEnemySurpriseTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnemySurpriseTurn                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_ChkEnemySurpriseTurn(bool* EnemySurpriseTurn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_ChkEnemySurpriseTurn");

	Params::BattleMain_C_BI_ChkEnemySurpriseTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EnemySurpriseTurn != nullptr)
		*EnemySurpriseTurn = Parms.EnemySurpriseTurn;
}


// Function BattleMain.BattleMain_C.BI_SetCurrentBGMID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BGM_ID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    No_Use                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetCurrentBGMID(int32 BGM_ID, bool* No_Use)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetCurrentBGMID");

	Params::BattleMain_C_BI_SetCurrentBGMID Parms{};

	Parms.BGM_ID = BGM_ID;

	UObject::ProcessEvent(Func, &Parms);

	if (No_Use != nullptr)
		*No_Use = Parms.No_Use;
}


// Function BattleMain.BattleMain_C.BI_AddResultDataFujimi
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_AddResultDataFujimi(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_AddResultDataFujimi");

	Params::BattleMain_C_BI_AddResultDataFujimi Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_PrepareSkip
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_PrepareSkip(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_PrepareSkip");

	Params::BattleMain_C_BI_PrepareSkip Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_ReadyDebugMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_ReadyDebugMenu(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_ReadyDebugMenu");

	Params::BattleMain_C_BI_ReadyDebugMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_GetCamActorFactory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleCamActorFactory_C>CamActorFactory                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetCamActorFactory(TScriptInterface<class IBPI_BattleCamActorFactory_C>* CamActorFactory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetCamActorFactory");

	Params::BattleMain_C_BI_GetCamActorFactory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CamActorFactory != nullptr)
		*CamActorFactory = Parms.CamActorFactory;
}


// Function BattleMain.BattleMain_C.BI_SummonSelectSetSummonParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SummonSelectSetSummonParameter(bool* OutParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SummonSelectSetSummonParameter");

	Params::BattleMain_C_BI_SummonSelectSetSummonParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutParam != nullptr)
		*OutParam = Parms.OutParam;
}


// Function BattleMain.BattleMain_C.BI_GetAnalyzeItemStatusCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          AnalyzeItemStatusCtrl                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetAnalyzeItemStatusCtrl(class UObject** AnalyzeItemStatusCtrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetAnalyzeItemStatusCtrl");

	Params::BattleMain_C_BI_GetAnalyzeItemStatusCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnalyzeItemStatusCtrl != nullptr)
		*AnalyzeItemStatusCtrl = Parms.AnalyzeItemStatusCtrl;
}


// Function BattleMain.BattleMain_C.BI_BattleUISwitch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IncludeMonnAge                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BattleUISwitch(bool Sw, bool IncludeMonnAge, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BattleUISwitch");

	Params::BattleMain_C_BI_BattleUISwitch Parms{};

	Parms.Sw = Sw;
	Parms.IncludeMonnAge = IncludeMonnAge;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_GetBattleCommand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleCommand_C>Param_BattleCommand                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetBattleCommand(TScriptInterface<class IBPI_BattleCommand_C>* Param_BattleCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetBattleCommand");

	Params::BattleMain_C_BI_GetBattleCommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_BattleCommand != nullptr)
		*Param_BattleCommand = Parms.Param_BattleCommand;
}


// Function BattleMain.BattleMain_C.BI_IsFinishedBattleCharaPanelFadeIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFinished                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_IsFinishedBattleCharaPanelFadeIn(bool* IsFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_IsFinishedBattleCharaPanelFadeIn");

	Params::BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFinished != nullptr)
		*IsFinished = Parms.IsFinished;
}


// Function BattleMain.BattleMain_C.BI_SetPartyPanelFadeOutStack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InStartTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InOptionCheck                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InVisibleCheck                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OutParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetPartyPanelFadeOutStack(int32 InIndex, float InStartTime, bool InOptionCheck, bool InVisibleCheck, bool* OutParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetPartyPanelFadeOutStack");

	Params::BattleMain_C_BI_SetPartyPanelFadeOutStack Parms{};

	Parms.InIndex = InIndex;
	Parms.InStartTime = InStartTime;
	Parms.InOptionCheck = InOptionCheck;
	Parms.InVisibleCheck = InVisibleCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (OutParam != nullptr)
		*OutParam = Parms.OutParam;
}


// Function BattleMain.BattleMain_C.BI_SetPartyPanelEmptyStack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InStartTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InOptionCheck                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InVisibleCheck                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetPartyPanelEmptyStack(int32 InIndex, float InStartTime, bool InOptionCheck, bool InVisibleCheck, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetPartyPanelEmptyStack");

	Params::BattleMain_C_BI_SetPartyPanelEmptyStack Parms{};

	Parms.InIndex = InIndex;
	Parms.InStartTime = InStartTime;
	Parms.InOptionCheck = InOptionCheck;
	Parms.InVisibleCheck = InVisibleCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SetPartyPanelSummonStack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBtlParty                        InPartyData                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   InStartTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InOptionCheck                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetPartyPanelSummonStack(int32 InIndex, const struct FBtlParty& InPartyData, float InStartTime, bool InOptionCheck, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetPartyPanelSummonStack");

	Params::BattleMain_C_BI_SetPartyPanelSummonStack Parms{};

	Parms.InIndex = InIndex;
	Parms.InPartyData = std::move(InPartyData);
	Parms.InStartTime = InStartTime;
	Parms.InOptionCheck = InOptionCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_IsFinishedPanelFadeOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_IsFinishedPanelFadeOut(int32 InIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_IsFinishedPanelFadeOut");

	Params::BattleMain_C_BI_IsFinishedPanelFadeOut Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_HideActionName_forCommand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_HideActionName_forCommand(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_HideActionName_forCommand");

	Params::BattleMain_C_BI_HideActionName_forCommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_HideActionName_forSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_HideActionName_forSkill(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_HideActionName_forSkill");

	Params::BattleMain_C_BI_HideActionName_forSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_ShowActionName_forCommand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_ShowActionName_forCommand(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_ShowActionName_forCommand");

	Params::BattleMain_C_BI_ShowActionName_forCommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_ShowActionName_forSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_ShowActionName_forSkill(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_ShowActionName_forSkill");

	Params::BattleMain_C_BI_ShowActionName_forSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_GetSkillCureHPForUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InActorIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InTargetIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InSkillId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetHP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetSkillCureHPForUI(int32 InActorIndex, int32 InTargetIndex, int32 InSkillId, int32* RetHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetSkillCureHPForUI");

	Params::BattleMain_C_BI_GetSkillCureHPForUI Parms{};

	Parms.InActorIndex = InActorIndex;
	Parms.InTargetIndex = InTargetIndex;
	Parms.InSkillId = InSkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetHP != nullptr)
		*RetHP = Parms.RetHP;
}


// Function BattleMain.BattleMain_C.BI_GetItemCureHPForUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InActorIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InTargetIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InItemId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetHP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetItemCureHPForUI(int32 InActorIndex, int32 InTargetIndex, int32 InItemId, int32* RetHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetItemCureHPForUI");

	Params::BattleMain_C_BI_GetItemCureHPForUI Parms{};

	Parms.InActorIndex = InActorIndex;
	Parms.InTargetIndex = InTargetIndex;
	Parms.InItemId = InItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetHP != nullptr)
		*RetHP = Parms.RetHP;
}


// Function BattleMain.BattleMain_C.BI_GetItemCureMPForUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InActorIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InTargetIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InItemId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetMP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetItemCureMPForUI(int32 InActorIndex, int32 InTargetIndex, int32 InItemId, int32* RetMP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetItemCureMPForUI");

	Params::BattleMain_C_BI_GetItemCureMPForUI Parms{};

	Parms.InActorIndex = InActorIndex;
	Parms.InTargetIndex = InTargetIndex;
	Parms.InItemId = InItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetMP != nullptr)
		*RetMP = Parms.RetMP;
}


// Function BattleMain.BattleMain_C.BI_GetSkillCureMPForUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InActorIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InTargetIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InSkillId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RetMP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetSkillCureMPForUI(int32 InActorIndex, int32 InTargetIndex, int32 InSkillId, int32* RetMP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetSkillCureMPForUI");

	Params::BattleMain_C_BI_GetSkillCureMPForUI Parms{};

	Parms.InActorIndex = InActorIndex;
	Parms.InTargetIndex = InTargetIndex;
	Parms.InSkillId = InSkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (RetMP != nullptr)
		*RetMP = Parms.RetMP;
}


// Function BattleMain.BattleMain_C.BI_CheckBattleEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_END                               EndType                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_CheckBattleEnd(E_BTL_END* EndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_CheckBattleEnd");

	Params::BattleMain_C_BI_CheckBattleEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EndType != nullptr)
		*EndType = Parms.EndType;
}


// Function BattleMain.BattleMain_C.BI Get Camera Accessor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABattleCamera_C*                  Camera                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_Get_Camera_Accessor(class ABattleCamera_C** Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI Get Camera Accessor");

	Params::BattleMain_C_BI_Get_Camera_Accessor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Camera != nullptr)
		*Camera = Parms.Camera;
}


// Function BattleMain.BattleMain_C.BI_CalcStatusListEnemyOrder
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           PartyIndex                                             (Parm, OutParm)

void ABattleMain_C::BI_CalcStatusListEnemyOrder(TArray<int32>* PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_CalcStatusListEnemyOrder");

	Params::BattleMain_C_BI_CalcStatusListEnemyOrder Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PartyIndex != nullptr)
		*PartyIndex = std::move(Parms.PartyIndex);
}


// Function BattleMain.BattleMain_C.BI_SetVoiceProtection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetVoiceProtection(bool Enable, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetVoiceProtection");

	Params::BattleMain_C_BI_SetVoiceProtection Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_UpdateBattleTempo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UpdateBattleTempo(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UpdateBattleTempo");

	Params::BattleMain_C_BI_UpdateBattleTempo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_CheckContinuousBGMBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsContinuous                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_CheckContinuousBGMBattle(bool* IsContinuous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_CheckContinuousBGMBattle");

	Params::BattleMain_C_BI_CheckContinuousBGMBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsContinuous != nullptr)
		*IsContinuous = Parms.IsContinuous;
}


// Function BattleMain.BattleMain_C.BI_EndAutoBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_EndAutoBattle(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_EndAutoBattle");

	Params::BattleMain_C_BI_EndAutoBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_UniqueSkill_CureMPMagatsuhiGaugeMax
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_UniqueSkill_CureMPMagatsuhiGaugeMax(int32* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UniqueSkill_CureMPMagatsuhiGaugeMax");

	Params::BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_PartyPanelGetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_PartyPanelGetVisibility(bool* IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_PartyPanelGetVisibility");

	Params::BattleMain_C_BI_PartyPanelGetVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible != nullptr)
		*IsVisible = Parms.IsVisible;
}


// Function BattleMain.BattleMain_C.BI_CheckBossRushChallengeMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_CheckBossRushChallengeMode(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_CheckBossRushChallengeMode");

	Params::BattleMain_C_BI_CheckBossRushChallengeMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_UniqueSkill_ActionEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAllAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsDeadOnly                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ReserveDeadPartyIndex                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UniqueSkill_ActionEnd(bool IsAllAction, bool IsDeadOnly, int32 ReserveDeadPartyIndex, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UniqueSkill_ActionEnd");

	Params::BattleMain_C_BI_UniqueSkill_ActionEnd Parms{};

	Parms.IsAllAction = IsAllAction;
	Parms.IsDeadOnly = IsDeadOnly;
	Parms.ReserveDeadPartyIndex = ReserveDeadPartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_UniqueSkill_BstDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UniqueSkill_BstDead(int32 PartyIndex, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UniqueSkill_BstDead");

	Params::BattleMain_C_BI_UniqueSkill_BstDead Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BattleMain.BattleMain_C.BI_CheckBossRush
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBossRush                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_CheckBossRush(bool* IsBossRush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_CheckBossRush");

	Params::BattleMain_C_BI_CheckBossRush Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsBossRush != nullptr)
		*IsBossRush = Parms.IsBossRush;
}


// Function BattleMain.BattleMain_C.BI_GetEncountID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncountID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEvent                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetEncountID(int32* EncountID, bool* IsEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetEncountID");

	Params::BattleMain_C_BI_GetEncountID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EncountID != nullptr)
		*EncountID = Parms.EncountID;

	if (IsEvent != nullptr)
		*IsEvent = Parms.IsEvent;
}


// Function BattleMain.BattleMain_C.BI_GetEventSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleEventSystem_C>EventSystem                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetEventSystem(TScriptInterface<class IBPI_BattleEventSystem_C>* EventSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetEventSystem");

	Params::BattleMain_C_BI_GetEventSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EventSystem != nullptr)
		*EventSystem = Parms.EventSystem;
}


// Function BattleMain.BattleMain_C.BI_GetEffectManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleEffectManager_C>Manager                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetEffectManager(TScriptInterface<class IBPI_BattleEffectManager_C>* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetEffectManager");

	Params::BattleMain_C_BI_GetEffectManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Manager != nullptr)
		*Manager = Parms.Manager;
}


// Function BattleMain.BattleMain_C.BI_InfoMessIsDispOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDispOn                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_InfoMessIsDispOn(bool* IsDispOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_InfoMessIsDispOn");

	Params::BattleMain_C_BI_InfoMessIsDispOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDispOn != nullptr)
		*IsDispOn = Parms.IsDispOn;
}


// Function BattleMain.BattleMain_C.BI_GetTaskModelManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_BattleTaskModelManager_C>Manager                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetTaskModelManager(TScriptInterface<class IBPI_BattleTaskModelManager_C>* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetTaskModelManager");

	Params::BattleMain_C_BI_GetTaskModelManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Manager != nullptr)
		*Manager = Parms.Manager;
}


// Function BattleMain.BattleMain_C.BI_SetPrevBattleBGM
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundAtomCue*                    PrevBattleBGM                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetPrevBattleBGM(class USoundAtomCue* PrevBattleBGM, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetPrevBattleBGM");

	Params::BattleMain_C_BI_SetPrevBattleBGM Parms{};

	Parms.PrevBattleBGM = PrevBattleBGM;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_GetWindowActivation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetWindowActivation(bool* Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetWindowActivation");

	Params::BattleMain_C_BI_GetWindowActivation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;
}


// Function BattleMain.BattleMain_C.BI_BeHomeSideAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BeHomeSideAll(E_BTL_SIDE Side, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BeHomeSideAll");

	Params::BattleMain_C_BI_BeHomeSideAll Parms{};

	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_BeHome
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_BeHome(int32 PartyIndex, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_BeHome");

	Params::BattleMain_C_BI_BeHome Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UnitSetVisibilityAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UnitSetVisibilityAll(bool Sw, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UnitSetVisibilityAll");

	Params::BattleMain_C_BI_UnitSetVisibilityAll Parms{};

	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UnitSetVisibilitySideAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_SIDE                              Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UnitSetVisibilitySideAll(E_BTL_SIDE Side, bool Sw, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UnitSetVisibilitySideAll");

	Params::BattleMain_C_BI_UnitSetVisibilitySideAll Parms{};

	Parms.Side = Side;
	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UnitSetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sw                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UnitSetVisibility(int32 PartyIndex, bool Sw, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UnitSetVisibility");

	Params::BattleMain_C_BI_UnitSetVisibility Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Sw = Sw;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UpdateEnemyInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetVlaue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UpdateEnemyInfo(bool* RetVlaue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UpdateEnemyInfo");

	Params::BattleMain_C_BI_UpdateEnemyInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetVlaue != nullptr)
		*RetVlaue = Parms.RetVlaue;
}


// Function BattleMain.BattleMain_C.BI_UpdateUnitState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCureBySkill                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsLacerationDamage                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UpdateLookAt                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForcePlayMotion                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UpdateUnitState(int32 PartyIndex, bool IsCureBySkill, bool IsLacerationDamage, bool UpdateLookAt, bool ForcePlayMotion, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UpdateUnitState");

	Params::BattleMain_C_BI_UpdateUnitState Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.IsCureBySkill = IsCureBySkill;
	Parms.IsLacerationDamage = IsLacerationDamage;
	Parms.UpdateLookAt = UpdateLookAt;
	Parms.ForcePlayMotion = ForcePlayMotion;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetPartyUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_CharaBaseAccessor_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetPartyUnit(int32 PartyIndex, TScriptInterface<class IBPI_CharaBaseAccessor_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetPartyUnit");

	Params::BattleMain_C_BI_GetPartyUnit Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_SetPartyUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_CharaBaseAccessor_C>InUnit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_CHAR_TYPE                         Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsReader                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_SetPartyUnit(int32 PartyIndex, TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit, int32 DevilID, E_BTL_CHAR_TYPE Type, bool IsReader, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_SetPartyUnit");

	Params::BattleMain_C_BI_SetPartyUnit Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.InUnit = InUnit;
	Parms.DevilID = DevilID;
	Parms.Type = Type;
	Parms.IsReader = IsReader;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UnitSetDitherValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFadeOut                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UnitSetDitherValue(int32 PartyIndex, float Time, bool IsFadeOut, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UnitSetDitherValue");

	Params::BattleMain_C_BI_UnitSetDitherValue Parms{};

	Parms.PartyIndex = PartyIndex;
	Parms.Time = Time;
	Parms.IsFadeOut = IsFadeOut;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UnitSetDitherValueSideAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFadeOut                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UnitSetDitherValueSideAll(float Time, bool IsFadeOut, bool IsPlayer, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UnitSetDitherValueSideAll");

	Params::BattleMain_C_BI_UnitSetDitherValueSideAll Parms{};

	Parms.Time = Time;
	Parms.IsFadeOut = IsFadeOut;
	Parms.IsPlayer = IsPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_GetUnitStateMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_CHARA_MOTION_ID                       RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleMain_C::BI_GetUnitStateMotion(int32 PartyIndex, E_CHARA_MOTION_ID* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetUnitStateMotion");

	Params::BattleMain_C_BI_GetUnitStateMotion Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleMain.BattleMain_C.BI_UpdateUnitAveLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_UpdateUnitAveLocation(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_UpdateUnitAveLocation");

	Params::BattleMain_C_BI_UpdateUnitAveLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BattleMain.BattleMain_C.BI_GetAICommand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TScriptInterface<class IBPI_AICommand_C>Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleMain_C::BI_GetAICommand(TScriptInterface<class IBPI_AICommand_C>* Ret) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleMain_C", "BI_GetAICommand");

	Params::BattleMain_C_BI_GetAICommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}

}

