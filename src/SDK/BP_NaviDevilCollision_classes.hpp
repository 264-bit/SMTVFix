#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NaviDevilCollision

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NaviDevilCollision.BP_NaviDevilCollision_C
// 0x0018 (0x0238 - 0x0220)
class ABP_NaviDevilCollision_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CollisionRadius;                                   // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         CollisionHalfHeight;                               // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_NaviDevilCollision(int32 EntryPoint);
	void OnEndPlay_(class AActor* Actor, EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NaviDevilCollision_C">();
	}
	static class ABP_NaviDevilCollision_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NaviDevilCollision_C>();
	}
};
static_assert(alignof(ABP_NaviDevilCollision_C) == 0x000008, "Wrong alignment on ABP_NaviDevilCollision_C");
static_assert(sizeof(ABP_NaviDevilCollision_C) == 0x000238, "Wrong size on ABP_NaviDevilCollision_C");
static_assert(offsetof(ABP_NaviDevilCollision_C, UberGraphFrame) == 0x000220, "Member 'ABP_NaviDevilCollision_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NaviDevilCollision_C, Capsule) == 0x000228, "Member 'ABP_NaviDevilCollision_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_NaviDevilCollision_C, CollisionRadius) == 0x000230, "Member 'ABP_NaviDevilCollision_C::CollisionRadius' has a wrong offset!");
static_assert(offsetof(ABP_NaviDevilCollision_C, CollisionHalfHeight) == 0x000234, "Member 'ABP_NaviDevilCollision_C::CollisionHalfHeight' has a wrong offset!");

}

