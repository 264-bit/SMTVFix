#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MagatsuhiGaugeCtrl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MagatsuhiGaugeCtrl.BP_MagatsuhiGaugeCtrl_C
// 0x0020 (0x0240 - 0x0220)
class ABP_MagatsuhiGaugeCtrl_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWB_MagatsuhiGauge_C*                   M_MagatsuhiGauge;                                  // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WIDGET_PRIO                                 M_WidgetPrio;                                      // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BI_GetCurrentWidgetPrio(E_WIDGET_PRIO* CurrentPrio);
	void BI_GetWidgetBase(class UUIBtlUpliftingGaugeBase** WidgetBase);
	void ReceiveBeginPlay();
	void AddToScreenWidget();
	void BI_SlideIn(bool UpperPos, int32 InitialValue, bool Immediately);
	void BI_SlideOut();
	void BI_SetGaugeValue(int32 Value);
	void BI_SetGaugeReduceFlash(bool Show);
	void BI_IncreaseGauge(int32 Increase);
	void BI_ReduceGauge(int32 Reduce);
	void BI_ChangeWidgetPrio(E_WIDGET_PRIO Prio);
	void ExecuteUbergraph_BP_MagatsuhiGaugeCtrl(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MagatsuhiGaugeCtrl_C">();
	}
	static class ABP_MagatsuhiGaugeCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MagatsuhiGaugeCtrl_C>();
	}
};
static_assert(alignof(ABP_MagatsuhiGaugeCtrl_C) == 0x000008, "Wrong alignment on ABP_MagatsuhiGaugeCtrl_C");
static_assert(sizeof(ABP_MagatsuhiGaugeCtrl_C) == 0x000240, "Wrong size on ABP_MagatsuhiGaugeCtrl_C");
static_assert(offsetof(ABP_MagatsuhiGaugeCtrl_C, UberGraphFrame) == 0x000220, "Member 'ABP_MagatsuhiGaugeCtrl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MagatsuhiGaugeCtrl_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_MagatsuhiGaugeCtrl_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MagatsuhiGaugeCtrl_C, M_MagatsuhiGauge) == 0x000230, "Member 'ABP_MagatsuhiGaugeCtrl_C::M_MagatsuhiGauge' has a wrong offset!");
static_assert(offsetof(ABP_MagatsuhiGaugeCtrl_C, M_WidgetPrio) == 0x000238, "Member 'ABP_MagatsuhiGaugeCtrl_C::M_WidgetPrio' has a wrong offset!");

}

