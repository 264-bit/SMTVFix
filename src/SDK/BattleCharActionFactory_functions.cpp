#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleCharActionFactory

#include "Basic.hpp"

#include "BattleCharActionFactory_classes.hpp"
#include "BattleCharActionFactory_parameters.hpp"


namespace SDK
{

// Function BattleCharActionFactory.BattleCharActionFactory_C.ExecuteUbergraph_BattleCharActionFactory
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleCharActionFactory_C::ExecuteUbergraph_BattleCharActionFactory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "ExecuteUbergraph_BattleCharActionFactory");

	Params::BattleCharActionFactory_C_ExecuteUbergraph_BattleCharActionFactory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleCharActionFactory_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "ReceiveTick");

	Params::BattleCharActionFactory_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.GetMainWork
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABattleMain_C*                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleCharActionFactory_C::GetMainWork(class ABattleMain_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "GetMainWork");

	Params::BattleCharActionFactory_C_GetMainWork Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.SpawnCharActionActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBtlActionStack                  InData                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UBattleCharActionFactory_C::SpawnCharActionActor(const struct FBtlActionStack& InData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "SpawnCharActionActor");

	Params::BattleCharActionFactory_C_SpawnCharActionActor Parms{};

	Parms.InData = std::move(InData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.GetPrevActionSeq
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_ACT_SEQ                           RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleCharActionFactory_C::GetPrevActionSeq(E_BTL_ACT_SEQ* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "GetPrevActionSeq");

	Params::BattleCharActionFactory_C_GetPrevActionSeq Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.GetNowAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABattleCharAction_C*              RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleCharActionFactory_C::GetNowAction(bool* IsSuccess, class ABattleCharAction_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "GetNowAction");

	Params::BattleCharActionFactory_C_GetNowAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.DestroyForPecID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPecID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleCharActionFactory_C::DestroyForPecID(int32 InPecID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "DestroyForPecID");

	Params::BattleCharActionFactory_C_DestroyForPecID Parms{};

	Parms.InPecID = InPecID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.AllActionIsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleCharActionFactory_C::AllActionIsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "AllActionIsFinished");

	Params::BattleCharActionFactory_C_AllActionIsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.CheckAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ContinueUpdate                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleCharActionFactory_C::CheckAction(float DeltaSec, bool* ContinueUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "CheckAction");

	Params::BattleCharActionFactory_C_CheckAction Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (ContinueUpdate != nullptr)
		*ContinueUpdate = Parms.ContinueUpdate;
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.GetActionForPartyIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABattleCharAction_C*              RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleCharActionFactory_C::GetActionForPartyIndex(int32 PartyIndex, class ABattleCharAction_C** RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "GetActionForPartyIndex");

	Params::BattleCharActionFactory_C_GetActionForPartyIndex Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.GetActionNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleCharActionFactory_C::GetActionNum(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "GetActionNum");

	Params::BattleCharActionFactory_C_GetActionNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.SetCharActionPlayRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleCharActionFactory_C::SetCharActionPlayRate(float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "SetCharActionPlayRate");

	Params::BattleCharActionFactory_C_SetCharActionPlayRate Parms{};

	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleCharActionFactory.BattleCharActionFactory_C.UpdateComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ContinueUpdate                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleCharActionFactory_C::UpdateComponent(float Delta, bool* ContinueUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleCharActionFactory_C", "UpdateComponent");

	Params::BattleCharActionFactory_C_UpdateComponent Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);

	if (ContinueUpdate != nullptr)
		*ContinueUpdate = Parms.ContinueUpdate;
}

}

