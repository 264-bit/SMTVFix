#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleAutoBattleCtrl

#include "Basic.hpp"

#include "BattleAutoBattleCtrl_classes.hpp"
#include "BattleAutoBattleCtrl_parameters.hpp"


namespace SDK
{

// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.ExecuteUbergraph_BattleAutoBattleCtrl
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleAutoBattleCtrl_C::ExecuteUbergraph_BattleAutoBattleCtrl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "ExecuteUbergraph_BattleAutoBattleCtrl");

	Params::BattleAutoBattleCtrl_C_ExecuteUbergraph_BattleAutoBattleCtrl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleAutoBattleCtrl_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "ReceiveTick");

	Params::BattleAutoBattleCtrl_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.IsAutoInputValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleAutoBattleCtrl_C::IsAutoInputValid(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "IsAutoInputValid");

	Params::BattleAutoBattleCtrl_C_IsAutoInputValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.UpdateAutoState
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleAutoBattleCtrl_C::UpdateAutoState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "UpdateAutoState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleAutoBattleCtrl_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.StartSeq
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleAutoBattleCtrl_C::StartSeq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "StartSeq");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.PauseSeq
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pause                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleAutoBattleCtrl_C::PauseSeq(bool Pause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "PauseSeq");

	Params::BattleAutoBattleCtrl_C_PauseSeq Parms{};

	Parms.Pause = Pause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.GetMainInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_MainInterface>AsBPI_Main_Interface                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleAutoBattleCtrl_C::GetMainInterface(TScriptInterface<class IBPI_MainInterface>* AsBPI_Main_Interface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "GetMainInterface");

	Params::BattleAutoBattleCtrl_C_GetMainInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsBPI_Main_Interface != nullptr)
		*AsBPI_Main_Interface = Parms.AsBPI_Main_Interface;
}


// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.BeginAutoBattle
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleAutoBattleCtrl_C::BeginAutoBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "BeginAutoBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.EndAutoBattle
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleAutoBattleCtrl_C::EndAutoBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "EndAutoBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleAutoBattleCtrl.BattleAutoBattleCtrl_C.UpdateComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ContinueUpdate                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleAutoBattleCtrl_C::UpdateComponent(float Delta, bool* ContinueUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleAutoBattleCtrl_C", "UpdateComponent");

	Params::BattleAutoBattleCtrl_C_UpdateComponent Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);

	if (ContinueUpdate != nullptr)
		*ContinueUpdate = Parms.ContinueUpdate;
}

}

