#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Dev304_Simple

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DevilBaseLight_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Dev304_Simple.Dev304_Simple_C
// 0x0078 (0x0AF8 - 0x0A80)
class ADev304_Simple_C final : public ADevilBaseLight_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Dev304_Simple_C;                    // 0x0A80(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAtomComponent*                         Dev_se_p02;                                        // 0x0A88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         Dev304_se_p00;                                     // 0x0A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm_Up;                                      // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ParentRotationScene_C*              BP_ParentRotationScene;                            // 0x0AA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Dv_304_02;                                         // 0x0AA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        M_Dev304_FishShadow;                               // 0x0AB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        MD_20_009;                                         // 0x0AB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        MD_20_010;                                         // 0x0AC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Dv_304_01_a;                                       // 0x0AC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Dv_304_01_b;                                       // 0x0AD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Dv_304_00_b;                                       // 0x0AD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Dv_304_00_a;                                       // 0x0AE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         M_RunToUnieWait;                                   // 0x0AE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_CaptureTiming;                                   // 0x0AEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_IsBattleNow;                                     // 0x0AF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Dev304_Simple(int32 EntryPoint);
	void SetEffectVolume(float Volume);
	void BattlePlayMotion(E_CHARA_MOTION_ID Param_MotionID, bool Param_IsUseDuration, float Duration, bool IsUseBlendTimeOverride, float BlendTimeOverride, float StartOffsetTime);
	void MoveAfterAnimEndCallback(E_CHARA_MOTION_ID Param_MotionID);
	void PlayMotion(E_CHARA_MOTION_ID Param_MotionID, bool Param_IsUseDuration, float Duration, bool IsUseBlendTimeOverride, float BlendTimeOverride, float StartOffsetTime);
	void Act_RunToUnit(class ACharaBase_C* TargetUnit, float Time, float DirInterp, E_CHARA_MOTION_ID FinishedMotion, float Offset_Dest_Deg);
	void MoveFunc();
	void SwitchMotionTable();
	void IsIdleMotion(E_CHARA_MOTION_ID Param_Motion, bool* IsIdle);
	void DirectionCtrl(E_CHARA_MOTION_ID Param_Motion);
	void Visible_RockAndWater();
	void Visible_Skull();
	void Visible_Body();
	void Invisible_RockAndWater();
	void Invisible_Skull();
	void Invisible_Body();
	void Encount_RockAndWater();
	void Encount_Skull();
	void ParticleCtrl(TArray<class FString>& ComponentNames, bool Visible);
	void DecalCtrl(TArray<class FString>& ComponentNames, bool Visible);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Dev304_Simple_C">();
	}
	static class ADev304_Simple_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADev304_Simple_C>();
	}
};
static_assert(alignof(ADev304_Simple_C) == 0x000008, "Wrong alignment on ADev304_Simple_C");
static_assert(sizeof(ADev304_Simple_C) == 0x000AF8, "Wrong size on ADev304_Simple_C");
static_assert(offsetof(ADev304_Simple_C, UberGraphFrame_Dev304_Simple_C) == 0x000A80, "Member 'ADev304_Simple_C::UberGraphFrame_Dev304_Simple_C' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, Dev_se_p02) == 0x000A88, "Member 'ADev304_Simple_C::Dev_se_p02' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, Dev304_se_p00) == 0x000A90, "Member 'ADev304_Simple_C::Dev304_se_p00' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, SpringArm_Up) == 0x000A98, "Member 'ADev304_Simple_C::SpringArm_Up' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, BP_ParentRotationScene) == 0x000AA0, "Member 'ADev304_Simple_C::BP_ParentRotationScene' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, Dv_304_02) == 0x000AA8, "Member 'ADev304_Simple_C::Dv_304_02' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, M_Dev304_FishShadow) == 0x000AB0, "Member 'ADev304_Simple_C::M_Dev304_FishShadow' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, MD_20_009) == 0x000AB8, "Member 'ADev304_Simple_C::MD_20_009' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, MD_20_010) == 0x000AC0, "Member 'ADev304_Simple_C::MD_20_010' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, Dv_304_01_a) == 0x000AC8, "Member 'ADev304_Simple_C::Dv_304_01_a' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, Dv_304_01_b) == 0x000AD0, "Member 'ADev304_Simple_C::Dv_304_01_b' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, Dv_304_00_b) == 0x000AD8, "Member 'ADev304_Simple_C::Dv_304_00_b' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, Dv_304_00_a) == 0x000AE0, "Member 'ADev304_Simple_C::Dv_304_00_a' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, M_RunToUnieWait) == 0x000AE8, "Member 'ADev304_Simple_C::M_RunToUnieWait' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, M_CaptureTiming) == 0x000AEC, "Member 'ADev304_Simple_C::M_CaptureTiming' has a wrong offset!");
static_assert(offsetof(ADev304_Simple_C, M_IsBattleNow) == 0x000AF0, "Member 'ADev304_Simple_C::M_IsBattleNow' has a wrong offset!");

}

