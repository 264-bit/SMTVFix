#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DialogCtrl

#include "Basic.hpp"

#include "BPI_DialogCtrl_classes.hpp"
#include "BPI_DialogCtrl_parameters.hpp"


namespace SDK
{

// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IOpenDialog
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_DialogCtrl_C::IOpenDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IOpenDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IIsOpenedDialogWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DialogCtrl_C::IIsOpenedDialogWindow(bool* OutFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IIsOpenedDialogWindow");

	Params::BPI_DialogCtrl_C_IIsOpenedDialogWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFinished != nullptr)
		*OutFinished = Parms.OutFinished;
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IDialogOn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_WIDGET_PRIO                           InPrio                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DialogCtrl_C::IDialogOn(E_WIDGET_PRIO InPrio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IDialogOn");

	Params::BPI_DialogCtrl_C_IDialogOn Parms{};

	Parms.InPrio = InPrio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.ISetDialogText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              InScriptMessageAsset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InLabel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InBuildText                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DialogCtrl_C::ISetDialogText(class UScriptMessageAsset* InScriptMessageAsset, class FName InLabel, bool InBuildText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "ISetDialogText");

	Params::BPI_DialogCtrl_C_ISetDialogText Parms{};

	Parms.InScriptMessageAsset = InScriptMessageAsset;
	Parms.InLabel = InLabel;
	Parms.InBuildText = InBuildText;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IClearDialogText
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_DialogCtrl_C::IClearDialogText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IClearDialogText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IIsSetDialogText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DialogCtrl_C::IIsSetDialogText(bool* OutFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IIsSetDialogText");

	Params::BPI_DialogCtrl_C_IIsSetDialogText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFinished != nullptr)
		*OutFinished = Parms.OutFinished;
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.ICloseDialog
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_DialogCtrl_C::ICloseDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "ICloseDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IIsClosedDialogWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DialogCtrl_C::IIsClosedDialogWindow(bool* OutFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IIsClosedDialogWindow");

	Params::BPI_DialogCtrl_C_IIsClosedDialogWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFinished != nullptr)
		*OutFinished = Parms.OutFinished;
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IExecutionOpenDialog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InUseRunningIcon                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DialogCtrl_C::IExecutionOpenDialog(bool InUseRunningIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IExecutionOpenDialog");

	Params::BPI_DialogCtrl_C_IExecutionOpenDialog Parms{};

	Parms.InUseRunningIcon = InUseRunningIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IExecutionCloseDialog
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_DialogCtrl_C::IExecutionCloseDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IExecutionCloseDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.ISetDialogSelectText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InMenuNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InInitCursorPosition                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UScriptMessageAsset*              InScriptMessageAsset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     InSelectItemName                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void IBPI_DialogCtrl_C::ISetDialogSelectText(int32 InMenuNumber, int32 InInitCursorPosition, class UScriptMessageAsset* InScriptMessageAsset, const TArray<class FName>& InSelectItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "ISetDialogSelectText");

	Params::BPI_DialogCtrl_C_ISetDialogSelectText Parms{};

	Parms.InMenuNumber = InMenuNumber;
	Parms.InInitCursorPosition = InInitCursorPosition;
	Parms.InScriptMessageAsset = InScriptMessageAsset;
	Parms.InSelectItemName = std::move(InSelectItemName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.ISetDialogSelectTextByIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InMenuNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InInitCursorPosition                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UScriptMessageAsset*              InScriptMessageAsset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           InSelectItemIndex                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void IBPI_DialogCtrl_C::ISetDialogSelectTextByIndex(int32 InMenuNumber, int32 InInitCursorPosition, class UScriptMessageAsset* InScriptMessageAsset, const TArray<int32>& InSelectItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "ISetDialogSelectTextByIndex");

	Params::BPI_DialogCtrl_C_ISetDialogSelectTextByIndex Parms{};

	Parms.InMenuNumber = InMenuNumber;
	Parms.InInitCursorPosition = InInitCursorPosition;
	Parms.InScriptMessageAsset = InScriptMessageAsset;
	Parms.InSelectItemIndex = std::move(InSelectItemIndex);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IMoveDialogSelectCursor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InParam                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DialogCtrl_C::IMoveDialogSelectCursor(int32 InParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IMoveDialogSelectCursor");

	Params::BPI_DialogCtrl_C_IMoveDialogSelectCursor Parms{};

	Parms.InParam = InParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IDialogSelectTextOff
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_DialogCtrl_C::IDialogSelectTextOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IDialogSelectTextOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IGetDialogSelectedCursorPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OutIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DialogCtrl_C::IGetDialogSelectedCursorPosition(int32* OutIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IGetDialogSelectedCursorPosition");

	Params::BPI_DialogCtrl_C_IGetDialogSelectedCursorPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutIndex != nullptr)
		*OutIndex = Parms.OutIndex;
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.ISetDialogTextFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InExecution                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InBuild                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DialogCtrl_C::ISetDialogTextFlag(bool InExecution, bool InBuild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "ISetDialogTextFlag");

	Params::BPI_DialogCtrl_C_ISetDialogTextFlag Parms{};

	Parms.InExecution = InExecution;
	Parms.InBuild = InBuild;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IDialogRunningIconOn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InExecutionFlag                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DialogCtrl_C::IDialogRunningIconOn(bool InExecutionFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IDialogRunningIconOn");

	Params::BPI_DialogCtrl_C_IDialogRunningIconOn Parms{};

	Parms.InExecutionFlag = InExecutionFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IDialogRunningIconOff
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InExecutionFlag                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DialogCtrl_C::IDialogRunningIconOff(bool InExecutionFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IDialogRunningIconOff");

	Params::BPI_DialogCtrl_C_IDialogRunningIconOff Parms{};

	Parms.InExecutionFlag = InExecutionFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IDialogSetValueParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValueParam                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DialogCtrl_C::IDialogSetValueParam(int32 InIndex, int32 InValueParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IDialogSetValueParam");

	Params::BPI_DialogCtrl_C_IDialogSetValueParam Parms{};

	Parms.InIndex = InIndex;
	Parms.InValueParam = InValueParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IDialogSetBuildText
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_DialogCtrl_C::IDialogSetBuildText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IDialogSetBuildText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IDialogSetProgramValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_DialogCtrl_C::IDialogSetProgramValue(int32 InIndex, const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IDialogSetProgramValue");

	Params::BPI_DialogCtrl_C_IDialogSetProgramValue Parms{};

	Parms.InIndex = InIndex;
	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DialogCtrl.BPI_DialogCtrl_C.IWasConfirmedByMouse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bConfirmed                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ItemIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DialogCtrl_C::IWasConfirmedByMouse(bool bReset, bool* bConfirmed, int32* ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DialogCtrl_C", "IWasConfirmedByMouse");

	Params::BPI_DialogCtrl_C_IWasConfirmedByMouse Parms{};

	Parms.bReset = bReset;

	UObject::ProcessEvent(Func, &Parms);

	if (bConfirmed != nullptr)
		*bConfirmed = Parms.bConfirmed;

	if (ItemIndex != nullptr)
		*ItemIndex = Parms.ItemIndex;
}

}

