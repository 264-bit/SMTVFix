#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_EventScript

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_EventScript.BPI_EventScript_C.SpawnReflesh
// 0x0001 (0x0001 - 0x0000)
struct BPI_EventScript_C_SpawnReflesh final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_SpawnReflesh) == 0x000001, "Wrong alignment on BPI_EventScript_C_SpawnReflesh");
static_assert(sizeof(BPI_EventScript_C_SpawnReflesh) == 0x000001, "Wrong size on BPI_EventScript_C_SpawnReflesh");
static_assert(offsetof(BPI_EventScript_C_SpawnReflesh, NoUse) == 0x000000, "Member 'BPI_EventScript_C_SpawnReflesh::NoUse' has a wrong offset!");

// Function BPI_EventScript.BPI_EventScript_C.PlayDeadMotion
// 0x0001 (0x0001 - 0x0000)
struct BPI_EventScript_C_PlayDeadMotion final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_PlayDeadMotion) == 0x000001, "Wrong alignment on BPI_EventScript_C_PlayDeadMotion");
static_assert(sizeof(BPI_EventScript_C_PlayDeadMotion) == 0x000001, "Wrong size on BPI_EventScript_C_PlayDeadMotion");
static_assert(offsetof(BPI_EventScript_C_PlayDeadMotion, Active) == 0x000000, "Member 'BPI_EventScript_C_PlayDeadMotion::Active' has a wrong offset!");

// Function BPI_EventScript.BPI_EventScript_C.BI_FadeInBlack
// 0x0008 (0x0008 - 0x0000)
struct BPI_EventScript_C_BI_FadeInBlack final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_BI_FadeInBlack) == 0x000004, "Wrong alignment on BPI_EventScript_C_BI_FadeInBlack");
static_assert(sizeof(BPI_EventScript_C_BI_FadeInBlack) == 0x000008, "Wrong size on BPI_EventScript_C_BI_FadeInBlack");
static_assert(offsetof(BPI_EventScript_C_BI_FadeInBlack, Time) == 0x000000, "Member 'BPI_EventScript_C_BI_FadeInBlack::Time' has a wrong offset!");
static_assert(offsetof(BPI_EventScript_C_BI_FadeInBlack, Ret) == 0x000004, "Member 'BPI_EventScript_C_BI_FadeInBlack::Ret' has a wrong offset!");

// Function BPI_EventScript.BPI_EventScript_C.BI_FadeOutBlack
// 0x0008 (0x0008 - 0x0000)
struct BPI_EventScript_C_BI_FadeOutBlack final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_BI_FadeOutBlack) == 0x000004, "Wrong alignment on BPI_EventScript_C_BI_FadeOutBlack");
static_assert(sizeof(BPI_EventScript_C_BI_FadeOutBlack) == 0x000008, "Wrong size on BPI_EventScript_C_BI_FadeOutBlack");
static_assert(offsetof(BPI_EventScript_C_BI_FadeOutBlack, Time) == 0x000000, "Member 'BPI_EventScript_C_BI_FadeOutBlack::Time' has a wrong offset!");
static_assert(offsetof(BPI_EventScript_C_BI_FadeOutBlack, Ret) == 0x000004, "Member 'BPI_EventScript_C_BI_FadeOutBlack::Ret' has a wrong offset!");

// Function BPI_EventScript.BPI_EventScript_C.BI_FadeInWhite
// 0x0008 (0x0008 - 0x0000)
struct BPI_EventScript_C_BI_FadeInWhite final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_BI_FadeInWhite) == 0x000004, "Wrong alignment on BPI_EventScript_C_BI_FadeInWhite");
static_assert(sizeof(BPI_EventScript_C_BI_FadeInWhite) == 0x000008, "Wrong size on BPI_EventScript_C_BI_FadeInWhite");
static_assert(offsetof(BPI_EventScript_C_BI_FadeInWhite, Time) == 0x000000, "Member 'BPI_EventScript_C_BI_FadeInWhite::Time' has a wrong offset!");
static_assert(offsetof(BPI_EventScript_C_BI_FadeInWhite, Ret) == 0x000004, "Member 'BPI_EventScript_C_BI_FadeInWhite::Ret' has a wrong offset!");

// Function BPI_EventScript.BPI_EventScript_C.BI_FadeOutWhite
// 0x0008 (0x0008 - 0x0000)
struct BPI_EventScript_C_BI_FadeOutWhite final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_BI_FadeOutWhite) == 0x000004, "Wrong alignment on BPI_EventScript_C_BI_FadeOutWhite");
static_assert(sizeof(BPI_EventScript_C_BI_FadeOutWhite) == 0x000008, "Wrong size on BPI_EventScript_C_BI_FadeOutWhite");
static_assert(offsetof(BPI_EventScript_C_BI_FadeOutWhite, Time) == 0x000000, "Member 'BPI_EventScript_C_BI_FadeOutWhite::Time' has a wrong offset!");
static_assert(offsetof(BPI_EventScript_C_BI_FadeOutWhite, Ret) == 0x000004, "Member 'BPI_EventScript_C_BI_FadeOutWhite::Ret' has a wrong offset!");

// Function BPI_EventScript.BPI_EventScript_C.BI_DeleteScript
// 0x0001 (0x0001 - 0x0000)
struct BPI_EventScript_C_BI_DeleteScript final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_BI_DeleteScript) == 0x000001, "Wrong alignment on BPI_EventScript_C_BI_DeleteScript");
static_assert(sizeof(BPI_EventScript_C_BI_DeleteScript) == 0x000001, "Wrong size on BPI_EventScript_C_BI_DeleteScript");
static_assert(offsetof(BPI_EventScript_C_BI_DeleteScript, NoUse) == 0x000000, "Member 'BPI_EventScript_C_BI_DeleteScript::NoUse' has a wrong offset!");

// Function BPI_EventScript.BPI_EventScript_C.BI_SpawnScript
// 0x0001 (0x0001 - 0x0000)
struct BPI_EventScript_C_BI_SpawnScript final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_BI_SpawnScript) == 0x000001, "Wrong alignment on BPI_EventScript_C_BI_SpawnScript");
static_assert(sizeof(BPI_EventScript_C_BI_SpawnScript) == 0x000001, "Wrong size on BPI_EventScript_C_BI_SpawnScript");
static_assert(offsetof(BPI_EventScript_C_BI_SpawnScript, NoUse) == 0x000000, "Member 'BPI_EventScript_C_BI_SpawnScript::NoUse' has a wrong offset!");

// Function BPI_EventScript.BPI_EventScript_C.BI_CheckActiveArea
// 0x0001 (0x0001 - 0x0000)
struct BPI_EventScript_C_BI_CheckActiveArea final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_BI_CheckActiveArea) == 0x000001, "Wrong alignment on BPI_EventScript_C_BI_CheckActiveArea");
static_assert(sizeof(BPI_EventScript_C_BI_CheckActiveArea) == 0x000001, "Wrong size on BPI_EventScript_C_BI_CheckActiveArea");
static_assert(offsetof(BPI_EventScript_C_BI_CheckActiveArea, IsActive) == 0x000000, "Member 'BPI_EventScript_C_BI_CheckActiveArea::IsActive' has a wrong offset!");

// Function BPI_EventScript.BPI_EventScript_C.ForceSpawnScript
// 0x0001 (0x0001 - 0x0000)
struct BPI_EventScript_C_ForceSpawnScript final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_ForceSpawnScript) == 0x000001, "Wrong alignment on BPI_EventScript_C_ForceSpawnScript");
static_assert(sizeof(BPI_EventScript_C_ForceSpawnScript) == 0x000001, "Wrong size on BPI_EventScript_C_ForceSpawnScript");
static_assert(offsetof(BPI_EventScript_C_ForceSpawnScript, NoUse) == 0x000000, "Member 'BPI_EventScript_C_ForceSpawnScript::NoUse' has a wrong offset!");

// Function BPI_EventScript.BPI_EventScript_C.BI_SetInvalidWindow
// 0x0002 (0x0002 - 0x0000)
struct BPI_EventScript_C_BI_SetInvalidWindow final
{
public:
	bool                                          Invalid;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_EventScript_C_BI_SetInvalidWindow) == 0x000001, "Wrong alignment on BPI_EventScript_C_BI_SetInvalidWindow");
static_assert(sizeof(BPI_EventScript_C_BI_SetInvalidWindow) == 0x000002, "Wrong size on BPI_EventScript_C_BI_SetInvalidWindow");
static_assert(offsetof(BPI_EventScript_C_BI_SetInvalidWindow, Invalid) == 0x000000, "Member 'BPI_EventScript_C_BI_SetInvalidWindow::Invalid' has a wrong offset!");
static_assert(offsetof(BPI_EventScript_C_BI_SetInvalidWindow, NoUse) == 0x000001, "Member 'BPI_EventScript_C_BI_SetInvalidWindow::NoUse' has a wrong offset!");

}

