#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Pla603

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_Pla603.BPI_Pla603_C.BeginEstoma
// 0x0001 (0x0001 - 0x0000)
struct BPI_Pla603_C_BeginEstoma final
{
public:
	bool                                          bPlaySE;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Pla603_C_BeginEstoma) == 0x000001, "Wrong alignment on BPI_Pla603_C_BeginEstoma");
static_assert(sizeof(BPI_Pla603_C_BeginEstoma) == 0x000001, "Wrong size on BPI_Pla603_C_BeginEstoma");
static_assert(offsetof(BPI_Pla603_C_BeginEstoma, bPlaySE) == 0x000000, "Member 'BPI_Pla603_C_BeginEstoma::bPlaySE' has a wrong offset!");

// Function BPI_Pla603.BPI_Pla603_C.EndEstoma
// 0x0001 (0x0001 - 0x0000)
struct BPI_Pla603_C_EndEstoma final
{
public:
	bool                                          bPlaySE;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Pla603_C_EndEstoma) == 0x000001, "Wrong alignment on BPI_Pla603_C_EndEstoma");
static_assert(sizeof(BPI_Pla603_C_EndEstoma) == 0x000001, "Wrong size on BPI_Pla603_C_EndEstoma");
static_assert(offsetof(BPI_Pla603_C_EndEstoma, bPlaySE) == 0x000000, "Member 'BPI_Pla603_C_EndEstoma::bPlaySE' has a wrong offset!");

// Function BPI_Pla603.BPI_Pla603_C.BeginRiberama
// 0x0001 (0x0001 - 0x0000)
struct BPI_Pla603_C_BeginRiberama final
{
public:
	bool                                          PlaySE;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Pla603_C_BeginRiberama) == 0x000001, "Wrong alignment on BPI_Pla603_C_BeginRiberama");
static_assert(sizeof(BPI_Pla603_C_BeginRiberama) == 0x000001, "Wrong size on BPI_Pla603_C_BeginRiberama");
static_assert(offsetof(BPI_Pla603_C_BeginRiberama, PlaySE) == 0x000000, "Member 'BPI_Pla603_C_BeginRiberama::PlaySE' has a wrong offset!");

// Function BPI_Pla603.BPI_Pla603_C.EndRiberama
// 0x0001 (0x0001 - 0x0000)
struct BPI_Pla603_C_EndRiberama final
{
public:
	bool                                          PlaySE;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Pla603_C_EndRiberama) == 0x000001, "Wrong alignment on BPI_Pla603_C_EndRiberama");
static_assert(sizeof(BPI_Pla603_C_EndRiberama) == 0x000001, "Wrong size on BPI_Pla603_C_EndRiberama");
static_assert(offsetof(BPI_Pla603_C_EndRiberama, PlaySE) == 0x000000, "Member 'BPI_Pla603_C_EndRiberama::PlaySE' has a wrong offset!");

// Function BPI_Pla603.BPI_Pla603_C.FormChange
// 0x0002 (0x0002 - 0x0000)
struct BPI_Pla603_C_FormChange final
{
public:
	bool                                          TSUKUYOMI;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Pla603_C_FormChange) == 0x000001, "Wrong alignment on BPI_Pla603_C_FormChange");
static_assert(sizeof(BPI_Pla603_C_FormChange) == 0x000002, "Wrong size on BPI_Pla603_C_FormChange");
static_assert(offsetof(BPI_Pla603_C_FormChange, TSUKUYOMI) == 0x000000, "Member 'BPI_Pla603_C_FormChange::TSUKUYOMI' has a wrong offset!");
static_assert(offsetof(BPI_Pla603_C_FormChange, NewParam) == 0x000001, "Member 'BPI_Pla603_C_FormChange::NewParam' has a wrong offset!");

// Function BPI_Pla603.BPI_Pla603_C.IsTsukuyomiForm
// 0x0001 (0x0001 - 0x0000)
struct BPI_Pla603_C_IsTsukuyomiForm final
{
public:
	bool                                          TsukuyomiForm;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Pla603_C_IsTsukuyomiForm) == 0x000001, "Wrong alignment on BPI_Pla603_C_IsTsukuyomiForm");
static_assert(sizeof(BPI_Pla603_C_IsTsukuyomiForm) == 0x000001, "Wrong size on BPI_Pla603_C_IsTsukuyomiForm");
static_assert(offsetof(BPI_Pla603_C_IsTsukuyomiForm, TsukuyomiForm) == 0x000000, "Member 'BPI_Pla603_C_IsTsukuyomiForm::TsukuyomiForm' has a wrong offset!");

// Function BPI_Pla603.BPI_Pla603_C.SetRideCoasterSlopeAngle
// 0x0008 (0x0008 - 0x0000)
struct BPI_Pla603_C_SetRideCoasterSlopeAngle final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Pla603_C_SetRideCoasterSlopeAngle) == 0x000004, "Wrong alignment on BPI_Pla603_C_SetRideCoasterSlopeAngle");
static_assert(sizeof(BPI_Pla603_C_SetRideCoasterSlopeAngle) == 0x000008, "Wrong size on BPI_Pla603_C_SetRideCoasterSlopeAngle");
static_assert(offsetof(BPI_Pla603_C_SetRideCoasterSlopeAngle, Angle) == 0x000000, "Member 'BPI_Pla603_C_SetRideCoasterSlopeAngle::Angle' has a wrong offset!");
static_assert(offsetof(BPI_Pla603_C_SetRideCoasterSlopeAngle, NewParam) == 0x000004, "Member 'BPI_Pla603_C_SetRideCoasterSlopeAngle::NewParam' has a wrong offset!");

// Function BPI_Pla603.BPI_Pla603_C.CheckIdleAnimBP
// 0x0001 (0x0001 - 0x0000)
struct BPI_Pla603_C_CheckIdleAnimBP final
{
public:
	bool                                          Idle;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Pla603_C_CheckIdleAnimBP) == 0x000001, "Wrong alignment on BPI_Pla603_C_CheckIdleAnimBP");
static_assert(sizeof(BPI_Pla603_C_CheckIdleAnimBP) == 0x000001, "Wrong size on BPI_Pla603_C_CheckIdleAnimBP");
static_assert(offsetof(BPI_Pla603_C_CheckIdleAnimBP, Idle) == 0x000000, "Member 'BPI_Pla603_C_CheckIdleAnimBP::Idle' has a wrong offset!");

}

