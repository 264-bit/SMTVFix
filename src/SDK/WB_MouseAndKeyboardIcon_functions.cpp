#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MouseAndKeyboardIcon

#include "Basic.hpp"

#include "WB_MouseAndKeyboardIcon_classes.hpp"
#include "WB_MouseAndKeyboardIcon_parameters.hpp"


namespace SDK
{

// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.OnClickedKeyboardIcon__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTN_HELP_MAPPING_KEY_TYPE             OnClickedHelpType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OnClickedHelpIdx                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::OnClickedKeyboardIcon__DelegateSignature(E_BTN_HELP_MAPPING_KEY_TYPE OnClickedHelpType, int32 OnClickedHelpIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "OnClickedKeyboardIcon__DelegateSignature");

	Params::WB_MouseAndKeyboardIcon_C_OnClickedKeyboardIcon__DelegateSignature Parms{};

	Parms.OnClickedHelpType = OnClickedHelpType;
	Parms.OnClickedHelpIdx = OnClickedHelpIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.OnReleasedKeyboardIcon__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTN_HELP_MAPPING_KEY_TYPE             OnClickedHelpType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OnClickedHelpIdx                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::OnReleasedKeyboardIcon__DelegateSignature(E_BTN_HELP_MAPPING_KEY_TYPE OnClickedHelpType, int32 OnClickedHelpIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "OnReleasedKeyboardIcon__DelegateSignature");

	Params::WB_MouseAndKeyboardIcon_C_OnReleasedKeyboardIcon__DelegateSignature Parms{};

	Parms.OnClickedHelpType = OnClickedHelpType;
	Parms.OnClickedHelpIdx = OnClickedHelpIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.ExecuteUbergraph_WB_MouseAndKeyboardIcon
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::ExecuteUbergraph_WB_MouseAndKeyboardIcon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "ExecuteUbergraph_WB_MouseAndKeyboardIcon");

	Params::WB_MouseAndKeyboardIcon_C_ExecuteUbergraph_WB_MouseAndKeyboardIcon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_2_ButtonSimpleEventS5__DelegateSignature
// (BlueprintEvent)

void UWB_MouseAndKeyboardIcon_C::BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_2_ButtonSimpleEventS5__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_2_ButtonSimpleEventS5__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_1_ButtonDragDrppEventS5__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector2D                        StartPos                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        StartUV                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        CurrentPos                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        CurrentUV                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_1_ButtonDragDrppEventS5__DelegateSignature(const struct FVector2D& StartPos, const struct FVector2D& StartUV, const struct FVector2D& CurrentPos, const struct FVector2D& CurrentUV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_1_ButtonDragDrppEventS5__DelegateSignature");

	Params::WB_MouseAndKeyboardIcon_C_BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_1_ButtonDragDrppEventS5__DelegateSignature Parms{};

	Parms.StartPos = std::move(StartPos);
	Parms.StartUV = std::move(StartUV);
	Parms.CurrentPos = std::move(CurrentPos);
	Parms.CurrentUV = std::move(CurrentUV);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector2D                        Pos                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        UV                                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature");

	Params::WB_MouseAndKeyboardIcon_C_BndEvt__WB_MouseAndKeyboardIcon_ButtonS5_64_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature Parms{};

	Parms.Pos = std::move(Pos);
	Parms.UV = std::move(UV);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_MouseAndKeyboardIcon_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "PreConstruct");

	Params::WB_MouseAndKeyboardIcon_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.SetIconInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             InKeyInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::SetIconInfo(const struct FKey& InKeyInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "SetIconInfo");

	Params::WB_MouseAndKeyboardIcon_C_SetIconInfo Parms{};

	Parms.InKeyInfo = std::move(InKeyInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.SetIconSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTN_ICON_SIZE                         InIconSize2                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::SetIconSize(E_BTN_ICON_SIZE InIconSize2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "SetIconSize");

	Params::WB_MouseAndKeyboardIcon_C_SetIconSize Parms{};

	Parms.InIconSize2 = InIconSize2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.SetIconColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::SetIconColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "SetIconColor");

	Params::WB_MouseAndKeyboardIcon_C_SetIconColor Parms{};

	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.SetIconColor_ByActiveState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActiveColor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_MouseAndKeyboardIcon_C::SetIconColor_ByActiveState(bool IsActiveColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "SetIconColor_ByActiveState");

	Params::WB_MouseAndKeyboardIcon_C_SetIconColor_ByActiveState Parms{};

	Parms.IsActiveColor = IsActiveColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.SetClickedReactMapping
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTN_HELP_MAPPING_KEY_TYPE             Param_OnClickedReactType                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_OnClickedReactIdx                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::SetClickedReactMapping(E_BTN_HELP_MAPPING_KEY_TYPE Param_OnClickedReactType, int32 Param_OnClickedReactIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "SetClickedReactMapping");

	Params::WB_MouseAndKeyboardIcon_C_SetClickedReactMapping Parms{};

	Parms.Param_OnClickedReactType = Param_OnClickedReactType;
	Parms.Param_OnClickedReactIdx = Param_OnClickedReactIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.UpdateButtonS5
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_MouseAndKeyboardIcon_C::UpdateButtonS5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "UpdateButtonS5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.IsMouseIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsMouse                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_MouseAndKeyboardIcon_C::IsMouseIcon(bool* Param_IsMouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "IsMouseIcon");

	Params::WB_MouseAndKeyboardIcon_C_IsMouseIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsMouse != nullptr)
		*Param_IsMouse = Parms.Param_IsMouse;
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.IsExternalFont
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsExternalFont                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_MouseAndKeyboardIcon_C::IsExternalFont(bool* Param_IsExternalFont)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "IsExternalFont");

	Params::WB_MouseAndKeyboardIcon_C_IsExternalFont Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsExternalFont != nullptr)
		*Param_IsExternalFont = Parms.Param_IsExternalFont;
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.GetKeyText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             KeyboardText                                           (Parm, OutParm)

void UWB_MouseAndKeyboardIcon_C::GetKeyText(class FText* KeyboardText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "GetKeyText");

	Params::WB_MouseAndKeyboardIcon_C_GetKeyText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KeyboardText != nullptr)
		*KeyboardText = std::move(Parms.KeyboardText);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.GetKeyTextFont
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateFontInfo                   Font                                                   (Parm, OutParm, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::GetKeyTextFont(struct FSlateFontInfo* Font)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "GetKeyTextFont");

	Params::WB_MouseAndKeyboardIcon_C_GetKeyTextFont Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Font != nullptr)
		*Font = std::move(Parms.Font);
}


// Function WB_MouseAndKeyboardIcon.WB_MouseAndKeyboardIcon_C.GetKeyboardIconSsPlayerFrame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   KeyboardText                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MouseAndKeyboardIcon_C::GetKeyboardIconSsPlayerFrame(int32* KeyboardText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MouseAndKeyboardIcon_C", "GetKeyboardIconSsPlayerFrame");

	Params::WB_MouseAndKeyboardIcon_C_GetKeyboardIconSsPlayerFrame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KeyboardText != nullptr)
		*KeyboardText = Parms.KeyboardText;
}

}

