#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventScriptArea

#include "Basic.hpp"

#include "BP_EventScriptArea_classes.hpp"
#include "BP_EventScriptArea_parameters.hpp"


namespace SDK
{

// Function BP_EventScriptArea.BP_EventScriptArea_C.ExecuteUbergraph_BP_EventScriptArea
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventScriptArea_C::ExecuteUbergraph_BP_EventScriptArea(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "ExecuteUbergraph_BP_EventScriptArea");

	Params::BP_EventScriptArea_C_ExecuteUbergraph_BP_EventScriptArea Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.SpawnScriptSplit
// (BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::SpawnScriptSplit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "SpawnScriptSplit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BndEvt__UnloadBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventScriptArea_C::BndEvt__UnloadBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BndEvt__UnloadBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_EventScriptArea_C_BndEvt__UnloadBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BndEvt__LoadBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_EventScriptArea_C::BndEvt__LoadBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BndEvt__LoadBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_EventScriptArea_C_BndEvt__LoadBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.SpawnRefresh
// (BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::SpawnRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "SpawnRefresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.EndOverlap
// (BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::EndOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "EndOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BeginOverlap
// (BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::BeginOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BeginOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EventScriptArea_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BI_RecalcOverlap
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::BI_RecalcOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BI_RecalcOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BI_ChangeMaterialAlice
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::BI_ChangeMaterialAlice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BI_ChangeMaterialAlice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.PlayDeadMotion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::PlayDeadMotion(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "PlayDeadMotion");

	Params::BP_EventScriptArea_C_PlayDeadMotion Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.CallDeactivate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::CallDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "CallDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.DestroyKeyFree
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::DestroyKeyFree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "DestroyKeyFree");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.CheckActive
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::CheckActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "CheckActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.MakeActorList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::MakeActorList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "MakeActorList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.SpawnScript
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::SpawnScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "SpawnScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.DeleteScript
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventScriptArea_C::DeleteScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "DeleteScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.CheckActiveArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::CheckActiveArea(bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "CheckActiveArea");

	Params::BP_EventScriptArea_C_CheckActiveArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.SpawnReflesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::SpawnReflesh(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "SpawnReflesh");

	Params::BP_EventScriptArea_C_SpawnReflesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BI_FadeInBlack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::BI_FadeInBlack(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BI_FadeInBlack");

	Params::BP_EventScriptArea_C_BI_FadeInBlack Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BI_FadeOutBlack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::BI_FadeOutBlack(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BI_FadeOutBlack");

	Params::BP_EventScriptArea_C_BI_FadeOutBlack Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BI_FadeInWhite
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::BI_FadeInWhite(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BI_FadeInWhite");

	Params::BP_EventScriptArea_C_BI_FadeInWhite Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BI_FadeOutWhite
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::BI_FadeOutWhite(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BI_FadeOutWhite");

	Params::BP_EventScriptArea_C_BI_FadeOutWhite Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BI_DeleteScript
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::BI_DeleteScript(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BI_DeleteScript");

	Params::BP_EventScriptArea_C_BI_DeleteScript Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BI_SpawnScript
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::BI_SpawnScript(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BI_SpawnScript");

	Params::BP_EventScriptArea_C_BI_SpawnScript Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BI_CheckActiveArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::BI_CheckActiveArea(bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BI_CheckActiveArea");

	Params::BP_EventScriptArea_C_BI_CheckActiveArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.ForceSpawnScript
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::ForceSpawnScript(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "ForceSpawnScript");

	Params::BP_EventScriptArea_C_ForceSpawnScript Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BP_EventScriptArea.BP_EventScriptArea_C.BI_SetInvalidWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Invalid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventScriptArea_C::BI_SetInvalidWindow(bool Invalid, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventScriptArea_C", "BI_SetInvalidWindow");

	Params::BP_EventScriptArea_C_BI_SetInvalidWindow Parms{};

	Parms.Invalid = Invalid;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}

}

