#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_EventScript

#include "Basic.hpp"

#include "BPI_EventScript_classes.hpp"
#include "BPI_EventScript_parameters.hpp"


namespace SDK
{

// Function BPI_EventScript.BPI_EventScript_C.CheckActive
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_EventScript_C::CheckActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "CheckActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_EventScript.BPI_EventScript_C.DestroyKeyFree
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_EventScript_C::DestroyKeyFree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "DestroyKeyFree");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_EventScript.BPI_EventScript_C.CallDeactivate
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_EventScript_C::CallDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "CallDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_EventScript.BPI_EventScript_C.SpawnReflesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::SpawnReflesh(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "SpawnReflesh");

	Params::BPI_EventScript_C_SpawnReflesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_EventScript.BPI_EventScript_C.PlayDeadMotion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::PlayDeadMotion(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "PlayDeadMotion");

	Params::BPI_EventScript_C_PlayDeadMotion Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_EventScript.BPI_EventScript_C.BI_FadeInBlack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::BI_FadeInBlack(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "BI_FadeInBlack");

	Params::BPI_EventScript_C_BI_FadeInBlack Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_EventScript.BPI_EventScript_C.BI_FadeOutBlack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::BI_FadeOutBlack(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "BI_FadeOutBlack");

	Params::BPI_EventScript_C_BI_FadeOutBlack Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_EventScript.BPI_EventScript_C.BI_FadeInWhite
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::BI_FadeInWhite(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "BI_FadeInWhite");

	Params::BPI_EventScript_C_BI_FadeInWhite Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_EventScript.BPI_EventScript_C.BI_FadeOutWhite
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::BI_FadeOutWhite(float Time, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "BI_FadeOutWhite");

	Params::BPI_EventScript_C_BI_FadeOutWhite Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BPI_EventScript.BPI_EventScript_C.BI_DeleteScript
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::BI_DeleteScript(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "BI_DeleteScript");

	Params::BPI_EventScript_C_BI_DeleteScript Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_EventScript.BPI_EventScript_C.BI_SpawnScript
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::BI_SpawnScript(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "BI_SpawnScript");

	Params::BPI_EventScript_C_BI_SpawnScript Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_EventScript.BPI_EventScript_C.BI_CheckActiveArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::BI_CheckActiveArea(bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "BI_CheckActiveArea");

	Params::BPI_EventScript_C_BI_CheckActiveArea Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function BPI_EventScript.BPI_EventScript_C.ForceSpawnScript
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::ForceSpawnScript(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "ForceSpawnScript");

	Params::BPI_EventScript_C_ForceSpawnScript Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_EventScript.BPI_EventScript_C.BI_SetInvalidWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Invalid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EventScript_C::BI_SetInvalidWindow(bool Invalid, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "BI_SetInvalidWindow");

	Params::BPI_EventScript_C_BI_SetInvalidWindow Parms{};

	Parms.Invalid = Invalid;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function BPI_EventScript.BPI_EventScript_C.BI_ChangeMaterialAlice
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_EventScript_C::BI_ChangeMaterialAlice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "BI_ChangeMaterialAlice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_EventScript.BPI_EventScript_C.BI_RecalcOverlap
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_EventScript_C::BI_RecalcOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EventScript_C", "BI_RecalcOverlap");

	UObject::ProcessEvent(Func, nullptr);
}

}

