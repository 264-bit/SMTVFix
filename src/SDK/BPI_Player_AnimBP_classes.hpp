#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Player_AnimBP

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "E_PLAYER_MOVEMENT_STATE_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_Player_AnimBP.BPI_Player_AnimBP_C
// 0x0000 (0x0028 - 0x0028)
class IBPI_Player_AnimBP_C final : public IInterface
{
public:
	void SetMovementVelocity(const struct FVector& IdealVelocity, const struct FVector& Input);
	void SetMovementRotation(const struct FRotator& MomentRotation, const struct FRotator& SlopeRotation);
	void SetMovementState(E_PLAYER_MOVEMENT_STATE State);
	void SetMovementTurnState(bool State, float Angle);
	void SetEventMotionVal(const struct FVector2D& Input);
	void SetEventMotionTap(bool TapFlag);
	void SetEventMotionSpace(class UBlendSpace* BlendSpace, int32 Param_Index);
	void TriggerLanding(float JumpHeight);
	void MapAttackTrigger();
	void MapAttackEnd();
	void SetSwordOpen(bool bSwordOpen);
	void MapAttackReTrigger();
	void MapDamageTrigger();
	void MapDamageEnd();
	void TriggerJumping();
	void ImmediateFallTrigger();
	void SetRunMotionRate(float RunRate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_Player_AnimBP_C">();
	}
	static class IBPI_Player_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_Player_AnimBP_C>();
	}
};
static_assert(alignof(IBPI_Player_AnimBP_C) == 0x000008, "Wrong alignment on IBPI_Player_AnimBP_C");
static_assert(sizeof(IBPI_Player_AnimBP_C) == 0x000028, "Wrong size on IBPI_Player_AnimBP_C");

}

