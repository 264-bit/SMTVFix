#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InfoWindowCtrl

#include "Basic.hpp"

#include "BP_InfoWindowCtrl_classes.hpp"
#include "BP_InfoWindowCtrl_parameters.hpp"


namespace SDK
{

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.ExecuteUbergraph_BP_InfoWindowCtrl
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InfoWindowCtrl_C::ExecuteUbergraph_BP_InfoWindowCtrl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "ExecuteUbergraph_BP_InfoWindowCtrl");

	Params::BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InfoWindowCtrl_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "ReceiveTick");

	Params::BP_InfoWindowCtrl_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InfoWindowCtrl_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "ReceiveEndPlay");

	Params::BP_InfoWindowCtrl_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_InfoWindowCtrl_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowSetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InfoWindowCtrl_C::IInfoWindowSetVisibility(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowSetVisibility");

	Params::BP_InfoWindowCtrl_C_IInfoWindowSetVisibility Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowExecutionClose
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::IInfoWindowExecutionClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowExecutionClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowSetRichTextProgramValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_InfoWindowCtrl_C::IInfoWindowSetRichTextProgramValue(int32 InIndex, const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowSetRichTextProgramValue");

	Params::BP_InfoWindowCtrl_C_IInfoWindowSetRichTextProgramValue Parms{};

	Parms.InIndex = InIndex;
	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowExecutionOpen
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::IInfoWindowExecutionOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowExecutionOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowSetRichTextValueParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValueParam                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InfoWindowCtrl_C::IInfoWindowSetRichTextValueParam(int32 InIndex, int32 InValueParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowSetRichTextValueParam");

	Params::BP_InfoWindowCtrl_C_IInfoWindowSetRichTextValueParam Parms{};

	Parms.InIndex = InIndex;
	Parms.InValueParam = InValueParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowClearMessage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::IInfoWindowClearMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowClearMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowSetMessageByIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              InScriptMessageAsset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InExecutionText                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   InFrame                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InfoWindowCtrl_C::IInfoWindowSetMessageByIndex(class UScriptMessageAsset* InScriptMessageAsset, int32 InIndex, bool InExecutionText, int32 InFrame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowSetMessageByIndex");

	Params::BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex Parms{};

	Parms.InScriptMessageAsset = InScriptMessageAsset;
	Parms.InIndex = InIndex;
	Parms.InExecutionText = InExecutionText;
	Parms.InFrame = InFrame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowSetMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScriptMessageAsset*              InScriptMessageAsset                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InLabel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InExecutionText                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   InFrame                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InfoWindowCtrl_C::IInfoWindowSetMessage(class UScriptMessageAsset* InScriptMessageAsset, class FName InLabel, bool InExecutionText, int32 InFrame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowSetMessage");

	Params::BP_InfoWindowCtrl_C_IInfoWindowSetMessage Parms{};

	Parms.InScriptMessageAsset = InScriptMessageAsset;
	Parms.InLabel = InLabel;
	Parms.InExecutionText = InExecutionText;
	Parms.InFrame = InFrame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowCreate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_WIDGET_PRIO                           InPrio                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InfoWindowCtrl_C::IInfoWindowCreate(E_WIDGET_PRIO InPrio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowCreate");

	Params::BP_InfoWindowCtrl_C_IInfoWindowCreate Parms{};

	Parms.InPrio = InPrio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowClose
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::IInfoWindowClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowOpen
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::IInfoWindowOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowDelete
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::IInfoWindowDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowDelete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.ChangeGstatusParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_INFOWINDOWCTRL                        InGStatus                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InMain                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_InfoWindowCtrl_C::ChangeGstatusParam(E_INFOWINDOWCTRL InGStatus, bool InMain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "ChangeGstatusParam");

	Params::BP_InfoWindowCtrl_C_ChangeGstatusParam Parms{};

	Parms.InGStatus = InGStatus;
	Parms.InMain = InMain;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.Gstatus_Init
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::Gstatus_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "Gstatus_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.Gstatus_WaitWindowOpen
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::Gstatus_WaitWindowOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "Gstatus_WaitWindowOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.Gstatus_SetText
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::Gstatus_SetText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "Gstatus_SetText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.Gstatus_WaitMessage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::Gstatus_WaitMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "Gstatus_WaitMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.Gstatus_WaitWindowClose
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::Gstatus_WaitWindowClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "Gstatus_WaitWindowClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.Gstatus_End
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::Gstatus_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "Gstatus_End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.ClearAllScriptMessageAsset
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_InfoWindowCtrl_C::ClearAllScriptMessageAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "ClearAllScriptMessageAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IIsFinishedInfoWindowClose
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_InfoWindowCtrl_C::IIsFinishedInfoWindowClose(bool* OutFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IIsFinishedInfoWindowClose");

	Params::BP_InfoWindowCtrl_C_IIsFinishedInfoWindowClose Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFinished != nullptr)
		*OutFinished = Parms.OutFinished;
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IIsFinishedInfoWindowOpen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutFinished                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_InfoWindowCtrl_C::IIsFinishedInfoWindowOpen(bool* OutFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IIsFinishedInfoWindowOpen");

	Params::BP_InfoWindowCtrl_C_IIsFinishedInfoWindowOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFinished != nullptr)
		*OutFinished = Parms.OutFinished;
}


// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowGetVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Visibility                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InfoWindowCtrl_C::IInfoWindowGetVisibility(ESlateVisibility* Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InfoWindowCtrl_C", "IInfoWindowGetVisibility");

	Params::BP_InfoWindowCtrl_C_IInfoWindowGetVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Visibility != nullptr)
		*Visibility = Parms.Visibility;
}

}

