#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleActionTask

#include "Basic.hpp"

#include "BattleActionTask_classes.hpp"
#include "BattleActionTask_parameters.hpp"


namespace SDK
{

// Function BattleActionTask.BattleActionTask_C.ExecuteUbergraph_BattleActionTask
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::ExecuteUbergraph_BattleActionTask(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "ExecuteUbergraph_BattleActionTask");

	Params::BattleActionTask_C_ExecuteUbergraph_BattleActionTask Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "ReceiveEndPlay");

	Params::BattleActionTask_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "ReceiveTick");

	Params::BattleActionTask_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABattleActionTask_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.LoadDevil
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DevilID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_CHAR_TYPE                         InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::LoadDevil(int32 DevilID, E_BTL_CHAR_TYPE InType, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "LoadDevil");

	Params::BattleActionTask_C_LoadDevil Parms{};

	Parms.DevilID = DevilID;
	Parms.InType = InType;
	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.LoadCamShakeByName
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::LoadCamShakeByName(const class FString& RowName, float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "LoadCamShakeByName");

	Params::BattleActionTask_C_LoadCamShakeByName Parms{};

	Parms.RowName = std::move(RowName);
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.LoadCamShake
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::LoadCamShake(int32 Param_Index, float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "LoadCamShake");

	Params::BattleActionTask_C_LoadCamShake Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.OnLoaded_334C0E52408A33DBB72A5B83630212D3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABattleActionTask_C::OnLoaded_334C0E52408A33DBB72A5B83630212D3(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "OnLoaded_334C0E52408A33DBB72A5B83630212D3");

	Params::BattleActionTask_C_OnLoaded_334C0E52408A33DBB72A5B83630212D3 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.OnLoaded_31D473D448F67A6FE11186B14EA62705
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABattleActionTask_C::OnLoaded_31D473D448F67A6FE11186B14EA62705(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "OnLoaded_31D473D448F67A6FE11186B14EA62705");

	Params::BattleActionTask_C_OnLoaded_31D473D448F67A6FE11186B14EA62705 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.OnLoaded_DBC923BD4A1BC09E4C36A3A658C84A18
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABattleActionTask_C::OnLoaded_DBC923BD4A1BC09E4C36A3A658C84A18(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "OnLoaded_DBC923BD4A1BC09E4C36A3A658C84A18");

	Params::BattleActionTask_C_OnLoaded_DBC923BD4A1BC09E4C36A3A658C84A18 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.SkillEffectFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::SkillEffectFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "SkillEffectFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.CallFrameEvent
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CallFrameEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CallFrameEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.IsFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::IsFinished(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "IsFinished");

	Params::BattleActionTask_C_IsFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.AddWaitTask
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::AddWaitTask(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddWaitTask");

	Params::BattleActionTask_C_AddWaitTask Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.CheckWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::CheckWait(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CheckWait");

	Params::BattleActionTask_C_CheckWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.GetPecID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::GetPecID(int32* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetPecID");

	Params::BattleActionTask_C_GetPecID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.IsExistWaitPecID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPecID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::IsExistWaitPecID(int32 InPecID, bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "IsExistWaitPecID");

	Params::BattleActionTask_C_IsExistWaitPecID Parms{};

	Parms.InPecID = InPecID;

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.SetAddWaitTaskArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABattleActionTask_C::SetAddWaitTaskArray(TArray<int32>& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "SetAddWaitTaskArray");

	Params::BattleActionTask_C_SetAddWaitTaskArray Parms{};

	Parms.InValue = std::move(InValue);

	UObject::ProcessEvent(Func, &Parms);

	InValue = std::move(Parms.InValue);
}


// Function BattleActionTask.BattleActionTask_C.BadStatFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::BadStatFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "BadStatFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.DamageMotFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::DamageMotFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "DamageMotFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.NumEffectFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::NumEffectFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "NumEffectFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddHPMPFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddHPMPFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddHPMPFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetParentName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           RetParentName                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABattleActionTask_C::GetParentName(class FString* RetParentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetParentName");

	Params::BattleActionTask_C_GetParentName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetParentName != nullptr)
		*RetParentName = std::move(Parms.RetParentName);
}


// Function BattleActionTask.BattleActionTask_C.CamMoveFixFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CamMoveFixFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CamMoveFixFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.DeltaCounter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDelta                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::DeltaCounter(float InDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "DeltaCounter");

	Params::BattleActionTask_C_DeltaCounter Parms{};

	Parms.InDelta = InDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.DeltaWaitFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::DeltaWaitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "DeltaWaitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.DeadFadeFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::DeadFadeFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "DeadFadeFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.InfoSetSkillFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::InfoSetSkillFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "InfoSetSkillFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.DirToTargetFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::DirToTargetFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "DirToTargetFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.CamMoveSplineEffectFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CamMoveSplineEffectFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CamMoveSplineEffectFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.RailCamEffectFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::RailCamEffectFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "RailCamEffectFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetTaskType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BTL_TASK_COM                          RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::GetTaskType(E_BTL_TASK_COM* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetTaskType");

	Params::BattleActionTask_C_GetTaskType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.CamSetTargetUnit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CamSetTargetUnit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CamSetTargetUnit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.UnitMoveSide
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UnitMoveSide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UnitMoveSide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.CamFovyFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CamFovyFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CamFovyFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.SetUnitMotionFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::SetUnitMotionFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "SetUnitMotionFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.CamRailSkillFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CamRailSkillFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CamRailSkillFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.PlayEffectFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::PlayEffectFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "PlayEffectFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.PlayCamShakeFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::PlayCamShakeFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "PlayCamShakeFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.RadialBlurFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::RadialBlurFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "RadialBlurFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.UnitBackStepFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UnitBackStepFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UnitBackStepFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.UnitAttackFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UnitAttackFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UnitAttackFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.MessageFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::MessageFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "MessageFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.PartyPanelFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::PartyPanelFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "PartyPanelFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.TalkPartyInFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::TalkPartyInFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "TalkPartyInFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.ApplyUnitStateFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::ApplyUnitStateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "ApplyUnitStateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.InfoMessFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::InfoMessFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "InfoMessFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.SummonFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::SummonFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "SummonFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetBIMainWork
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleMain_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetBIMainWork(TScriptInterface<class IBPI_BattleMain_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetBIMainWork");

	Params::BattleActionTask_C_GetBIMainWork Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.GetBIPartySystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleParty_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetBIPartySystem(TScriptInterface<class IBPI_BattleParty_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetBIPartySystem");

	Params::BattleActionTask_C_GetBIPartySystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.GetBIParticleManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleParticleManager_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetBIParticleManager(TScriptInterface<class IBPI_BattleParticleManager_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetBIParticleManager");

	Params::BattleActionTask_C_GetBIParticleManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.LoadUnitModelFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::LoadUnitModelFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "LoadUnitModelFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.SummonAfterFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::SummonAfterFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "SummonAfterFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.PlayerRecomeFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::PlayerRecomeFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "PlayerRecomeFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.UnitActionFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UnitActionFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UnitActionFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetBIPostProcessCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattlePostProcessCtrl_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetBIPostProcessCtrl(TScriptInterface<class IBPI_BattlePostProcessCtrl_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetBIPostProcessCtrl");

	Params::BattleActionTask_C_GetBIPostProcessCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.SwichCommandFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::SwichCommandFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "SwichCommandFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.BlankExistFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::BlankExistFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "BlankExistFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.PlaySEFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::PlaySEFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "PlaySEFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetBISound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleSoundManager_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetBISound(TScriptInterface<class IBPI_BattleSoundManager_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetBISound");

	Params::BattleActionTask_C_GetBISound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.PlayAnimationCameraFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::PlayAnimationCameraFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "PlayAnimationCameraFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.CallSummonFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CallSummonFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CallSummonFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.CallSkillEventFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CallSkillEventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CallSkillEventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.UnitMoveFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UnitMoveFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UnitMoveFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.DisplayFadeFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::DisplayFadeFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "DisplayFadeFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetBITaskFactory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_BattleTaskFactory_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetBITaskFactory(TScriptInterface<class IBPI_BattleTaskFactory_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetBITaskFactory");

	Params::BattleActionTask_C_GetBITaskFactory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.AddDecal
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddDecal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddDecal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddHitLight
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddHitLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddHitLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddSkillLight
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddSkillLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddSkillLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.ExtActMessFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::ExtActMessFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "ExtActMessFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddDecalToEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddDecalToEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddDecalToEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.UnitShakeFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UnitShakeFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UnitShakeFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.UtilIconFunc
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UtilIconFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UtilIconFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.PlaySEUnitAttachFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::PlaySEUnitAttachFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "PlaySEUnitAttachFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetBPI_PTMemInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_PTMemDataInterface>AsBPI_PTMem_Data_Interface                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetBPI_PTMemInterface(TScriptInterface<class IBPI_PTMemDataInterface>* AsBPI_PTMem_Data_Interface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetBPI_PTMemInterface");

	Params::BattleActionTask_C_GetBPI_PTMemInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsBPI_PTMem_Data_Interface != nullptr)
		*AsBPI_PTMem_Data_Interface = Parms.AsBPI_PTMem_Data_Interface;
}


// Function BattleActionTask.BattleActionTask_C.AddMagGaugeFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddMagGaugeFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddMagGaugeFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddReichiPoint
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddReichiPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddReichiPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetBPI_PTUnitInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_PTBPInterface_C>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetBPI_PTUnitInterface(TScriptInterface<class IBPI_PTBPInterface_C>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetBPI_PTUnitInterface");

	Params::BattleActionTask_C_GetBPI_PTUnitInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.AddPlayAbsorptionEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddPlayAbsorptionEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddPlayAbsorptionEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetBPI_PTUtilInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_PTUtilInterface>RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetBPI_PTUtilInterface(TScriptInterface<class IBPI_PTUtilInterface>* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetBPI_PTUtilInterface");

	Params::BattleActionTask_C_GetBPI_PTUtilInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function BattleActionTask.BattleActionTask_C.FindUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharaBase_C*                     Unit                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::FindUnit(int32 PartyIndex, class ACharaBase_C** Unit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "FindUnit");

	Params::BattleActionTask_C_FindUnit Parms{};

	Parms.PartyIndex = PartyIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Unit != nullptr)
		*Unit = Parms.Unit;
}


// Function BattleActionTask.BattleActionTask_C.BeginHitStop
// (Protected, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::BeginHitStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "BeginHitStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddCameraDOF
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddCameraDOF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddCameraDOF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.Update
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDelta                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::Update(float InDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "Update");

	Params::BattleActionTask_C_Update Parms{};

	Parms.InDelta = InDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.AddPressIcon
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddPressIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddPressIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddUplifting
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddUplifting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddUplifting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddReserveDestroyActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::AddReserveDestroyActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddReserveDestroyActor");

	Params::BattleActionTask_C_AddReserveDestroyActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.FirstSetting
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::FirstSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "FirstSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.BeHome
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::BeHome()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "BeHome");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.UnitVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UnitVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UnitVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddSetActorTransform
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddSetActorTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddSetActorTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddSummonTsukuyomi
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddSummonTsukuyomi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddSummonTsukuyomi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddDrawPlayerUpliftingGauge
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddDrawPlayerUpliftingGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddDrawPlayerUpliftingGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddInfoMessByLabel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddInfoMessByLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddInfoMessByLabel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetBPI_MainInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_MainInterface>NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetBPI_MainInterface(TScriptInterface<class IBPI_MainInterface>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetBPI_MainInterface");

	Params::BattleActionTask_C_GetBPI_MainInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BattleActionTask.BattleActionTask_C.ResetAbsorptionEffectMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::ResetAbsorptionEffectMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "ResetAbsorptionEffectMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.CallCameraCurrentForce
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CallCameraCurrentForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CallCameraCurrentForce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.StopAllSE
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::StopAllSE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "StopAllSE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.SetFinish
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::SetFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "SetFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.AddIgnoreSkillSkip
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::AddIgnoreSkillSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "AddIgnoreSkillSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.StopAllParticle
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::StopAllParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "StopAllParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.OpenTutorialWindow
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::OpenTutorialWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "OpenTutorialWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetPlayRate
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   PlayRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::GetPlayRate(float* PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetPlayRate");

	Params::BattleActionTask_C_GetPlayRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayRate != nullptr)
		*PlayRate = Parms.PlayRate;
}


// Function BattleActionTask.BattleActionTask_C.UnitScaleResetFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UnitScaleResetFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UnitScaleResetFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.CtrlPostProcess
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CtrlPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CtrlPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.GetSendData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_TASK_COM                          Command                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PecID                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBtlTaskData                     SendData                                               (Parm, OutParm)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattleActionTask_C::GetSendData(E_BTL_TASK_COM* Command, int32* PecID, struct FBtlTaskData* SendData, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetSendData");

	Params::BattleActionTask_C_GetSendData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Command != nullptr)
		*Command = Parms.Command;

	if (PecID != nullptr)
		*PecID = Parms.PecID;

	if (SendData != nullptr)
		*SendData = std::move(Parms.SendData);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BattleActionTask.BattleActionTask_C.ReceiveData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_TASK_COM                          Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PecID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBtlTaskData                     ReceivedData                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FBtlTaskData                     ReceivedData2                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABattleActionTask_C::ReceiveData(E_BTL_TASK_COM& Command, int32& PecID, struct FBtlTaskData& ReceivedData, struct FBtlTaskData& ReceivedData2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "ReceiveData");

	Params::BattleActionTask_C_ReceiveData Parms{};

	Parms.Command = Command;
	Parms.PecID = PecID;
	Parms.ReceivedData = std::move(ReceivedData);
	Parms.ReceivedData2 = std::move(ReceivedData2);

	UObject::ProcessEvent(Func, &Parms);

	Command = Parms.Command;
	PecID = Parms.PecID;
	ReceivedData = std::move(Parms.ReceivedData);
	ReceivedData2 = std::move(Parms.ReceivedData2);
}


// Function BattleActionTask.BattleActionTask_C.RetrieveReceivedData
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTL_TASK_COM                          Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBtlTaskData                     ReceivedData                                           (Parm, OutParm)
// struct FBtlTaskData                     RecievedData2                                          (Parm, OutParm)

void ABattleActionTask_C::RetrieveReceivedData(E_BTL_TASK_COM Command, struct FBtlTaskData* ReceivedData, struct FBtlTaskData* RecievedData2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "RetrieveReceivedData");

	Params::BattleActionTask_C_RetrieveReceivedData Parms{};

	Parms.Command = Command;

	UObject::ProcessEvent(Func, &Parms);

	if (ReceivedData != nullptr)
		*ReceivedData = std::move(Parms.ReceivedData);

	if (RecievedData2 != nullptr)
		*RecievedData2 = std::move(Parms.RecievedData2);
}


// Function BattleActionTask.BattleActionTask_C.TaskFinalize
// (Private, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::TaskFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "TaskFinalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.CheckAction
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABattleActionTask_C::CheckAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CheckAction");

	Params::BattleActionTask_C_CheckAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattleActionTask.BattleActionTask_C.CheckCancel
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABattleActionTask_C::CheckCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CheckCancel");

	Params::BattleActionTask_C_CheckCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BattleActionTask.BattleActionTask_C.WriteTaskInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Step                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::WriteTaskInfo(int32 Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "WriteTaskInfo");

	Params::BattleActionTask_C_WriteTaskInfo Parms{};

	Parms.Step = Step;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleActionTask.BattleActionTask_C.GetOverrunSec
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   OeverrunSec                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::GetOverrunSec(float* OeverrunSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "GetOverrunSec");

	Params::BattleActionTask_C_GetOverrunSec Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OeverrunSec != nullptr)
		*OeverrunSec = Parms.OeverrunSec;
}


// Function BattleActionTask.BattleActionTask_C.CalcRemainWaitSec
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RemainSec                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattleActionTask_C::CalcRemainWaitSec(float* RemainSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CalcRemainWaitSec");

	Params::BattleActionTask_C_CalcRemainWaitSec Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainSec != nullptr)
		*RemainSec = Parms.RemainSec;
}


// Function BattleActionTask.BattleActionTask_C.ResetCharaParticle
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::ResetCharaParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "ResetCharaParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.UnlockAchievement
// (Public, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::UnlockAchievement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "UnlockAchievement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleActionTask.BattleActionTask_C.CtrlCharaMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABattleActionTask_C::CtrlCharaMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleActionTask_C", "CtrlCharaMaterial");

	UObject::ProcessEvent(Func, nullptr);
}

}

