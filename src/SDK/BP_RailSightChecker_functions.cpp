#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RailSightChecker

#include "Basic.hpp"

#include "BP_RailSightChecker_classes.hpp"
#include "BP_RailSightChecker_parameters.hpp"


namespace SDK
{

// Function BP_RailSightChecker.BP_RailSightChecker_C.CheckObstruction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Divide                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                TraceObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsClear                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_RailSightChecker_C::CheckObstruction(int32 Divide, TArray<EObjectTypeQuery>& TraceObject, bool* IsClear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailSightChecker_C", "CheckObstruction");

	Params::BP_RailSightChecker_C_CheckObstruction Parms{};

	Parms.Divide = Divide;
	Parms.TraceObject = std::move(TraceObject);

	UObject::ProcessEvent(Func, &Parms);

	TraceObject = std::move(Parms.TraceObject);

	if (IsClear != nullptr)
		*IsClear = Parms.IsClear;
}


// Function BP_RailSightChecker.BP_RailSightChecker_C.SetCheckData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FTransform                       OffsetTransform                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// TArray<struct FCustomSplinePoint>       SplinePoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FRigRailPlayInfo                 PlayInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// float                                   AdjustScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RailSightChecker_C::SetCheckData(struct FTransform& Position, struct FTransform& OffsetTransform, TArray<struct FCustomSplinePoint>& SplinePoint, struct FRigRailPlayInfo& PlayInfo, float AdjustScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailSightChecker_C", "SetCheckData");

	Params::BP_RailSightChecker_C_SetCheckData Parms{};

	Parms.Position = std::move(Position);
	Parms.OffsetTransform = std::move(OffsetTransform);
	Parms.SplinePoint = std::move(SplinePoint);
	Parms.PlayInfo = std::move(PlayInfo);
	Parms.AdjustScale = AdjustScale;

	UObject::ProcessEvent(Func, &Parms);

	Position = std::move(Parms.Position);
	OffsetTransform = std::move(Parms.OffsetTransform);
	SplinePoint = std::move(Parms.SplinePoint);
	PlayInfo = std::move(Parms.PlayInfo);
}


// Function BP_RailSightChecker.BP_RailSightChecker_C.SetTargetLocation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RailSightChecker_C::SetTargetLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailSightChecker_C", "SetTargetLocation");

	Params::BP_RailSightChecker_C_SetTargetLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RailSightChecker.BP_RailSightChecker_C.ResetIgnoreActor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RailSightChecker_C::ResetIgnoreActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailSightChecker_C", "ResetIgnoreActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RailSightChecker.BP_RailSightChecker_C.AddIgnoreActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           IgnoreActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RailSightChecker_C::AddIgnoreActor(class AActor*& IgnoreActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RailSightChecker_C", "AddIgnoreActor");

	Params::BP_RailSightChecker_C_AddIgnoreActor Parms{};

	Parms.IgnoreActor = IgnoreActor;

	UObject::ProcessEvent(Func, &Parms);

	IgnoreActor = Parms.IgnoreActor;
}

}

