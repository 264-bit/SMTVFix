#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_NaviDevilGimmick

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_NaviDevilGimmick.BPI_NaviDevilGimmick_C.BPI_GetNaviGimmickCategory
// 0x0004 (0x0004 - 0x0000)
struct BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickCategory final
{
public:
	int32                                         Category;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickCategory) == 0x000004, "Wrong alignment on BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickCategory");
static_assert(sizeof(BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickCategory) == 0x000004, "Wrong size on BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickCategory");
static_assert(offsetof(BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickCategory, Category) == 0x000000, "Member 'BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickCategory::Category' has a wrong offset!");

// Function BPI_NaviDevilGimmick.BPI_NaviDevilGimmick_C.BPI_GetNaviGimmickExistNum
// 0x0004 (0x0004 - 0x0000)
struct BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickExistNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickExistNum) == 0x000004, "Wrong alignment on BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickExistNum");
static_assert(sizeof(BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickExistNum) == 0x000004, "Wrong size on BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickExistNum");
static_assert(offsetof(BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickExistNum, Num) == 0x000000, "Member 'BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickExistNum::Num' has a wrong offset!");

// Function BPI_NaviDevilGimmick.BPI_NaviDevilGimmick_C.BPI_GetNaviGimmickSaveID
// 0x0004 (0x0004 - 0x0000)
struct BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickSaveID final
{
public:
	int32                                         SaveId;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickSaveID) == 0x000004, "Wrong alignment on BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickSaveID");
static_assert(sizeof(BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickSaveID) == 0x000004, "Wrong size on BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickSaveID");
static_assert(offsetof(BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickSaveID, SaveId) == 0x000000, "Member 'BPI_NaviDevilGimmick_C_BPI_GetNaviGimmickSaveID::SaveId' has a wrong offset!");

// Function BPI_NaviDevilGimmick.BPI_NaviDevilGimmick_C.BPI_SetNaviGimmickActive
// 0x0001 (0x0001 - 0x0000)
struct BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickActive) == 0x000001, "Wrong alignment on BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickActive");
static_assert(sizeof(BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickActive) == 0x000001, "Wrong size on BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickActive");
static_assert(offsetof(BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickActive, Active) == 0x000000, "Member 'BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickActive::Active' has a wrong offset!");

// Function BPI_NaviDevilGimmick.BPI_NaviDevilGimmick_C.BPI_SetNaviGimmickDebugView
// 0x0001 (0x0001 - 0x0000)
struct BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickDebugView final
{
public:
	bool                                          View;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickDebugView) == 0x000001, "Wrong alignment on BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickDebugView");
static_assert(sizeof(BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickDebugView) == 0x000001, "Wrong size on BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickDebugView");
static_assert(offsetof(BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickDebugView, View) == 0x000000, "Member 'BPI_NaviDevilGimmick_C_BPI_SetNaviGimmickDebugView::View' has a wrong offset!");

// Function BPI_NaviDevilGimmick.BPI_NaviDevilGimmick_C.BPI_CanExistNaviGimmick
// 0x0001 (0x0001 - 0x0000)
struct BPI_NaviDevilGimmick_C_BPI_CanExistNaviGimmick final
{
public:
	bool                                          CanExist;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NaviDevilGimmick_C_BPI_CanExistNaviGimmick) == 0x000001, "Wrong alignment on BPI_NaviDevilGimmick_C_BPI_CanExistNaviGimmick");
static_assert(sizeof(BPI_NaviDevilGimmick_C_BPI_CanExistNaviGimmick) == 0x000001, "Wrong size on BPI_NaviDevilGimmick_C_BPI_CanExistNaviGimmick");
static_assert(offsetof(BPI_NaviDevilGimmick_C_BPI_CanExistNaviGimmick, CanExist) == 0x000000, "Member 'BPI_NaviDevilGimmick_C_BPI_CanExistNaviGimmick::CanExist' has a wrong offset!");

// Function BPI_NaviDevilGimmick.BPI_NaviDevilGimmick_C.BPI_IsCheckObstacle_WhenGotoGimmick
// 0x0001 (0x0001 - 0x0000)
struct BPI_NaviDevilGimmick_C_BPI_IsCheckObstacle_WhenGotoGimmick final
{
public:
	bool                                          CheckObstacle_WhenGotoGimmick;                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NaviDevilGimmick_C_BPI_IsCheckObstacle_WhenGotoGimmick) == 0x000001, "Wrong alignment on BPI_NaviDevilGimmick_C_BPI_IsCheckObstacle_WhenGotoGimmick");
static_assert(sizeof(BPI_NaviDevilGimmick_C_BPI_IsCheckObstacle_WhenGotoGimmick) == 0x000001, "Wrong size on BPI_NaviDevilGimmick_C_BPI_IsCheckObstacle_WhenGotoGimmick");
static_assert(offsetof(BPI_NaviDevilGimmick_C_BPI_IsCheckObstacle_WhenGotoGimmick, CheckObstacle_WhenGotoGimmick) == 0x000000, "Member 'BPI_NaviDevilGimmick_C_BPI_IsCheckObstacle_WhenGotoGimmick::CheckObstacle_WhenGotoGimmick' has a wrong offset!");

// Function BPI_NaviDevilGimmick.BPI_NaviDevilGimmick_C.BPI_IsCheckGotoGimmickMoving
// 0x0001 (0x0001 - 0x0000)
struct BPI_NaviDevilGimmick_C_BPI_IsCheckGotoGimmickMoving final
{
public:
	bool                                          CheckGotoGimmickMoving;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_NaviDevilGimmick_C_BPI_IsCheckGotoGimmickMoving) == 0x000001, "Wrong alignment on BPI_NaviDevilGimmick_C_BPI_IsCheckGotoGimmickMoving");
static_assert(sizeof(BPI_NaviDevilGimmick_C_BPI_IsCheckGotoGimmickMoving) == 0x000001, "Wrong size on BPI_NaviDevilGimmick_C_BPI_IsCheckGotoGimmickMoving");
static_assert(offsetof(BPI_NaviDevilGimmick_C_BPI_IsCheckGotoGimmickMoving, CheckGotoGimmickMoving) == 0x000000, "Member 'BPI_NaviDevilGimmick_C_BPI_IsCheckGotoGimmickMoving::CheckGotoGimmickMoving' has a wrong offset!");

}

