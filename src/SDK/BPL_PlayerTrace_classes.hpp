#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_PlayerTrace

#include "Basic.hpp"

#include "E_DEBUG_TRACE_MAP_TYPE_structs.hpp"
#include "Engine_classes.hpp"
#include "E_DEBUG_TRACE_NKM_structs.hpp"
#include "E_DEBUG_TRACE_BTL_END_TYPE_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_PlayerTrace.BPL_PlayerTrace_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_PlayerTrace_C final : public UBlueprintFunctionLibrary
{
public:
	static void Json_SkillPost(int32 SkillId, int32 From_CharaID, TArray<int32>& Target_CharaID, bool PlayerSide_, class UObject* __WorldContext);
	static void Json_CriticalPost(int32 CharaID, class UObject* __WorldContext);
	static void Json_CounterPost(int32 CharaID, class UObject* __WorldContext);
	static void Json_BattleStart(int32 EncountID, class UObject* __WorldContext);
	static void Json_BattleEnd(E_DEBUG_TRACE_BTL_END_TYPE Result, class UObject* __WorldContext);
	static void Json_NkmIN(int32 Nkm_in, E_DEBUG_TRACE_NKM Type, class UObject* __WorldContext);
	static void Json_NkmOUT(int32 Nkm_out, E_DEBUG_TRACE_NKM Type, class UObject* __WorldContext);
	static void Json_CounterAdd(int32 EncountAdd, int32 MagatukaNum, class UObject* __WorldContext);
	static void Json_CounterGet(class UObject* __WorldContext, int32* Trace_Counter_Encount_Num, int32* Trace_Counter_Magatukanum);
	static void Json_MapGimicPost(E_DEBUG_TRACE_MAP_TYPE Type, int32 ID, class UObject* __WorldContext);
	static void Json_por(class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_PlayerTrace_C">();
	}
	static class UBPL_PlayerTrace_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_PlayerTrace_C>();
	}
};
static_assert(alignof(UBPL_PlayerTrace_C) == 0x000008, "Wrong alignment on UBPL_PlayerTrace_C");
static_assert(sizeof(UBPL_PlayerTrace_C) == 0x000028, "Wrong size on UBPL_PlayerTrace_C");

}

