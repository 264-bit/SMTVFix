#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_AnalyzeItemStatusCtrl

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_AnalyzeItemStatusCtrl.BPI_AnalyzeItemStatusCtrl_C.StartCtrl
// 0x0010 (0x0010 - 0x0000)
struct BPI_AnalyzeItemStatusCtrl_C_StartCtrl final
{
public:
	class UObject*                                BattleParty;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AnalyzeItemStatusCtrl_C_StartCtrl) == 0x000008, "Wrong alignment on BPI_AnalyzeItemStatusCtrl_C_StartCtrl");
static_assert(sizeof(BPI_AnalyzeItemStatusCtrl_C_StartCtrl) == 0x000010, "Wrong size on BPI_AnalyzeItemStatusCtrl_C_StartCtrl");
static_assert(offsetof(BPI_AnalyzeItemStatusCtrl_C_StartCtrl, BattleParty) == 0x000000, "Member 'BPI_AnalyzeItemStatusCtrl_C_StartCtrl::BattleParty' has a wrong offset!");
static_assert(offsetof(BPI_AnalyzeItemStatusCtrl_C_StartCtrl, PartyIndex) == 0x000008, "Member 'BPI_AnalyzeItemStatusCtrl_C_StartCtrl::PartyIndex' has a wrong offset!");
static_assert(offsetof(BPI_AnalyzeItemStatusCtrl_C_StartCtrl, Success) == 0x00000C, "Member 'BPI_AnalyzeItemStatusCtrl_C_StartCtrl::Success' has a wrong offset!");

// Function BPI_AnalyzeItemStatusCtrl.BPI_AnalyzeItemStatusCtrl_C.StatusTick
// 0x0001 (0x0001 - 0x0000)
struct BPI_AnalyzeItemStatusCtrl_C_StatusTick final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AnalyzeItemStatusCtrl_C_StatusTick) == 0x000001, "Wrong alignment on BPI_AnalyzeItemStatusCtrl_C_StatusTick");
static_assert(sizeof(BPI_AnalyzeItemStatusCtrl_C_StatusTick) == 0x000001, "Wrong size on BPI_AnalyzeItemStatusCtrl_C_StatusTick");
static_assert(offsetof(BPI_AnalyzeItemStatusCtrl_C_StatusTick, IsEnd) == 0x000000, "Member 'BPI_AnalyzeItemStatusCtrl_C_StatusTick::IsEnd' has a wrong offset!");

// Function BPI_AnalyzeItemStatusCtrl.BPI_AnalyzeItemStatusCtrl_C.SetViewEndTask
// 0x0010 (0x0010 - 0x0000)
struct BPI_AnalyzeItemStatusCtrl_C_SetViewEndTask final
{
public:
	class UObject*                                Runner;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AnalyzeItemStatusCtrl_C_SetViewEndTask) == 0x000008, "Wrong alignment on BPI_AnalyzeItemStatusCtrl_C_SetViewEndTask");
static_assert(sizeof(BPI_AnalyzeItemStatusCtrl_C_SetViewEndTask) == 0x000010, "Wrong size on BPI_AnalyzeItemStatusCtrl_C_SetViewEndTask");
static_assert(offsetof(BPI_AnalyzeItemStatusCtrl_C_SetViewEndTask, Runner) == 0x000000, "Member 'BPI_AnalyzeItemStatusCtrl_C_SetViewEndTask::Runner' has a wrong offset!");
static_assert(offsetof(BPI_AnalyzeItemStatusCtrl_C_SetViewEndTask, Success) == 0x000008, "Member 'BPI_AnalyzeItemStatusCtrl_C_SetViewEndTask::Success' has a wrong offset!");

}

