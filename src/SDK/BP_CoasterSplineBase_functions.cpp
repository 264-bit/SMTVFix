#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CoasterSplineBase

#include "Basic.hpp"

#include "BP_CoasterSplineBase_classes.hpp"
#include "BP_CoasterSplineBase_parameters.hpp"


namespace SDK
{

// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.EvtDis_EndMoveSpline__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_CoasterSplineBase_C::EvtDis_EndMoveSpline__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "EvtDis_EndMoveSpline__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.EvtDis_EndShowSpline__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_CoasterSplineBase_C::EvtDis_EndShowSpline__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "EvtDis_EndShowSpline__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.EvtDis_EndActiveSpline__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_CoasterSplineBase_C::EvtDis_EndActiveSpline__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "EvtDis_EndActiveSpline__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.EvtDis_StartMoveSpline__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_CoasterSplineBase_C::EvtDis_StartMoveSpline__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "EvtDis_StartMoveSpline__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.ExecuteUbergraph_BP_CoasterSplineBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CoasterSplineBase_C::ExecuteUbergraph_BP_CoasterSplineBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "ExecuteUbergraph_BP_CoasterSplineBase");

	Params::BP_CoasterSplineBase_C_ExecuteUbergraph_BP_CoasterSplineBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.ShowSpline
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CoasterSplineBase_C::ShowSpline(bool Show, bool Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "ShowSpline");

	Params::BP_CoasterSplineBase_C_ShowSpline Parms{};

	Parms.Show = Show;
	Parms.Anim = Anim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.ActiveSplineAnim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CoasterSplineBase_C::ActiveSplineAnim(bool Active, bool Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "ActiveSplineAnim");

	Params::BP_CoasterSplineBase_C_ActiveSplineAnim Parms{};

	Parms.Active = Active;
	Parms.Anim = Anim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.MoveSpline
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FromStartGimmick                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CoasterSplineBase_C::MoveSpline(bool FromStartGimmick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "MoveSpline");

	Params::BP_CoasterSplineBase_C_MoveSpline Parms{};

	Parms.FromStartGimmick = FromStartGimmick;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.SetOpen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    StartGimmick                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    EndGimmick                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UpdateIcon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UpdateNaviDeactive                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UpdateChain                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CoasterSplineBase_C::SetOpen(bool Open, bool StartGimmick, bool EndGimmick, bool UpdateIcon, bool UpdateNaviDeactive, bool UpdateChain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "SetOpen");

	Params::BP_CoasterSplineBase_C_SetOpen Parms{};

	Parms.Open = Open;
	Parms.StartGimmick = StartGimmick;
	Parms.EndGimmick = EndGimmick;
	Parms.UpdateIcon = UpdateIcon;
	Parms.UpdateNaviDeactive = UpdateNaviDeactive;
	Parms.UpdateChain = UpdateChain;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.GetStartGimmick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CoasterSplineBase_C::GetStartGimmick(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "GetStartGimmick");

	Params::BP_CoasterSplineBase_C_GetStartGimmick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.GetEndGimmick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CoasterSplineBase_C::GetEndGimmick(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "GetEndGimmick");

	Params::BP_CoasterSplineBase_C_GetEndGimmick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.CalcOpen
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CoasterSplineBase_C::CalcOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "CalcOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CoasterSplineBase.BP_CoasterSplineBase_C.ChainOpen
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CoasterSplineBase_C::ChainOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CoasterSplineBase_C", "ChainOpen");

	UObject::ProcessEvent(Func, nullptr);
}

}

