#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Traport

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Traport.BP_Traport_C
// 0x0080 (0x02A0 - 0x0220)
class ABP_Traport_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RyuketsuTableIndex;                                // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRyuketsuData                          RyuketsuData;                                      // 0x0234(0x003C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTransform                             WarpPos;                                           // 0x0270(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void DgGimmickResetOtherMap();
	void IsSameArea(bool* SameArea);
	void DgGimmickResetSameMap(bool SameArea);
	void ReceiveBeginPlay();
	void FinishFadeOut();
	void FinishFadeIn();
	void ExecuteUbergraph_BP_Traport(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Traport_C">();
	}
	static class ABP_Traport_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Traport_C>();
	}
};
static_assert(alignof(ABP_Traport_C) == 0x000010, "Wrong alignment on ABP_Traport_C");
static_assert(sizeof(ABP_Traport_C) == 0x0002A0, "Wrong size on ABP_Traport_C");
static_assert(offsetof(ABP_Traport_C, UberGraphFrame) == 0x000220, "Member 'ABP_Traport_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Traport_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_Traport_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Traport_C, RyuketsuTableIndex) == 0x000230, "Member 'ABP_Traport_C::RyuketsuTableIndex' has a wrong offset!");
static_assert(offsetof(ABP_Traport_C, RyuketsuData) == 0x000234, "Member 'ABP_Traport_C::RyuketsuData' has a wrong offset!");
static_assert(offsetof(ABP_Traport_C, WarpPos) == 0x000270, "Member 'ABP_Traport_C::WarpPos' has a wrong offset!");

}

