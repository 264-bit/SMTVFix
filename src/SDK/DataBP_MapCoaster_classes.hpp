#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DataBP_MapCoaster

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DataBP_MapCoaster.DataBP_MapCoaster_C
// 0x0028 (0x0058 - 0x0030)
class UDataBP_MapCoaster_C final : public UPrimaryDataAsset
{
public:
	struct FVector                                CameraOffset;                                      // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLookOffset;                                  // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraFOV;                                         // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraRInterpSpeed;                                // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookDistance;                                      // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DataBP_MapCoaster_C">();
	}
	static class UDataBP_MapCoaster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDataBP_MapCoaster_C>();
	}
};
static_assert(alignof(UDataBP_MapCoaster_C) == 0x000008, "Wrong alignment on UDataBP_MapCoaster_C");
static_assert(sizeof(UDataBP_MapCoaster_C) == 0x000058, "Wrong size on UDataBP_MapCoaster_C");
static_assert(offsetof(UDataBP_MapCoaster_C, CameraOffset) == 0x000030, "Member 'UDataBP_MapCoaster_C::CameraOffset' has a wrong offset!");
static_assert(offsetof(UDataBP_MapCoaster_C, CameraLookOffset) == 0x00003C, "Member 'UDataBP_MapCoaster_C::CameraLookOffset' has a wrong offset!");
static_assert(offsetof(UDataBP_MapCoaster_C, CameraFOV) == 0x000048, "Member 'UDataBP_MapCoaster_C::CameraFOV' has a wrong offset!");
static_assert(offsetof(UDataBP_MapCoaster_C, CameraRInterpSpeed) == 0x00004C, "Member 'UDataBP_MapCoaster_C::CameraRInterpSpeed' has a wrong offset!");
static_assert(offsetof(UDataBP_MapCoaster_C, LookDistance) == 0x000050, "Member 'UDataBP_MapCoaster_C::LookDistance' has a wrong offset!");

}

