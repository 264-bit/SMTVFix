#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CharaExpression_AnimBP

#include "Basic.hpp"

#include "BPI_CharaExpression_AnimBP_classes.hpp"
#include "BPI_CharaExpression_AnimBP_parameters.hpp"


namespace SDK
{

// Function BPI_CharaExpression_AnimBP.BPI_CharaExpression_AnimBP_C.SetExpressionEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharaExpression_AnimBP_C::SetExpressionEnable(int32 Param_Index, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaExpression_AnimBP_C", "SetExpressionEnable");

	Params::BPI_CharaExpression_AnimBP_C_SetExpressionEnable Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharaExpression_AnimBP.BPI_CharaExpression_AnimBP_C.SetExpressionAttenuate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LidExpressionAttenuate                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LipExpressionAttenuate                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharaExpression_AnimBP_C::SetExpressionAttenuate(int32 Param_Index, float LidExpressionAttenuate, float LipExpressionAttenuate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaExpression_AnimBP_C", "SetExpressionAttenuate");

	Params::BPI_CharaExpression_AnimBP_C_SetExpressionAttenuate Parms{};

	Parms.Param_Index = Param_Index;
	Parms.LidExpressionAttenuate = LidExpressionAttenuate;
	Parms.LipExpressionAttenuate = LipExpressionAttenuate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharaExpression_AnimBP.BPI_CharaExpression_AnimBP_C.SetHeadBlendFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BlendFlag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharaExpression_AnimBP_C::SetHeadBlendFlag(bool BlendFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaExpression_AnimBP_C", "SetHeadBlendFlag");

	Params::BPI_CharaExpression_AnimBP_C_SetHeadBlendFlag Parms{};

	Parms.BlendFlag = BlendFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharaExpression_AnimBP.BPI_CharaExpression_AnimBP_C.SetHeadBlendAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequenceBase*                Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharaExpression_AnimBP_C::SetHeadBlendAnimation(class UAnimSequenceBase* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaExpression_AnimBP_C", "SetHeadBlendAnimation");

	Params::BPI_CharaExpression_AnimBP_C_SetHeadBlendAnimation Parms{};

	Parms.Animation = Animation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharaExpression_AnimBP.BPI_CharaExpression_AnimBP_C.SetRotateBlend
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Val                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBlendSpace1D*                    BlendSpace                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharaExpression_AnimBP_C::SetRotateBlend(bool Enable, float Val, class UBlendSpace1D* BlendSpace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaExpression_AnimBP_C", "SetRotateBlend");

	Params::BPI_CharaExpression_AnimBP_C_SetRotateBlend Parms{};

	Parms.Enable = Enable;
	Parms.Val = Val;
	Parms.BlendSpace = BlendSpace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharaExpression_AnimBP.BPI_CharaExpression_AnimBP_C.SetRotateIdleAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequenceBase*                RotateIdle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharaExpression_AnimBP_C::SetRotateIdleAnimation(class UAnimSequenceBase* RotateIdle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaExpression_AnimBP_C", "SetRotateIdleAnimation");

	Params::BPI_CharaExpression_AnimBP_C_SetRotateIdleAnimation Parms{};

	Parms.RotateIdle = RotateIdle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_CharaExpression_AnimBP.BPI_CharaExpression_AnimBP_C.SetRotateAlphaInterpSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   StartSpeed                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EndSpeed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharaExpression_AnimBP_C::SetRotateAlphaInterpSpeed(float StartSpeed, float EndSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharaExpression_AnimBP_C", "SetRotateAlphaInterpSpeed");

	Params::BPI_CharaExpression_AnimBP_C_SetRotateAlphaInterpSpeed Parms{};

	Parms.StartSpeed = StartSpeed;
	Parms.EndSpeed = EndSpeed;

	UObject::ProcessEvent(Func, &Parms);
}

}

